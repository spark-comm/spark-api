// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.31.0
// 	protoc        v4.25.0
// source: user_center/auth/v2/auth.proto

package v2

import (
	_ "github.com/envoyproxy/protoc-gen-validate/validate"
	v2 "github.com/spark-comm/spark-api/api/common/enum/v2"
	v21 "github.com/spark-comm/spark-api/api/common/model/v2"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// 注册/登录 的账号类型
type RegisterType int32

const (
	RegisterType_REGISTER_TYPE_PHONE RegisterType = 0 // 手机号
	RegisterType_REGISTER_TYPE_EMAIL RegisterType = 1 // 邮箱
	RegisterType_REGISTER_TYPE_USER  RegisterType = 2 // 用户名
)

// Enum value maps for RegisterType.
var (
	RegisterType_name = map[int32]string{
		0: "REGISTER_TYPE_PHONE",
		1: "REGISTER_TYPE_EMAIL",
		2: "REGISTER_TYPE_USER",
	}
	RegisterType_value = map[string]int32{
		"REGISTER_TYPE_PHONE": 0,
		"REGISTER_TYPE_EMAIL": 1,
		"REGISTER_TYPE_USER":  2,
	}
)

func (x RegisterType) Enum() *RegisterType {
	p := new(RegisterType)
	*p = x
	return p
}

func (x RegisterType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (RegisterType) Descriptor() protoreflect.EnumDescriptor {
	return file_user_center_auth_v2_auth_proto_enumTypes[0].Descriptor()
}

func (RegisterType) Type() protoreflect.EnumType {
	return &file_user_center_auth_v2_auth_proto_enumTypes[0]
}

func (x RegisterType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use RegisterType.Descriptor instead.
func (RegisterType) EnumDescriptor() ([]byte, []int) {
	return file_user_center_auth_v2_auth_proto_rawDescGZIP(), []int{0}
}

type AccountType int32

const (
	AccountType_ACCOUNT_TYPE_USER_PASSWORD  AccountType = 0 // 用户名+密码
	AccountType_ACCOUNT_TYPE_PHONE_CODE     AccountType = 1 // 手机号+验证码
	AccountType_ACCOUNT_TYPE_PHONE_PASSWORD AccountType = 2 // 手机号+密码
	AccountType_ACCOUNT_TYPE_EMAIL_CODE     AccountType = 3 // 邮箱+验证码
	AccountType_ACCOUNT_TYPE_EMAIL_PASSWORD AccountType = 4 // 邮箱+密码
)

// Enum value maps for AccountType.
var (
	AccountType_name = map[int32]string{
		0: "ACCOUNT_TYPE_USER_PASSWORD",
		1: "ACCOUNT_TYPE_PHONE_CODE",
		2: "ACCOUNT_TYPE_PHONE_PASSWORD",
		3: "ACCOUNT_TYPE_EMAIL_CODE",
		4: "ACCOUNT_TYPE_EMAIL_PASSWORD",
	}
	AccountType_value = map[string]int32{
		"ACCOUNT_TYPE_USER_PASSWORD":  0,
		"ACCOUNT_TYPE_PHONE_CODE":     1,
		"ACCOUNT_TYPE_PHONE_PASSWORD": 2,
		"ACCOUNT_TYPE_EMAIL_CODE":     3,
		"ACCOUNT_TYPE_EMAIL_PASSWORD": 4,
	}
)

func (x AccountType) Enum() *AccountType {
	p := new(AccountType)
	*p = x
	return p
}

func (x AccountType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (AccountType) Descriptor() protoreflect.EnumDescriptor {
	return file_user_center_auth_v2_auth_proto_enumTypes[1].Descriptor()
}

func (AccountType) Type() protoreflect.EnumType {
	return &file_user_center_auth_v2_auth_proto_enumTypes[1]
}

func (x AccountType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use AccountType.Descriptor instead.
func (AccountType) EnumDescriptor() ([]byte, []int) {
	return file_user_center_auth_v2_auth_proto_rawDescGZIP(), []int{1}
}

// 验证码类型
type CodeType int32

const (
	CodeType_CODE_TYPE_PHONE CodeType = 0 // 手机验证码
	CodeType_CODE_TYPE_EMAIL CodeType = 1 // 邮箱验证码
)

// Enum value maps for CodeType.
var (
	CodeType_name = map[int32]string{
		0: "CODE_TYPE_PHONE",
		1: "CODE_TYPE_EMAIL",
	}
	CodeType_value = map[string]int32{
		"CODE_TYPE_PHONE": 0,
		"CODE_TYPE_EMAIL": 1,
	}
)

func (x CodeType) Enum() *CodeType {
	p := new(CodeType)
	*p = x
	return p
}

func (x CodeType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (CodeType) Descriptor() protoreflect.EnumDescriptor {
	return file_user_center_auth_v2_auth_proto_enumTypes[2].Descriptor()
}

func (CodeType) Type() protoreflect.EnumType {
	return &file_user_center_auth_v2_auth_proto_enumTypes[2]
}

func (x CodeType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use CodeType.Descriptor instead.
func (CodeType) EnumDescriptor() ([]byte, []int) {
	return file_user_center_auth_v2_auth_proto_rawDescGZIP(), []int{2}
}

// 认证类型
type AuthorizeType int32

const (
	AuthorizeType_AUTHORIZE_CODE  AuthorizeType = 0 //授权码
	AuthorizeType_AUTHORIZE_TOKEN AuthorizeType = 1 //token
)

// Enum value maps for AuthorizeType.
var (
	AuthorizeType_name = map[int32]string{
		0: "AUTHORIZE_CODE",
		1: "AUTHORIZE_TOKEN",
	}
	AuthorizeType_value = map[string]int32{
		"AUTHORIZE_CODE":  0,
		"AUTHORIZE_TOKEN": 1,
	}
)

func (x AuthorizeType) Enum() *AuthorizeType {
	p := new(AuthorizeType)
	*p = x
	return p
}

func (x AuthorizeType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (AuthorizeType) Descriptor() protoreflect.EnumDescriptor {
	return file_user_center_auth_v2_auth_proto_enumTypes[3].Descriptor()
}

func (AuthorizeType) Type() protoreflect.EnumType {
	return &file_user_center_auth_v2_auth_proto_enumTypes[3]
}

func (x AuthorizeType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use AuthorizeType.Descriptor instead.
func (AuthorizeType) EnumDescriptor() ([]byte, []int) {
	return file_user_center_auth_v2_auth_proto_rawDescGZIP(), []int{3}
}

// 授权 token
type AuthToken struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AccessToken  string            `protobuf:"bytes,1,opt,name=accessToken,proto3" json:"accessToken,omitempty"`
	RefreshToken string            `protobuf:"bytes,2,opt,name=refreshToken,proto3" json:"refreshToken,omitempty"`
	ExpiresAt    int64             `protobuf:"varint,3,opt,name=expiresAt,proto3" json:"expiresAt,omitempty"`
	RefExpiresAt int64             `protobuf:"varint,4,opt,name=refExpiresAt,proto3" json:"refExpiresAt,omitempty"`
	ServerCode   string            `protobuf:"bytes,5,opt,name=serverCode,proto3" json:"serverCode,omitempty"`
	UserId       string            `protobuf:"bytes,6,opt,name=userId,proto3" json:"userId,omitempty"`
	Options      map[string]string `protobuf:"bytes,7,rep,name=options,proto3" json:"options,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"` //更多参数
}

func (x *AuthToken) Reset() {
	*x = AuthToken{}
	if protoimpl.UnsafeEnabled {
		mi := &file_user_center_auth_v2_auth_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AuthToken) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AuthToken) ProtoMessage() {}

func (x *AuthToken) ProtoReflect() protoreflect.Message {
	mi := &file_user_center_auth_v2_auth_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AuthToken.ProtoReflect.Descriptor instead.
func (*AuthToken) Descriptor() ([]byte, []int) {
	return file_user_center_auth_v2_auth_proto_rawDescGZIP(), []int{0}
}

func (x *AuthToken) GetAccessToken() string {
	if x != nil {
		return x.AccessToken
	}
	return ""
}

func (x *AuthToken) GetRefreshToken() string {
	if x != nil {
		return x.RefreshToken
	}
	return ""
}

func (x *AuthToken) GetExpiresAt() int64 {
	if x != nil {
		return x.ExpiresAt
	}
	return 0
}

func (x *AuthToken) GetRefExpiresAt() int64 {
	if x != nil {
		return x.RefExpiresAt
	}
	return 0
}

func (x *AuthToken) GetServerCode() string {
	if x != nil {
		return x.ServerCode
	}
	return ""
}

func (x *AuthToken) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *AuthToken) GetOptions() map[string]string {
	if x != nil {
		return x.Options
	}
	return nil
}

// 账号注册
type RegisterReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Account      string       `protobuf:"bytes,1,opt,name=account,proto3" json:"account,omitempty"`                                                                          //手机号/账号/邮箱
	Password     string       `protobuf:"bytes,2,opt,name=password,proto3" json:"password,omitempty"`                                                                        // 密码
	Proof        string       `protobuf:"bytes,3,opt,name=proof,proto3" json:"proof,omitempty"`                                                                              // 登录凭证 可以是验证码或者密码  根据 AccountType 区分
	RegisterType RegisterType `protobuf:"varint,4,opt,name=register_type,json=registerType,proto3,enum=api.user_center.auth.v2.RegisterType" json:"register_type,omitempty"` // 注册类型类型 0:手机号 1:邮箱 2:账号
	Platform     string       `protobuf:"bytes,5,opt,name=platform,proto3" json:"platform,omitempty"`                                                                        // 来源终端，IOS Android Windows OSX Web MiniWeb Linux
	Nickname     string       `protobuf:"bytes,6,opt,name=nickname,proto3" json:"nickname,omitempty"`                                                                        // 昵称
	AreaCode     int32        `protobuf:"varint,7,opt,name=areaCode,proto3" json:"areaCode,omitempty"`                                                                       // 区号
	ShareCode    string       `protobuf:"bytes,8,opt,name=shareCode,proto3" json:"shareCode,omitempty"`                                                                      // 推广码
	FaceURL      string       `protobuf:"bytes,9,opt,name=faceURL,proto3" json:"faceURL,omitempty"`                                                                          // 头像
	Gender       v2.Gender    `protobuf:"varint,10,opt,name=gender,proto3,enum=api.common.enum.v2.Gender" json:"gender,omitempty"`                                           // 性别；0:未知 1:男 2:女
	Birth        int64        `protobuf:"varint,11,opt,name=birth,proto3" json:"birth,omitempty"`                                                                            // 生日
	Key          string       `protobuf:"bytes,12,opt,name=key,proto3" json:"key,omitempty"`                                                                                 // 验证码的key
}

func (x *RegisterReq) Reset() {
	*x = RegisterReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_user_center_auth_v2_auth_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RegisterReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RegisterReq) ProtoMessage() {}

func (x *RegisterReq) ProtoReflect() protoreflect.Message {
	mi := &file_user_center_auth_v2_auth_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RegisterReq.ProtoReflect.Descriptor instead.
func (*RegisterReq) Descriptor() ([]byte, []int) {
	return file_user_center_auth_v2_auth_proto_rawDescGZIP(), []int{1}
}

func (x *RegisterReq) GetAccount() string {
	if x != nil {
		return x.Account
	}
	return ""
}

func (x *RegisterReq) GetPassword() string {
	if x != nil {
		return x.Password
	}
	return ""
}

func (x *RegisterReq) GetProof() string {
	if x != nil {
		return x.Proof
	}
	return ""
}

func (x *RegisterReq) GetRegisterType() RegisterType {
	if x != nil {
		return x.RegisterType
	}
	return RegisterType_REGISTER_TYPE_PHONE
}

func (x *RegisterReq) GetPlatform() string {
	if x != nil {
		return x.Platform
	}
	return ""
}

func (x *RegisterReq) GetNickname() string {
	if x != nil {
		return x.Nickname
	}
	return ""
}

func (x *RegisterReq) GetAreaCode() int32 {
	if x != nil {
		return x.AreaCode
	}
	return 0
}

func (x *RegisterReq) GetShareCode() string {
	if x != nil {
		return x.ShareCode
	}
	return ""
}

func (x *RegisterReq) GetFaceURL() string {
	if x != nil {
		return x.FaceURL
	}
	return ""
}

func (x *RegisterReq) GetGender() v2.Gender {
	if x != nil {
		return x.Gender
	}
	return v2.Gender(0)
}

func (x *RegisterReq) GetBirth() int64 {
	if x != nil {
		return x.Birth
	}
	return 0
}

func (x *RegisterReq) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

type RegisterReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId string `protobuf:"bytes,1,opt,name=userId,proto3" json:"userId,omitempty"` // 用户id
}

func (x *RegisterReply) Reset() {
	*x = RegisterReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_user_center_auth_v2_auth_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RegisterReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RegisterReply) ProtoMessage() {}

func (x *RegisterReply) ProtoReflect() protoreflect.Message {
	mi := &file_user_center_auth_v2_auth_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RegisterReply.ProtoReflect.Descriptor instead.
func (*RegisterReply) Descriptor() ([]byte, []int) {
	return file_user_center_auth_v2_auth_proto_rawDescGZIP(), []int{2}
}

func (x *RegisterReply) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

// 账号登录
type LoginReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Account      string        `protobuf:"bytes,1,opt,name=account,proto3" json:"account,omitempty"`                                                       //手机号或账号
	Proof        string        `protobuf:"bytes,2,opt,name=proof,proto3" json:"proof,omitempty"`                                                           // 登录凭证 可以是验证码或者密码  根据 AccountType 区分
	AccountType  AccountType   `protobuf:"varint,3,opt,name=accountType,proto3,enum=api.user_center.auth.v2.AccountType" json:"accountType,omitempty"`     //登录的账号类型 0:用户名+密码 1:手机号+验证码 2:手机号+密码 3:邮箱+验证码 4:邮箱+密码
	ResponseType AuthorizeType `protobuf:"varint,4,opt,name=responseType,proto3,enum=api.user_center.auth.v2.AuthorizeType" json:"responseType,omitempty"` //响应的类型 0:授权码 1:token
	Platform     string        `protobuf:"bytes,5,opt,name=platform,proto3" json:"platform,omitempty"`                                                     // 来源终端，IOS Android Windows OSX Web MiniWeb Linux
	Node         string        `protobuf:"bytes,6,opt,name=node,proto3" json:"node,omitempty"`                                                             // 节点 id
	Scope        []string      `protobuf:"bytes,7,rep,name=scope,proto3" json:"scope,omitempty"`                                                           // 申请的权限
	ResNodeInfo  bool          `protobuf:"varint,8,opt,name=resNodeInfo,proto3" json:"resNodeInfo,omitempty"`                                              //是否需要显示节点信息
	Key          string        `protobuf:"bytes,12,opt,name=key,proto3" json:"key,omitempty"`                                                              // 验证码的key
}

func (x *LoginReq) Reset() {
	*x = LoginReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_user_center_auth_v2_auth_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LoginReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LoginReq) ProtoMessage() {}

func (x *LoginReq) ProtoReflect() protoreflect.Message {
	mi := &file_user_center_auth_v2_auth_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LoginReq.ProtoReflect.Descriptor instead.
func (*LoginReq) Descriptor() ([]byte, []int) {
	return file_user_center_auth_v2_auth_proto_rawDescGZIP(), []int{3}
}

func (x *LoginReq) GetAccount() string {
	if x != nil {
		return x.Account
	}
	return ""
}

func (x *LoginReq) GetProof() string {
	if x != nil {
		return x.Proof
	}
	return ""
}

func (x *LoginReq) GetAccountType() AccountType {
	if x != nil {
		return x.AccountType
	}
	return AccountType_ACCOUNT_TYPE_USER_PASSWORD
}

func (x *LoginReq) GetResponseType() AuthorizeType {
	if x != nil {
		return x.ResponseType
	}
	return AuthorizeType_AUTHORIZE_CODE
}

func (x *LoginReq) GetPlatform() string {
	if x != nil {
		return x.Platform
	}
	return ""
}

func (x *LoginReq) GetNode() string {
	if x != nil {
		return x.Node
	}
	return ""
}

func (x *LoginReq) GetScope() []string {
	if x != nil {
		return x.Scope
	}
	return nil
}

func (x *LoginReq) GetResNodeInfo() bool {
	if x != nil {
		return x.ResNodeInfo
	}
	return false
}

func (x *LoginReq) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

type LoginReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AuthToken         *AuthToken    `protobuf:"bytes,1,opt,name=authToken,proto3" json:"authToken,omitempty"`                 //token
	AuthorizationCode string        `protobuf:"bytes,2,opt,name=authorizationCode,proto3" json:"authorizationCode,omitempty"` //授权码
	Node              *v21.NodeBase `protobuf:"bytes,3,opt,name=node,proto3" json:"node,omitempty"`                           //节点信息
	Managers          []string      `protobuf:"bytes,4,rep,name=managers,proto3" json:"managers,omitempty"`                   //平台节点信息
}

func (x *LoginReply) Reset() {
	*x = LoginReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_user_center_auth_v2_auth_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LoginReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LoginReply) ProtoMessage() {}

func (x *LoginReply) ProtoReflect() protoreflect.Message {
	mi := &file_user_center_auth_v2_auth_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LoginReply.ProtoReflect.Descriptor instead.
func (*LoginReply) Descriptor() ([]byte, []int) {
	return file_user_center_auth_v2_auth_proto_rawDescGZIP(), []int{4}
}

func (x *LoginReply) GetAuthToken() *AuthToken {
	if x != nil {
		return x.AuthToken
	}
	return nil
}

func (x *LoginReply) GetAuthorizationCode() string {
	if x != nil {
		return x.AuthorizationCode
	}
	return ""
}

func (x *LoginReply) GetNode() *v21.NodeBase {
	if x != nil {
		return x.Node
	}
	return nil
}

func (x *LoginReply) GetManagers() []string {
	if x != nil {
		return x.Managers
	}
	return nil
}

// 销毁token
type DestructionTokenReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AccessToken string `protobuf:"bytes,1,opt,name=accessToken,proto3" json:"accessToken,omitempty"` // access token
}

func (x *DestructionTokenReq) Reset() {
	*x = DestructionTokenReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_user_center_auth_v2_auth_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DestructionTokenReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DestructionTokenReq) ProtoMessage() {}

func (x *DestructionTokenReq) ProtoReflect() protoreflect.Message {
	mi := &file_user_center_auth_v2_auth_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DestructionTokenReq.ProtoReflect.Descriptor instead.
func (*DestructionTokenReq) Descriptor() ([]byte, []int) {
	return file_user_center_auth_v2_auth_proto_rawDescGZIP(), []int{5}
}

func (x *DestructionTokenReq) GetAccessToken() string {
	if x != nil {
		return x.AccessToken
	}
	return ""
}

type DestructionTokenReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *DestructionTokenReply) Reset() {
	*x = DestructionTokenReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_user_center_auth_v2_auth_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DestructionTokenReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DestructionTokenReply) ProtoMessage() {}

func (x *DestructionTokenReply) ProtoReflect() protoreflect.Message {
	mi := &file_user_center_auth_v2_auth_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DestructionTokenReply.ProtoReflect.Descriptor instead.
func (*DestructionTokenReply) Descriptor() ([]byte, []int) {
	return file_user_center_auth_v2_auth_proto_rawDescGZIP(), []int{6}
}

// token 刷新
type RefTokenReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RefToken    string `protobuf:"bytes,1,opt,name=refToken,proto3" json:"refToken,omitempty"`        // 刷新 token
	ResNodeInfo bool   `protobuf:"varint,2,opt,name=resNodeInfo,proto3" json:"resNodeInfo,omitempty"` //是否需要显示节点信息
	Node        string `protobuf:"bytes,3,opt,name=node,proto3" json:"node,omitempty"`                // 节点 id
}

func (x *RefTokenReq) Reset() {
	*x = RefTokenReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_user_center_auth_v2_auth_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RefTokenReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RefTokenReq) ProtoMessage() {}

func (x *RefTokenReq) ProtoReflect() protoreflect.Message {
	mi := &file_user_center_auth_v2_auth_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RefTokenReq.ProtoReflect.Descriptor instead.
func (*RefTokenReq) Descriptor() ([]byte, []int) {
	return file_user_center_auth_v2_auth_proto_rawDescGZIP(), []int{7}
}

func (x *RefTokenReq) GetRefToken() string {
	if x != nil {
		return x.RefToken
	}
	return ""
}

func (x *RefTokenReq) GetResNodeInfo() bool {
	if x != nil {
		return x.ResNodeInfo
	}
	return false
}

func (x *RefTokenReq) GetNode() string {
	if x != nil {
		return x.Node
	}
	return ""
}

type RefTokenReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AuthToken *AuthToken    `protobuf:"bytes,1,opt,name=authToken,proto3" json:"authToken,omitempty"`
	Node      *v21.NodeBase `protobuf:"bytes,2,opt,name=node,proto3" json:"node,omitempty"`         //节点信息
	Managers  []string      `protobuf:"bytes,3,rep,name=managers,proto3" json:"managers,omitempty"` //平台节点信息
}

func (x *RefTokenReply) Reset() {
	*x = RefTokenReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_user_center_auth_v2_auth_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RefTokenReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RefTokenReply) ProtoMessage() {}

func (x *RefTokenReply) ProtoReflect() protoreflect.Message {
	mi := &file_user_center_auth_v2_auth_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RefTokenReply.ProtoReflect.Descriptor instead.
func (*RefTokenReply) Descriptor() ([]byte, []int) {
	return file_user_center_auth_v2_auth_proto_rawDescGZIP(), []int{8}
}

func (x *RefTokenReply) GetAuthToken() *AuthToken {
	if x != nil {
		return x.AuthToken
	}
	return nil
}

func (x *RefTokenReply) GetNode() *v21.NodeBase {
	if x != nil {
		return x.Node
	}
	return nil
}

func (x *RefTokenReply) GetManagers() []string {
	if x != nil {
		return x.Managers
	}
	return nil
}

// token 验证
type VerifyTokenReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AccessToken   string        `protobuf:"bytes,1,opt,name=accessToken,proto3" json:"accessToken,omitempty"`                                                 // 验证 token
	AuthorizeType AuthorizeType `protobuf:"varint,2,opt,name=authorizeType,proto3,enum=api.user_center.auth.v2.AuthorizeType" json:"authorizeType,omitempty"` //认证类型；0 授权码 1 token
}

func (x *VerifyTokenReq) Reset() {
	*x = VerifyTokenReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_user_center_auth_v2_auth_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VerifyTokenReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VerifyTokenReq) ProtoMessage() {}

func (x *VerifyTokenReq) ProtoReflect() protoreflect.Message {
	mi := &file_user_center_auth_v2_auth_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VerifyTokenReq.ProtoReflect.Descriptor instead.
func (*VerifyTokenReq) Descriptor() ([]byte, []int) {
	return file_user_center_auth_v2_auth_proto_rawDescGZIP(), []int{9}
}

func (x *VerifyTokenReq) GetAccessToken() string {
	if x != nil {
		return x.AccessToken
	}
	return ""
}

func (x *VerifyTokenReq) GetAuthorizeType() AuthorizeType {
	if x != nil {
		return x.AuthorizeType
	}
	return AuthorizeType_AUTHORIZE_CODE
}

type VerifyTokenReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AuthToken *AuthToken `protobuf:"bytes,1,opt,name=authToken,proto3" json:"authToken,omitempty"`
}

func (x *VerifyTokenReply) Reset() {
	*x = VerifyTokenReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_user_center_auth_v2_auth_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VerifyTokenReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VerifyTokenReply) ProtoMessage() {}

func (x *VerifyTokenReply) ProtoReflect() protoreflect.Message {
	mi := &file_user_center_auth_v2_auth_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VerifyTokenReply.ProtoReflect.Descriptor instead.
func (*VerifyTokenReply) Descriptor() ([]byte, []int) {
	return file_user_center_auth_v2_auth_proto_rawDescGZIP(), []int{10}
}

func (x *VerifyTokenReply) GetAuthToken() *AuthToken {
	if x != nil {
		return x.AuthToken
	}
	return nil
}

// 发送验证码
type SendCodeReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Account  string   `protobuf:"bytes,1,opt,name=account,proto3" json:"account,omitempty"`
	CodeType CodeType `protobuf:"varint,2,opt,name=codeType,proto3,enum=api.user_center.auth.v2.CodeType" json:"codeType,omitempty"` //验证码类型 0:手机验证码 1:邮箱验证码
	AreaCode int64    `protobuf:"varint,3,opt,name=areaCode,proto3" json:"areaCode,omitempty"`
}

func (x *SendCodeReq) Reset() {
	*x = SendCodeReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_user_center_auth_v2_auth_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SendCodeReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SendCodeReq) ProtoMessage() {}

func (x *SendCodeReq) ProtoReflect() protoreflect.Message {
	mi := &file_user_center_auth_v2_auth_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SendCodeReq.ProtoReflect.Descriptor instead.
func (*SendCodeReq) Descriptor() ([]byte, []int) {
	return file_user_center_auth_v2_auth_proto_rawDescGZIP(), []int{11}
}

func (x *SendCodeReq) GetAccount() string {
	if x != nil {
		return x.Account
	}
	return ""
}

func (x *SendCodeReq) GetCodeType() CodeType {
	if x != nil {
		return x.CodeType
	}
	return CodeType_CODE_TYPE_PHONE
}

func (x *SendCodeReq) GetAreaCode() int64 {
	if x != nil {
		return x.AreaCode
	}
	return 0
}

type SendCodeReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Seconds   int64  `protobuf:"varint,1,opt,name=seconds,proto3" json:"seconds,omitempty"`     // 有效时长
	ExpiresAt int64  `protobuf:"varint,2,opt,name=expiresAt,proto3" json:"expiresAt,omitempty"` // 失效时间戳
	Key       string `protobuf:"bytes,3,opt,name=key,proto3" json:"key,omitempty"`              //验证码返回的key
}

func (x *SendCodeReply) Reset() {
	*x = SendCodeReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_user_center_auth_v2_auth_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SendCodeReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SendCodeReply) ProtoMessage() {}

func (x *SendCodeReply) ProtoReflect() protoreflect.Message {
	mi := &file_user_center_auth_v2_auth_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SendCodeReply.ProtoReflect.Descriptor instead.
func (*SendCodeReply) Descriptor() ([]byte, []int) {
	return file_user_center_auth_v2_auth_proto_rawDescGZIP(), []int{12}
}

func (x *SendCodeReply) GetSeconds() int64 {
	if x != nil {
		return x.Seconds
	}
	return 0
}

func (x *SendCodeReply) GetExpiresAt() int64 {
	if x != nil {
		return x.ExpiresAt
	}
	return 0
}

func (x *SendCodeReply) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

// 验证code
type VerifyCodeReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Account  string   `protobuf:"bytes,1,opt,name=account,proto3" json:"account,omitempty"`
	CodeType CodeType `protobuf:"varint,2,opt,name=codeType,proto3,enum=api.user_center.auth.v2.CodeType" json:"codeType,omitempty"` //验证码类型 0:手机验证码 1:邮箱验证码
	Code     string   `protobuf:"bytes,3,opt,name=code,proto3" json:"code,omitempty"`
	Key      string   `protobuf:"bytes,4,opt,name=key,proto3" json:"key,omitempty"` //验证码返回的key
}

func (x *VerifyCodeReq) Reset() {
	*x = VerifyCodeReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_user_center_auth_v2_auth_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VerifyCodeReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VerifyCodeReq) ProtoMessage() {}

func (x *VerifyCodeReq) ProtoReflect() protoreflect.Message {
	mi := &file_user_center_auth_v2_auth_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VerifyCodeReq.ProtoReflect.Descriptor instead.
func (*VerifyCodeReq) Descriptor() ([]byte, []int) {
	return file_user_center_auth_v2_auth_proto_rawDescGZIP(), []int{13}
}

func (x *VerifyCodeReq) GetAccount() string {
	if x != nil {
		return x.Account
	}
	return ""
}

func (x *VerifyCodeReq) GetCodeType() CodeType {
	if x != nil {
		return x.CodeType
	}
	return CodeType_CODE_TYPE_PHONE
}

func (x *VerifyCodeReq) GetCode() string {
	if x != nil {
		return x.Code
	}
	return ""
}

func (x *VerifyCodeReq) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

type VerifyCodeReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Pass bool `protobuf:"varint,1,opt,name=pass,proto3" json:"pass,omitempty"`
}

func (x *VerifyCodeReply) Reset() {
	*x = VerifyCodeReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_user_center_auth_v2_auth_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VerifyCodeReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VerifyCodeReply) ProtoMessage() {}

func (x *VerifyCodeReply) ProtoReflect() protoreflect.Message {
	mi := &file_user_center_auth_v2_auth_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VerifyCodeReply.ProtoReflect.Descriptor instead.
func (*VerifyCodeReply) Descriptor() ([]byte, []int) {
	return file_user_center_auth_v2_auth_proto_rawDescGZIP(), []int{14}
}

func (x *VerifyCodeReply) GetPass() bool {
	if x != nil {
		return x.Pass
	}
	return false
}

// 修改密码
type UpdatePasswordReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId   string   `protobuf:"bytes,1,opt,name=userId,proto3" json:"userId,omitempty"`                                            // 用户id
	Password string   `protobuf:"bytes,2,opt,name=password,proto3" json:"password,omitempty"`                                        // 密码
	Proof    string   `protobuf:"bytes,3,opt,name=proof,proto3" json:"proof,omitempty"`                                              // 登录凭证 可以是验证码或者密码  根据 AccountType 区分
	CodeType CodeType `protobuf:"varint,4,opt,name=codeType,proto3,enum=api.user_center.auth.v2.CodeType" json:"codeType,omitempty"` // //验证码类型 0:手机验证码 1:邮箱验证码
	Account  string   `protobuf:"bytes,5,opt,name=account,proto3" json:"account,omitempty"`                                          //发送验证码的邮箱或手机账号
	Key      string   `protobuf:"bytes,6,opt,name=key,proto3" json:"key,omitempty"`                                                  //验证码返回的key
	NodeId   string   `protobuf:"bytes,7,opt,name=nodeId,proto3" json:"nodeId,omitempty"`                                            // 节点 id
}

func (x *UpdatePasswordReq) Reset() {
	*x = UpdatePasswordReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_user_center_auth_v2_auth_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdatePasswordReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdatePasswordReq) ProtoMessage() {}

func (x *UpdatePasswordReq) ProtoReflect() protoreflect.Message {
	mi := &file_user_center_auth_v2_auth_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdatePasswordReq.ProtoReflect.Descriptor instead.
func (*UpdatePasswordReq) Descriptor() ([]byte, []int) {
	return file_user_center_auth_v2_auth_proto_rawDescGZIP(), []int{15}
}

func (x *UpdatePasswordReq) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *UpdatePasswordReq) GetPassword() string {
	if x != nil {
		return x.Password
	}
	return ""
}

func (x *UpdatePasswordReq) GetProof() string {
	if x != nil {
		return x.Proof
	}
	return ""
}

func (x *UpdatePasswordReq) GetCodeType() CodeType {
	if x != nil {
		return x.CodeType
	}
	return CodeType_CODE_TYPE_PHONE
}

func (x *UpdatePasswordReq) GetAccount() string {
	if x != nil {
		return x.Account
	}
	return ""
}

func (x *UpdatePasswordReq) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

func (x *UpdatePasswordReq) GetNodeId() string {
	if x != nil {
		return x.NodeId
	}
	return ""
}

type UpdatePasswordReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *UpdatePasswordReply) Reset() {
	*x = UpdatePasswordReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_user_center_auth_v2_auth_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdatePasswordReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdatePasswordReply) ProtoMessage() {}

func (x *UpdatePasswordReply) ProtoReflect() protoreflect.Message {
	mi := &file_user_center_auth_v2_auth_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdatePasswordReply.ProtoReflect.Descriptor instead.
func (*UpdatePasswordReply) Descriptor() ([]byte, []int) {
	return file_user_center_auth_v2_auth_proto_rawDescGZIP(), []int{16}
}

// RealNameAuthReq 实名认证
type RealNameAuthReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId    string `protobuf:"bytes,1,opt,name=userId,proto3" json:"userId,omitempty"`       // 用户 id
	FullName  string `protobuf:"bytes,2,opt,name=fullName,proto3" json:"fullName,omitempty"`   // 姓名
	PersonId  string `protobuf:"bytes,3,opt,name=personId,proto3" json:"personId,omitempty"`   // 身份证号
	RealPhone string `protobuf:"bytes,4,opt,name=realPhone,proto3" json:"realPhone,omitempty"` // 真实手机
}

func (x *RealNameAuthReq) Reset() {
	*x = RealNameAuthReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_user_center_auth_v2_auth_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RealNameAuthReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RealNameAuthReq) ProtoMessage() {}

func (x *RealNameAuthReq) ProtoReflect() protoreflect.Message {
	mi := &file_user_center_auth_v2_auth_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RealNameAuthReq.ProtoReflect.Descriptor instead.
func (*RealNameAuthReq) Descriptor() ([]byte, []int) {
	return file_user_center_auth_v2_auth_proto_rawDescGZIP(), []int{17}
}

func (x *RealNameAuthReq) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *RealNameAuthReq) GetFullName() string {
	if x != nil {
		return x.FullName
	}
	return ""
}

func (x *RealNameAuthReq) GetPersonId() string {
	if x != nil {
		return x.PersonId
	}
	return ""
}

func (x *RealNameAuthReq) GetRealPhone() string {
	if x != nil {
		return x.RealPhone
	}
	return ""
}

type RealNameAuthReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *RealNameAuthReply) Reset() {
	*x = RealNameAuthReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_user_center_auth_v2_auth_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RealNameAuthReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RealNameAuthReply) ProtoMessage() {}

func (x *RealNameAuthReply) ProtoReflect() protoreflect.Message {
	mi := &file_user_center_auth_v2_auth_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RealNameAuthReply.ProtoReflect.Descriptor instead.
func (*RealNameAuthReply) Descriptor() ([]byte, []int) {
	return file_user_center_auth_v2_auth_proto_rawDescGZIP(), []int{18}
}

// 单点登录
// -------------------------------------------
type SSOLoginReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Account  string `protobuf:"bytes,1,opt,name=account,proto3" json:"account,omitempty"`   //手机号或账号
	Token    string `protobuf:"bytes,2,opt,name=token,proto3" json:"token,omitempty"`       //平台的token
	Platform string `protobuf:"bytes,3,opt,name=platform,proto3" json:"platform,omitempty"` // 来源终端，IOS Android Windows OSX Web MiniWeb Linux;
}

func (x *SSOLoginReq) Reset() {
	*x = SSOLoginReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_user_center_auth_v2_auth_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SSOLoginReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SSOLoginReq) ProtoMessage() {}

func (x *SSOLoginReq) ProtoReflect() protoreflect.Message {
	mi := &file_user_center_auth_v2_auth_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SSOLoginReq.ProtoReflect.Descriptor instead.
func (*SSOLoginReq) Descriptor() ([]byte, []int) {
	return file_user_center_auth_v2_auth_proto_rawDescGZIP(), []int{19}
}

func (x *SSOLoginReq) GetAccount() string {
	if x != nil {
		return x.Account
	}
	return ""
}

func (x *SSOLoginReq) GetToken() string {
	if x != nil {
		return x.Token
	}
	return ""
}

func (x *SSOLoginReq) GetPlatform() string {
	if x != nil {
		return x.Platform
	}
	return ""
}

type SSOLoginReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AuthToken *AuthToken `protobuf:"bytes,1,opt,name=authToken,proto3" json:"authToken,omitempty"`
}

func (x *SSOLoginReply) Reset() {
	*x = SSOLoginReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_user_center_auth_v2_auth_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SSOLoginReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SSOLoginReply) ProtoMessage() {}

func (x *SSOLoginReply) ProtoReflect() protoreflect.Message {
	mi := &file_user_center_auth_v2_auth_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SSOLoginReply.ProtoReflect.Descriptor instead.
func (*SSOLoginReply) Descriptor() ([]byte, []int) {
	return file_user_center_auth_v2_auth_proto_rawDescGZIP(), []int{20}
}

func (x *SSOLoginReply) GetAuthToken() *AuthToken {
	if x != nil {
		return x.AuthToken
	}
	return nil
}

// 绑定
// -------------------------------------------
type BindingReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id       string   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"` //主键
	Account  string   `protobuf:"bytes,2,opt,name=account,proto3" json:"account,omitempty"`
	CodeType CodeType `protobuf:"varint,3,opt,name=codeType,proto3,enum=api.user_center.auth.v2.CodeType" json:"codeType,omitempty"` //验证码类型 0:手机验证码 1:邮箱验证码
	AreaCode int64    `protobuf:"varint,4,opt,name=areaCode,proto3" json:"areaCode,omitempty"`
	Code     string   `protobuf:"bytes,5,opt,name=code,proto3" json:"code,omitempty"`
	Key      string   `protobuf:"bytes,6,opt,name=key,proto3" json:"key,omitempty"` //验证码返回的key
}

func (x *BindingReq) Reset() {
	*x = BindingReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_user_center_auth_v2_auth_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BindingReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BindingReq) ProtoMessage() {}

func (x *BindingReq) ProtoReflect() protoreflect.Message {
	mi := &file_user_center_auth_v2_auth_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BindingReq.ProtoReflect.Descriptor instead.
func (*BindingReq) Descriptor() ([]byte, []int) {
	return file_user_center_auth_v2_auth_proto_rawDescGZIP(), []int{21}
}

func (x *BindingReq) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *BindingReq) GetAccount() string {
	if x != nil {
		return x.Account
	}
	return ""
}

func (x *BindingReq) GetCodeType() CodeType {
	if x != nil {
		return x.CodeType
	}
	return CodeType_CODE_TYPE_PHONE
}

func (x *BindingReq) GetAreaCode() int64 {
	if x != nil {
		return x.AreaCode
	}
	return 0
}

func (x *BindingReq) GetCode() string {
	if x != nil {
		return x.Code
	}
	return ""
}

func (x *BindingReq) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

type BindingReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *BindingReply) Reset() {
	*x = BindingReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_user_center_auth_v2_auth_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BindingReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BindingReply) ProtoMessage() {}

func (x *BindingReply) ProtoReflect() protoreflect.Message {
	mi := &file_user_center_auth_v2_auth_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BindingReply.ProtoReflect.Descriptor instead.
func (*BindingReply) Descriptor() ([]byte, []int) {
	return file_user_center_auth_v2_auth_proto_rawDescGZIP(), []int{22}
}

var File_user_center_auth_v2_auth_proto protoreflect.FileDescriptor

var file_user_center_auth_v2_auth_proto_rawDesc = []byte{
	0x0a, 0x1e, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x63, 0x65, 0x6e, 0x74, 0x65, 0x72, 0x2f, 0x61, 0x75,
	0x74, 0x68, 0x2f, 0x76, 0x32, 0x2f, 0x61, 0x75, 0x74, 0x68, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x12, 0x17, 0x61, 0x70, 0x69, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x63, 0x65, 0x6e, 0x74, 0x65,
	0x72, 0x2e, 0x61, 0x75, 0x74, 0x68, 0x2e, 0x76, 0x32, 0x1a, 0x17, 0x76, 0x61, 0x6c, 0x69, 0x64,
	0x61, 0x74, 0x65, 0x2f, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x1a, 0x1a, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2f, 0x65, 0x6e, 0x75, 0x6d, 0x2f,
	0x76, 0x32, 0x2f, 0x65, 0x6e, 0x75, 0x6d, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1a,
	0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2f, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2f, 0x76, 0x32, 0x2f,
	0x6e, 0x6f, 0x64, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xd2, 0x02, 0x0a, 0x09, 0x41,
	0x75, 0x74, 0x68, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x20, 0x0a, 0x0b, 0x61, 0x63, 0x63, 0x65,
	0x73, 0x73, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x61,
	0x63, 0x63, 0x65, 0x73, 0x73, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x22, 0x0a, 0x0c, 0x72, 0x65,
	0x66, 0x72, 0x65, 0x73, 0x68, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0c, 0x72, 0x65, 0x66, 0x72, 0x65, 0x73, 0x68, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x1c,
	0x0a, 0x09, 0x65, 0x78, 0x70, 0x69, 0x72, 0x65, 0x73, 0x41, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x09, 0x65, 0x78, 0x70, 0x69, 0x72, 0x65, 0x73, 0x41, 0x74, 0x12, 0x22, 0x0a, 0x0c,
	0x72, 0x65, 0x66, 0x45, 0x78, 0x70, 0x69, 0x72, 0x65, 0x73, 0x41, 0x74, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x0c, 0x72, 0x65, 0x66, 0x45, 0x78, 0x70, 0x69, 0x72, 0x65, 0x73, 0x41, 0x74,
	0x12, 0x1e, 0x0a, 0x0a, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x43, 0x6f, 0x64, 0x65, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x43, 0x6f, 0x64, 0x65,
	0x12, 0x16, 0x0a, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x49, 0x0a, 0x07, 0x6f, 0x70, 0x74, 0x69,
	0x6f, 0x6e, 0x73, 0x18, 0x07, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2f, 0x2e, 0x61, 0x70, 0x69, 0x2e,
	0x75, 0x73, 0x65, 0x72, 0x5f, 0x63, 0x65, 0x6e, 0x74, 0x65, 0x72, 0x2e, 0x61, 0x75, 0x74, 0x68,
	0x2e, 0x76, 0x32, 0x2e, 0x41, 0x75, 0x74, 0x68, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x2e, 0x4f, 0x70,
	0x74, 0x69, 0x6f, 0x6e, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x07, 0x6f, 0x70, 0x74, 0x69,
	0x6f, 0x6e, 0x73, 0x1a, 0x3a, 0x0a, 0x0c, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x45, 0x6e,
	0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22,
	0xb6, 0x03, 0x0a, 0x0b, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x52, 0x65, 0x71, 0x12,
	0x21, 0x0a, 0x07, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x42, 0x07, 0xfa, 0x42, 0x04, 0x72, 0x02, 0x10, 0x01, 0x52, 0x07, 0x61, 0x63, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x12, 0x25, 0x0a, 0x08, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x42, 0x09, 0xfa, 0x42, 0x06, 0x72, 0x04, 0x10, 0x08, 0x18, 0x10, 0x52,
	0x08, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x12, 0x1f, 0x0a, 0x05, 0x70, 0x72, 0x6f,
	0x6f, 0x66, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x42, 0x09, 0xfa, 0x42, 0x06, 0x72, 0x04, 0x10,
	0x04, 0x18, 0x10, 0x52, 0x05, 0x70, 0x72, 0x6f, 0x6f, 0x66, 0x12, 0x4a, 0x0a, 0x0d, 0x72, 0x65,
	0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x0e, 0x32, 0x25, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x63, 0x65, 0x6e,
	0x74, 0x65, 0x72, 0x2e, 0x61, 0x75, 0x74, 0x68, 0x2e, 0x76, 0x32, 0x2e, 0x52, 0x65, 0x67, 0x69,
	0x73, 0x74, 0x65, 0x72, 0x54, 0x79, 0x70, 0x65, 0x52, 0x0c, 0x72, 0x65, 0x67, 0x69, 0x73, 0x74,
	0x65, 0x72, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f,
	0x72, 0x6d, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f,
	0x72, 0x6d, 0x12, 0x1a, 0x0a, 0x08, 0x6e, 0x69, 0x63, 0x6b, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x06,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6e, 0x69, 0x63, 0x6b, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1a,
	0x0a, 0x08, 0x61, 0x72, 0x65, 0x61, 0x43, 0x6f, 0x64, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x08, 0x61, 0x72, 0x65, 0x61, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x73, 0x68,
	0x61, 0x72, 0x65, 0x43, 0x6f, 0x64, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73,
	0x68, 0x61, 0x72, 0x65, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x66, 0x61, 0x63, 0x65,
	0x55, 0x52, 0x4c, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x66, 0x61, 0x63, 0x65, 0x55,
	0x52, 0x4c, 0x12, 0x3c, 0x0a, 0x06, 0x67, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x18, 0x0a, 0x20, 0x01,
	0x28, 0x0e, 0x32, 0x1a, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e,
	0x65, 0x6e, 0x75, 0x6d, 0x2e, 0x76, 0x32, 0x2e, 0x47, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x42, 0x08,
	0xfa, 0x42, 0x05, 0x82, 0x01, 0x02, 0x10, 0x01, 0x52, 0x06, 0x67, 0x65, 0x6e, 0x64, 0x65, 0x72,
	0x12, 0x14, 0x0a, 0x05, 0x62, 0x69, 0x72, 0x74, 0x68, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x05, 0x62, 0x69, 0x72, 0x74, 0x68, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x0c, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x22, 0x30, 0x0a, 0x0d, 0x52, 0x65, 0x67, 0x69,
	0x73, 0x74, 0x65, 0x72, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x1f, 0x0a, 0x06, 0x75, 0x73, 0x65,
	0x72, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x72, 0x02,
	0x10, 0x01, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x22, 0xdc, 0x02, 0x0a, 0x08, 0x4c,
	0x6f, 0x67, 0x69, 0x6e, 0x52, 0x65, 0x71, 0x12, 0x21, 0x0a, 0x07, 0x61, 0x63, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x72, 0x02, 0x10,
	0x01, 0x52, 0x07, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x1f, 0x0a, 0x05, 0x70, 0x72,
	0x6f, 0x6f, 0x66, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x42, 0x09, 0xfa, 0x42, 0x06, 0x72, 0x04,
	0x10, 0x04, 0x18, 0x10, 0x52, 0x05, 0x70, 0x72, 0x6f, 0x6f, 0x66, 0x12, 0x46, 0x0a, 0x0b, 0x61,
	0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0e,
	0x32, 0x24, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x63, 0x65, 0x6e, 0x74,
	0x65, 0x72, 0x2e, 0x61, 0x75, 0x74, 0x68, 0x2e, 0x76, 0x32, 0x2e, 0x41, 0x63, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x52, 0x0b, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x54,
	0x79, 0x70, 0x65, 0x12, 0x4a, 0x0a, 0x0c, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x54,
	0x79, 0x70, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x26, 0x2e, 0x61, 0x70, 0x69, 0x2e,
	0x75, 0x73, 0x65, 0x72, 0x5f, 0x63, 0x65, 0x6e, 0x74, 0x65, 0x72, 0x2e, 0x61, 0x75, 0x74, 0x68,
	0x2e, 0x76, 0x32, 0x2e, 0x41, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x69, 0x7a, 0x65, 0x54, 0x79, 0x70,
	0x65, 0x52, 0x0c, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12,
	0x1a, 0x0a, 0x08, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x08, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x12, 0x12, 0x0a, 0x04, 0x6e,
	0x6f, 0x64, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x6f, 0x64, 0x65, 0x12,
	0x14, 0x0a, 0x05, 0x73, 0x63, 0x6f, 0x70, 0x65, 0x18, 0x07, 0x20, 0x03, 0x28, 0x09, 0x52, 0x05,
	0x73, 0x63, 0x6f, 0x70, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x72, 0x65, 0x73, 0x4e, 0x6f, 0x64, 0x65,
	0x49, 0x6e, 0x66, 0x6f, 0x18, 0x08, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0b, 0x72, 0x65, 0x73, 0x4e,
	0x6f, 0x64, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x0c,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x22, 0xcb, 0x01, 0x0a, 0x0a, 0x4c, 0x6f,
	0x67, 0x69, 0x6e, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x40, 0x0a, 0x09, 0x61, 0x75, 0x74, 0x68,
	0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x61, 0x70,
	0x69, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x63, 0x65, 0x6e, 0x74, 0x65, 0x72, 0x2e, 0x61, 0x75,
	0x74, 0x68, 0x2e, 0x76, 0x32, 0x2e, 0x41, 0x75, 0x74, 0x68, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x52,
	0x09, 0x61, 0x75, 0x74, 0x68, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x2c, 0x0a, 0x11, 0x61, 0x75,
	0x74, 0x68, 0x6f, 0x72, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x64, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x11, 0x61, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x69, 0x7a, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x31, 0x0a, 0x04, 0x6e, 0x6f, 0x64, 0x65,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x63, 0x6f, 0x6d,
	0x6d, 0x6f, 0x6e, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x76, 0x32, 0x2e, 0x4e, 0x6f, 0x64,
	0x65, 0x42, 0x61, 0x73, 0x65, 0x52, 0x04, 0x6e, 0x6f, 0x64, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x6d,
	0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x09, 0x52, 0x08, 0x6d,
	0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x73, 0x22, 0x40, 0x0a, 0x13, 0x44, 0x65, 0x73, 0x74, 0x72,
	0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x52, 0x65, 0x71, 0x12, 0x29,
	0x0a, 0x0b, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x72, 0x02, 0x10, 0x01, 0x52, 0x0b, 0x61, 0x63,
	0x63, 0x65, 0x73, 0x73, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x22, 0x17, 0x0a, 0x15, 0x44, 0x65, 0x73,
	0x74, 0x72, 0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x52, 0x65, 0x70,
	0x6c, 0x79, 0x22, 0x68, 0x0a, 0x0b, 0x52, 0x65, 0x66, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x52, 0x65,
	0x71, 0x12, 0x23, 0x0a, 0x08, 0x72, 0x65, 0x66, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x72, 0x02, 0x10, 0x01, 0x52, 0x08, 0x72, 0x65,
	0x66, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x20, 0x0a, 0x0b, 0x72, 0x65, 0x73, 0x4e, 0x6f, 0x64,
	0x65, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0b, 0x72, 0x65, 0x73,
	0x4e, 0x6f, 0x64, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x6f, 0x64, 0x65,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x6f, 0x64, 0x65, 0x22, 0xa0, 0x01, 0x0a,
	0x0d, 0x52, 0x65, 0x66, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x40,
	0x0a, 0x09, 0x61, 0x75, 0x74, 0x68, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x22, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x63, 0x65, 0x6e,
	0x74, 0x65, 0x72, 0x2e, 0x61, 0x75, 0x74, 0x68, 0x2e, 0x76, 0x32, 0x2e, 0x41, 0x75, 0x74, 0x68,
	0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x52, 0x09, 0x61, 0x75, 0x74, 0x68, 0x54, 0x6f, 0x6b, 0x65, 0x6e,
	0x12, 0x31, 0x0a, 0x04, 0x6e, 0x6f, 0x64, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d,
	0x2e, 0x61, 0x70, 0x69, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x6d, 0x6f, 0x64, 0x65,
	0x6c, 0x2e, 0x76, 0x32, 0x2e, 0x4e, 0x6f, 0x64, 0x65, 0x42, 0x61, 0x73, 0x65, 0x52, 0x04, 0x6e,
	0x6f, 0x64, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x73, 0x18,
	0x03, 0x20, 0x03, 0x28, 0x09, 0x52, 0x08, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x73, 0x22,
	0x89, 0x01, 0x0a, 0x0e, 0x56, 0x65, 0x72, 0x69, 0x66, 0x79, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x52,
	0x65, 0x71, 0x12, 0x29, 0x0a, 0x0b, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x54, 0x6f, 0x6b, 0x65,
	0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x72, 0x02, 0x10, 0x01,
	0x52, 0x0b, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x4c, 0x0a,
	0x0d, 0x61, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x69, 0x7a, 0x65, 0x54, 0x79, 0x70, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0e, 0x32, 0x26, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x5f,
	0x63, 0x65, 0x6e, 0x74, 0x65, 0x72, 0x2e, 0x61, 0x75, 0x74, 0x68, 0x2e, 0x76, 0x32, 0x2e, 0x41,
	0x75, 0x74, 0x68, 0x6f, 0x72, 0x69, 0x7a, 0x65, 0x54, 0x79, 0x70, 0x65, 0x52, 0x0d, 0x61, 0x75,
	0x74, 0x68, 0x6f, 0x72, 0x69, 0x7a, 0x65, 0x54, 0x79, 0x70, 0x65, 0x22, 0x54, 0x0a, 0x10, 0x56,
	0x65, 0x72, 0x69, 0x66, 0x79, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12,
	0x40, 0x0a, 0x09, 0x61, 0x75, 0x74, 0x68, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x22, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x63, 0x65,
	0x6e, 0x74, 0x65, 0x72, 0x2e, 0x61, 0x75, 0x74, 0x68, 0x2e, 0x76, 0x32, 0x2e, 0x41, 0x75, 0x74,
	0x68, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x52, 0x09, 0x61, 0x75, 0x74, 0x68, 0x54, 0x6f, 0x6b, 0x65,
	0x6e, 0x22, 0x8b, 0x01, 0x0a, 0x0b, 0x53, 0x65, 0x6e, 0x64, 0x43, 0x6f, 0x64, 0x65, 0x52, 0x65,
	0x71, 0x12, 0x21, 0x0a, 0x07, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x72, 0x02, 0x10, 0x01, 0x52, 0x07, 0x61, 0x63, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x12, 0x3d, 0x0a, 0x08, 0x63, 0x6f, 0x64, 0x65, 0x54, 0x79, 0x70, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x21, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x75, 0x73, 0x65,
	0x72, 0x5f, 0x63, 0x65, 0x6e, 0x74, 0x65, 0x72, 0x2e, 0x61, 0x75, 0x74, 0x68, 0x2e, 0x76, 0x32,
	0x2e, 0x43, 0x6f, 0x64, 0x65, 0x54, 0x79, 0x70, 0x65, 0x52, 0x08, 0x63, 0x6f, 0x64, 0x65, 0x54,
	0x79, 0x70, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x61, 0x72, 0x65, 0x61, 0x43, 0x6f, 0x64, 0x65, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x61, 0x72, 0x65, 0x61, 0x43, 0x6f, 0x64, 0x65, 0x22,
	0x59, 0x0a, 0x0d, 0x53, 0x65, 0x6e, 0x64, 0x43, 0x6f, 0x64, 0x65, 0x52, 0x65, 0x70, 0x6c, 0x79,
	0x12, 0x18, 0x0a, 0x07, 0x73, 0x65, 0x63, 0x6f, 0x6e, 0x64, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x07, 0x73, 0x65, 0x63, 0x6f, 0x6e, 0x64, 0x73, 0x12, 0x1c, 0x0a, 0x09, 0x65, 0x78,
	0x70, 0x69, 0x72, 0x65, 0x73, 0x41, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x65,
	0x78, 0x70, 0x69, 0x72, 0x65, 0x73, 0x41, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x22, 0xa2, 0x01, 0x0a, 0x0d, 0x56,
	0x65, 0x72, 0x69, 0x66, 0x79, 0x43, 0x6f, 0x64, 0x65, 0x52, 0x65, 0x71, 0x12, 0x21, 0x0a, 0x07,
	0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x07, 0xfa,
	0x42, 0x04, 0x72, 0x02, 0x10, 0x01, 0x52, 0x07, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12,
	0x3d, 0x0a, 0x08, 0x63, 0x6f, 0x64, 0x65, 0x54, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0e, 0x32, 0x21, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x63, 0x65, 0x6e,
	0x74, 0x65, 0x72, 0x2e, 0x61, 0x75, 0x74, 0x68, 0x2e, 0x76, 0x32, 0x2e, 0x43, 0x6f, 0x64, 0x65,
	0x54, 0x79, 0x70, 0x65, 0x52, 0x08, 0x63, 0x6f, 0x64, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1d,
	0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x42, 0x09, 0xfa, 0x42,
	0x06, 0x72, 0x04, 0x10, 0x04, 0x18, 0x08, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x10, 0x0a,
	0x03, 0x6b, 0x65, 0x79, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x22,
	0x25, 0x0a, 0x0f, 0x56, 0x65, 0x72, 0x69, 0x66, 0x79, 0x43, 0x6f, 0x64, 0x65, 0x52, 0x65, 0x70,
	0x6c, 0x79, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x04, 0x70, 0x61, 0x73, 0x73, 0x22, 0xff, 0x01, 0x0a, 0x11, 0x55, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x50, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x52, 0x65, 0x71, 0x12, 0x1f, 0x0a, 0x06,
	0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x07, 0xfa, 0x42,
	0x04, 0x72, 0x02, 0x10, 0x01, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x25, 0x0a,
	0x08, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x42,
	0x09, 0xfa, 0x42, 0x06, 0x72, 0x04, 0x10, 0x08, 0x18, 0x10, 0x52, 0x08, 0x70, 0x61, 0x73, 0x73,
	0x77, 0x6f, 0x72, 0x64, 0x12, 0x1f, 0x0a, 0x05, 0x70, 0x72, 0x6f, 0x6f, 0x66, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x42, 0x09, 0xfa, 0x42, 0x06, 0x72, 0x04, 0x10, 0x04, 0x18, 0x10, 0x52, 0x05,
	0x70, 0x72, 0x6f, 0x6f, 0x66, 0x12, 0x3d, 0x0a, 0x08, 0x63, 0x6f, 0x64, 0x65, 0x54, 0x79, 0x70,
	0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x21, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x75, 0x73,
	0x65, 0x72, 0x5f, 0x63, 0x65, 0x6e, 0x74, 0x65, 0x72, 0x2e, 0x61, 0x75, 0x74, 0x68, 0x2e, 0x76,
	0x32, 0x2e, 0x43, 0x6f, 0x64, 0x65, 0x54, 0x79, 0x70, 0x65, 0x52, 0x08, 0x63, 0x6f, 0x64, 0x65,
	0x54, 0x79, 0x70, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x10,
	0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79,
	0x12, 0x16, 0x0a, 0x06, 0x6e, 0x6f, 0x64, 0x65, 0x49, 0x64, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x06, 0x6e, 0x6f, 0x64, 0x65, 0x49, 0x64, 0x22, 0x15, 0x0a, 0x13, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x50, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22,
	0x91, 0x01, 0x0a, 0x0f, 0x52, 0x65, 0x61, 0x6c, 0x4e, 0x61, 0x6d, 0x65, 0x41, 0x75, 0x74, 0x68,
	0x52, 0x65, 0x71, 0x12, 0x16, 0x0a, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x23, 0x0a, 0x08, 0x66,
	0x75, 0x6c, 0x6c, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x42, 0x07, 0xfa,
	0x42, 0x04, 0x72, 0x02, 0x10, 0x01, 0x52, 0x08, 0x66, 0x75, 0x6c, 0x6c, 0x4e, 0x61, 0x6d, 0x65,
	0x12, 0x23, 0x0a, 0x08, 0x70, 0x65, 0x72, 0x73, 0x6f, 0x6e, 0x49, 0x64, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x72, 0x02, 0x10, 0x01, 0x52, 0x08, 0x70, 0x65, 0x72,
	0x73, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x72, 0x65, 0x61, 0x6c, 0x50, 0x68, 0x6f,
	0x6e, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x72, 0x65, 0x61, 0x6c, 0x50, 0x68,
	0x6f, 0x6e, 0x65, 0x22, 0x13, 0x0a, 0x11, 0x52, 0x65, 0x61, 0x6c, 0x4e, 0x61, 0x6d, 0x65, 0x41,
	0x75, 0x74, 0x68, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x62, 0x0a, 0x0b, 0x53, 0x53, 0x4f, 0x4c,
	0x6f, 0x67, 0x69, 0x6e, 0x52, 0x65, 0x71, 0x12, 0x21, 0x0a, 0x07, 0x61, 0x63, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x72, 0x02, 0x10,
	0x01, 0x52, 0x07, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f,
	0x6b, 0x65, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e,
	0x12, 0x1a, 0x0a, 0x08, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x08, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x22, 0x51, 0x0a, 0x0d,
	0x53, 0x53, 0x4f, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x40, 0x0a,
	0x09, 0x61, 0x75, 0x74, 0x68, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x22, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x63, 0x65, 0x6e, 0x74,
	0x65, 0x72, 0x2e, 0x61, 0x75, 0x74, 0x68, 0x2e, 0x76, 0x32, 0x2e, 0x41, 0x75, 0x74, 0x68, 0x54,
	0x6f, 0x6b, 0x65, 0x6e, 0x52, 0x09, 0x61, 0x75, 0x74, 0x68, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x22,
	0xcb, 0x01, 0x0a, 0x0a, 0x42, 0x69, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x71, 0x12, 0x0e,
	0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x21,
	0x0a, 0x07, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x42,
	0x07, 0xfa, 0x42, 0x04, 0x72, 0x02, 0x10, 0x01, 0x52, 0x07, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x12, 0x3d, 0x0a, 0x08, 0x63, 0x6f, 0x64, 0x65, 0x54, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x0e, 0x32, 0x21, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x63,
	0x65, 0x6e, 0x74, 0x65, 0x72, 0x2e, 0x61, 0x75, 0x74, 0x68, 0x2e, 0x76, 0x32, 0x2e, 0x43, 0x6f,
	0x64, 0x65, 0x54, 0x79, 0x70, 0x65, 0x52, 0x08, 0x63, 0x6f, 0x64, 0x65, 0x54, 0x79, 0x70, 0x65,
	0x12, 0x1a, 0x0a, 0x08, 0x61, 0x72, 0x65, 0x61, 0x43, 0x6f, 0x64, 0x65, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x08, 0x61, 0x72, 0x65, 0x61, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x1d, 0x0a, 0x04,
	0x63, 0x6f, 0x64, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x42, 0x09, 0xfa, 0x42, 0x06, 0x72,
	0x04, 0x10, 0x04, 0x18, 0x08, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x6b,
	0x65, 0x79, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x22, 0x0e, 0x0a,
	0x0c, 0x42, 0x69, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x2a, 0x58, 0x0a,
	0x0c, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x54, 0x79, 0x70, 0x65, 0x12, 0x17, 0x0a,
	0x13, 0x52, 0x45, 0x47, 0x49, 0x53, 0x54, 0x45, 0x52, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x50,
	0x48, 0x4f, 0x4e, 0x45, 0x10, 0x00, 0x12, 0x17, 0x0a, 0x13, 0x52, 0x45, 0x47, 0x49, 0x53, 0x54,
	0x45, 0x52, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x45, 0x4d, 0x41, 0x49, 0x4c, 0x10, 0x01, 0x12,
	0x16, 0x0a, 0x12, 0x52, 0x45, 0x47, 0x49, 0x53, 0x54, 0x45, 0x52, 0x5f, 0x54, 0x59, 0x50, 0x45,
	0x5f, 0x55, 0x53, 0x45, 0x52, 0x10, 0x02, 0x2a, 0xa9, 0x01, 0x0a, 0x0b, 0x41, 0x63, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1e, 0x0a, 0x1a, 0x41, 0x43, 0x43, 0x4f, 0x55,
	0x4e, 0x54, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x55, 0x53, 0x45, 0x52, 0x5f, 0x50, 0x41, 0x53,
	0x53, 0x57, 0x4f, 0x52, 0x44, 0x10, 0x00, 0x12, 0x1b, 0x0a, 0x17, 0x41, 0x43, 0x43, 0x4f, 0x55,
	0x4e, 0x54, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x50, 0x48, 0x4f, 0x4e, 0x45, 0x5f, 0x43, 0x4f,
	0x44, 0x45, 0x10, 0x01, 0x12, 0x1f, 0x0a, 0x1b, 0x41, 0x43, 0x43, 0x4f, 0x55, 0x4e, 0x54, 0x5f,
	0x54, 0x59, 0x50, 0x45, 0x5f, 0x50, 0x48, 0x4f, 0x4e, 0x45, 0x5f, 0x50, 0x41, 0x53, 0x53, 0x57,
	0x4f, 0x52, 0x44, 0x10, 0x02, 0x12, 0x1b, 0x0a, 0x17, 0x41, 0x43, 0x43, 0x4f, 0x55, 0x4e, 0x54,
	0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x45, 0x4d, 0x41, 0x49, 0x4c, 0x5f, 0x43, 0x4f, 0x44, 0x45,
	0x10, 0x03, 0x12, 0x1f, 0x0a, 0x1b, 0x41, 0x43, 0x43, 0x4f, 0x55, 0x4e, 0x54, 0x5f, 0x54, 0x59,
	0x50, 0x45, 0x5f, 0x45, 0x4d, 0x41, 0x49, 0x4c, 0x5f, 0x50, 0x41, 0x53, 0x53, 0x57, 0x4f, 0x52,
	0x44, 0x10, 0x04, 0x2a, 0x34, 0x0a, 0x08, 0x43, 0x6f, 0x64, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12,
	0x13, 0x0a, 0x0f, 0x43, 0x4f, 0x44, 0x45, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x50, 0x48, 0x4f,
	0x4e, 0x45, 0x10, 0x00, 0x12, 0x13, 0x0a, 0x0f, 0x43, 0x4f, 0x44, 0x45, 0x5f, 0x54, 0x59, 0x50,
	0x45, 0x5f, 0x45, 0x4d, 0x41, 0x49, 0x4c, 0x10, 0x01, 0x2a, 0x38, 0x0a, 0x0d, 0x41, 0x75, 0x74,
	0x68, 0x6f, 0x72, 0x69, 0x7a, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x12, 0x0a, 0x0e, 0x41, 0x55,
	0x54, 0x48, 0x4f, 0x52, 0x49, 0x5a, 0x45, 0x5f, 0x43, 0x4f, 0x44, 0x45, 0x10, 0x00, 0x12, 0x13,
	0x0a, 0x0f, 0x41, 0x55, 0x54, 0x48, 0x4f, 0x52, 0x49, 0x5a, 0x45, 0x5f, 0x54, 0x4f, 0x4b, 0x45,
	0x4e, 0x10, 0x01, 0x32, 0xc3, 0x07, 0x0a, 0x04, 0x41, 0x75, 0x74, 0x68, 0x12, 0x58, 0x0a, 0x08,
	0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x12, 0x24, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x75,
	0x73, 0x65, 0x72, 0x5f, 0x63, 0x65, 0x6e, 0x74, 0x65, 0x72, 0x2e, 0x61, 0x75, 0x74, 0x68, 0x2e,
	0x76, 0x32, 0x2e, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x52, 0x65, 0x71, 0x1a, 0x26,
	0x2e, 0x61, 0x70, 0x69, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x63, 0x65, 0x6e, 0x74, 0x65, 0x72,
	0x2e, 0x61, 0x75, 0x74, 0x68, 0x2e, 0x76, 0x32, 0x2e, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65,
	0x72, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x4f, 0x0a, 0x05, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x12,
	0x21, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x63, 0x65, 0x6e, 0x74, 0x65,
	0x72, 0x2e, 0x61, 0x75, 0x74, 0x68, 0x2e, 0x76, 0x32, 0x2e, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x52,
	0x65, 0x71, 0x1a, 0x23, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x63, 0x65,
	0x6e, 0x74, 0x65, 0x72, 0x2e, 0x61, 0x75, 0x74, 0x68, 0x2e, 0x76, 0x32, 0x2e, 0x4c, 0x6f, 0x67,
	0x69, 0x6e, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x58, 0x0a, 0x08, 0x52, 0x65, 0x66, 0x54, 0x6f,
	0x6b, 0x65, 0x6e, 0x12, 0x24, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x63,
	0x65, 0x6e, 0x74, 0x65, 0x72, 0x2e, 0x61, 0x75, 0x74, 0x68, 0x2e, 0x76, 0x32, 0x2e, 0x52, 0x65,
	0x66, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x52, 0x65, 0x71, 0x1a, 0x26, 0x2e, 0x61, 0x70, 0x69, 0x2e,
	0x75, 0x73, 0x65, 0x72, 0x5f, 0x63, 0x65, 0x6e, 0x74, 0x65, 0x72, 0x2e, 0x61, 0x75, 0x74, 0x68,
	0x2e, 0x76, 0x32, 0x2e, 0x52, 0x65, 0x66, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x52, 0x65, 0x70, 0x6c,
	0x79, 0x12, 0x61, 0x0a, 0x0b, 0x56, 0x65, 0x72, 0x69, 0x66, 0x79, 0x54, 0x6f, 0x6b, 0x65, 0x6e,
	0x12, 0x27, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x63, 0x65, 0x6e, 0x74,
	0x65, 0x72, 0x2e, 0x61, 0x75, 0x74, 0x68, 0x2e, 0x76, 0x32, 0x2e, 0x56, 0x65, 0x72, 0x69, 0x66,
	0x79, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x52, 0x65, 0x71, 0x1a, 0x29, 0x2e, 0x61, 0x70, 0x69, 0x2e,
	0x75, 0x73, 0x65, 0x72, 0x5f, 0x63, 0x65, 0x6e, 0x74, 0x65, 0x72, 0x2e, 0x61, 0x75, 0x74, 0x68,
	0x2e, 0x76, 0x32, 0x2e, 0x56, 0x65, 0x72, 0x69, 0x66, 0x79, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x52,
	0x65, 0x70, 0x6c, 0x79, 0x12, 0x70, 0x0a, 0x10, 0x44, 0x65, 0x73, 0x74, 0x72, 0x75, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x2c, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x75,
	0x73, 0x65, 0x72, 0x5f, 0x63, 0x65, 0x6e, 0x74, 0x65, 0x72, 0x2e, 0x61, 0x75, 0x74, 0x68, 0x2e,
	0x76, 0x32, 0x2e, 0x44, 0x65, 0x73, 0x74, 0x72, 0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x6f,
	0x6b, 0x65, 0x6e, 0x52, 0x65, 0x71, 0x1a, 0x2e, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x75, 0x73, 0x65,
	0x72, 0x5f, 0x63, 0x65, 0x6e, 0x74, 0x65, 0x72, 0x2e, 0x61, 0x75, 0x74, 0x68, 0x2e, 0x76, 0x32,
	0x2e, 0x44, 0x65, 0x73, 0x74, 0x72, 0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x6f, 0x6b, 0x65,
	0x6e, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x58, 0x0a, 0x08, 0x53, 0x65, 0x6e, 0x64, 0x43, 0x6f,
	0x64, 0x65, 0x12, 0x24, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x63, 0x65,
	0x6e, 0x74, 0x65, 0x72, 0x2e, 0x61, 0x75, 0x74, 0x68, 0x2e, 0x76, 0x32, 0x2e, 0x53, 0x65, 0x6e,
	0x64, 0x43, 0x6f, 0x64, 0x65, 0x52, 0x65, 0x71, 0x1a, 0x26, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x75,
	0x73, 0x65, 0x72, 0x5f, 0x63, 0x65, 0x6e, 0x74, 0x65, 0x72, 0x2e, 0x61, 0x75, 0x74, 0x68, 0x2e,
	0x76, 0x32, 0x2e, 0x53, 0x65, 0x6e, 0x64, 0x43, 0x6f, 0x64, 0x65, 0x52, 0x65, 0x70, 0x6c, 0x79,
	0x12, 0x5e, 0x0a, 0x0a, 0x56, 0x65, 0x72, 0x69, 0x66, 0x79, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x26,
	0x2e, 0x61, 0x70, 0x69, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x63, 0x65, 0x6e, 0x74, 0x65, 0x72,
	0x2e, 0x61, 0x75, 0x74, 0x68, 0x2e, 0x76, 0x32, 0x2e, 0x56, 0x65, 0x72, 0x69, 0x66, 0x79, 0x43,
	0x6f, 0x64, 0x65, 0x52, 0x65, 0x71, 0x1a, 0x28, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x75, 0x73, 0x65,
	0x72, 0x5f, 0x63, 0x65, 0x6e, 0x74, 0x65, 0x72, 0x2e, 0x61, 0x75, 0x74, 0x68, 0x2e, 0x76, 0x32,
	0x2e, 0x56, 0x65, 0x72, 0x69, 0x66, 0x79, 0x43, 0x6f, 0x64, 0x65, 0x52, 0x65, 0x70, 0x6c, 0x79,
	0x12, 0x6a, 0x0a, 0x0e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x50, 0x61, 0x73, 0x73, 0x77, 0x6f,
	0x72, 0x64, 0x12, 0x2a, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x63, 0x65,
	0x6e, 0x74, 0x65, 0x72, 0x2e, 0x61, 0x75, 0x74, 0x68, 0x2e, 0x76, 0x32, 0x2e, 0x55, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x50, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x52, 0x65, 0x71, 0x1a, 0x2c,
	0x2e, 0x61, 0x70, 0x69, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x63, 0x65, 0x6e, 0x74, 0x65, 0x72,
	0x2e, 0x61, 0x75, 0x74, 0x68, 0x2e, 0x76, 0x32, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x50,
	0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x64, 0x0a, 0x0c,
	0x52, 0x65, 0x61, 0x6c, 0x4e, 0x61, 0x6d, 0x65, 0x41, 0x75, 0x74, 0x68, 0x12, 0x28, 0x2e, 0x61,
	0x70, 0x69, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x63, 0x65, 0x6e, 0x74, 0x65, 0x72, 0x2e, 0x61,
	0x75, 0x74, 0x68, 0x2e, 0x76, 0x32, 0x2e, 0x52, 0x65, 0x61, 0x6c, 0x4e, 0x61, 0x6d, 0x65, 0x41,
	0x75, 0x74, 0x68, 0x52, 0x65, 0x71, 0x1a, 0x2a, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x75, 0x73, 0x65,
	0x72, 0x5f, 0x63, 0x65, 0x6e, 0x74, 0x65, 0x72, 0x2e, 0x61, 0x75, 0x74, 0x68, 0x2e, 0x76, 0x32,
	0x2e, 0x52, 0x65, 0x61, 0x6c, 0x4e, 0x61, 0x6d, 0x65, 0x41, 0x75, 0x74, 0x68, 0x52, 0x65, 0x70,
	0x6c, 0x79, 0x12, 0x55, 0x0a, 0x07, 0x42, 0x69, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x12, 0x23, 0x2e,
	0x61, 0x70, 0x69, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x63, 0x65, 0x6e, 0x74, 0x65, 0x72, 0x2e,
	0x61, 0x75, 0x74, 0x68, 0x2e, 0x76, 0x32, 0x2e, 0x42, 0x69, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x52,
	0x65, 0x71, 0x1a, 0x25, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x63, 0x65,
	0x6e, 0x74, 0x65, 0x72, 0x2e, 0x61, 0x75, 0x74, 0x68, 0x2e, 0x76, 0x32, 0x2e, 0x42, 0x69, 0x6e,
	0x64, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x42, 0x57, 0x0a, 0x17, 0x61, 0x70, 0x69,
	0x2e, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x63, 0x65, 0x6e, 0x74, 0x65, 0x72, 0x2e, 0x61, 0x75, 0x74,
	0x68, 0x2e, 0x76, 0x32, 0x50, 0x01, 0x5a, 0x3a, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63,
	0x6f, 0x6d, 0x2f, 0x73, 0x70, 0x61, 0x72, 0x6b, 0x2d, 0x63, 0x6f, 0x6d, 0x6d, 0x2f, 0x73, 0x70,
	0x61, 0x72, 0x6b, 0x2d, 0x61, 0x70, 0x69, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x75, 0x73, 0x65, 0x72,
	0x5f, 0x63, 0x65, 0x6e, 0x74, 0x65, 0x72, 0x2f, 0x61, 0x75, 0x74, 0x68, 0x2f, 0x76, 0x32, 0x3b,
	0x76, 0x32, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_user_center_auth_v2_auth_proto_rawDescOnce sync.Once
	file_user_center_auth_v2_auth_proto_rawDescData = file_user_center_auth_v2_auth_proto_rawDesc
)

func file_user_center_auth_v2_auth_proto_rawDescGZIP() []byte {
	file_user_center_auth_v2_auth_proto_rawDescOnce.Do(func() {
		file_user_center_auth_v2_auth_proto_rawDescData = protoimpl.X.CompressGZIP(file_user_center_auth_v2_auth_proto_rawDescData)
	})
	return file_user_center_auth_v2_auth_proto_rawDescData
}

var file_user_center_auth_v2_auth_proto_enumTypes = make([]protoimpl.EnumInfo, 4)
var file_user_center_auth_v2_auth_proto_msgTypes = make([]protoimpl.MessageInfo, 24)
var file_user_center_auth_v2_auth_proto_goTypes = []interface{}{
	(RegisterType)(0),             // 0: api.user_center.auth.v2.RegisterType
	(AccountType)(0),              // 1: api.user_center.auth.v2.AccountType
	(CodeType)(0),                 // 2: api.user_center.auth.v2.CodeType
	(AuthorizeType)(0),            // 3: api.user_center.auth.v2.AuthorizeType
	(*AuthToken)(nil),             // 4: api.user_center.auth.v2.AuthToken
	(*RegisterReq)(nil),           // 5: api.user_center.auth.v2.RegisterReq
	(*RegisterReply)(nil),         // 6: api.user_center.auth.v2.RegisterReply
	(*LoginReq)(nil),              // 7: api.user_center.auth.v2.LoginReq
	(*LoginReply)(nil),            // 8: api.user_center.auth.v2.LoginReply
	(*DestructionTokenReq)(nil),   // 9: api.user_center.auth.v2.DestructionTokenReq
	(*DestructionTokenReply)(nil), // 10: api.user_center.auth.v2.DestructionTokenReply
	(*RefTokenReq)(nil),           // 11: api.user_center.auth.v2.RefTokenReq
	(*RefTokenReply)(nil),         // 12: api.user_center.auth.v2.RefTokenReply
	(*VerifyTokenReq)(nil),        // 13: api.user_center.auth.v2.VerifyTokenReq
	(*VerifyTokenReply)(nil),      // 14: api.user_center.auth.v2.VerifyTokenReply
	(*SendCodeReq)(nil),           // 15: api.user_center.auth.v2.SendCodeReq
	(*SendCodeReply)(nil),         // 16: api.user_center.auth.v2.SendCodeReply
	(*VerifyCodeReq)(nil),         // 17: api.user_center.auth.v2.VerifyCodeReq
	(*VerifyCodeReply)(nil),       // 18: api.user_center.auth.v2.VerifyCodeReply
	(*UpdatePasswordReq)(nil),     // 19: api.user_center.auth.v2.UpdatePasswordReq
	(*UpdatePasswordReply)(nil),   // 20: api.user_center.auth.v2.UpdatePasswordReply
	(*RealNameAuthReq)(nil),       // 21: api.user_center.auth.v2.RealNameAuthReq
	(*RealNameAuthReply)(nil),     // 22: api.user_center.auth.v2.RealNameAuthReply
	(*SSOLoginReq)(nil),           // 23: api.user_center.auth.v2.SSOLoginReq
	(*SSOLoginReply)(nil),         // 24: api.user_center.auth.v2.SSOLoginReply
	(*BindingReq)(nil),            // 25: api.user_center.auth.v2.BindingReq
	(*BindingReply)(nil),          // 26: api.user_center.auth.v2.BindingReply
	nil,                           // 27: api.user_center.auth.v2.AuthToken.OptionsEntry
	(v2.Gender)(0),                // 28: api.common.enum.v2.Gender
	(*v21.NodeBase)(nil),          // 29: api.common.model.v2.NodeBase
}
var file_user_center_auth_v2_auth_proto_depIdxs = []int32{
	27, // 0: api.user_center.auth.v2.AuthToken.options:type_name -> api.user_center.auth.v2.AuthToken.OptionsEntry
	0,  // 1: api.user_center.auth.v2.RegisterReq.register_type:type_name -> api.user_center.auth.v2.RegisterType
	28, // 2: api.user_center.auth.v2.RegisterReq.gender:type_name -> api.common.enum.v2.Gender
	1,  // 3: api.user_center.auth.v2.LoginReq.accountType:type_name -> api.user_center.auth.v2.AccountType
	3,  // 4: api.user_center.auth.v2.LoginReq.responseType:type_name -> api.user_center.auth.v2.AuthorizeType
	4,  // 5: api.user_center.auth.v2.LoginReply.authToken:type_name -> api.user_center.auth.v2.AuthToken
	29, // 6: api.user_center.auth.v2.LoginReply.node:type_name -> api.common.model.v2.NodeBase
	4,  // 7: api.user_center.auth.v2.RefTokenReply.authToken:type_name -> api.user_center.auth.v2.AuthToken
	29, // 8: api.user_center.auth.v2.RefTokenReply.node:type_name -> api.common.model.v2.NodeBase
	3,  // 9: api.user_center.auth.v2.VerifyTokenReq.authorizeType:type_name -> api.user_center.auth.v2.AuthorizeType
	4,  // 10: api.user_center.auth.v2.VerifyTokenReply.authToken:type_name -> api.user_center.auth.v2.AuthToken
	2,  // 11: api.user_center.auth.v2.SendCodeReq.codeType:type_name -> api.user_center.auth.v2.CodeType
	2,  // 12: api.user_center.auth.v2.VerifyCodeReq.codeType:type_name -> api.user_center.auth.v2.CodeType
	2,  // 13: api.user_center.auth.v2.UpdatePasswordReq.codeType:type_name -> api.user_center.auth.v2.CodeType
	4,  // 14: api.user_center.auth.v2.SSOLoginReply.authToken:type_name -> api.user_center.auth.v2.AuthToken
	2,  // 15: api.user_center.auth.v2.BindingReq.codeType:type_name -> api.user_center.auth.v2.CodeType
	5,  // 16: api.user_center.auth.v2.Auth.Register:input_type -> api.user_center.auth.v2.RegisterReq
	7,  // 17: api.user_center.auth.v2.Auth.Login:input_type -> api.user_center.auth.v2.LoginReq
	11, // 18: api.user_center.auth.v2.Auth.RefToken:input_type -> api.user_center.auth.v2.RefTokenReq
	13, // 19: api.user_center.auth.v2.Auth.VerifyToken:input_type -> api.user_center.auth.v2.VerifyTokenReq
	9,  // 20: api.user_center.auth.v2.Auth.DestructionToken:input_type -> api.user_center.auth.v2.DestructionTokenReq
	15, // 21: api.user_center.auth.v2.Auth.SendCode:input_type -> api.user_center.auth.v2.SendCodeReq
	17, // 22: api.user_center.auth.v2.Auth.VerifyCode:input_type -> api.user_center.auth.v2.VerifyCodeReq
	19, // 23: api.user_center.auth.v2.Auth.UpdatePassword:input_type -> api.user_center.auth.v2.UpdatePasswordReq
	21, // 24: api.user_center.auth.v2.Auth.RealNameAuth:input_type -> api.user_center.auth.v2.RealNameAuthReq
	25, // 25: api.user_center.auth.v2.Auth.Binding:input_type -> api.user_center.auth.v2.BindingReq
	6,  // 26: api.user_center.auth.v2.Auth.Register:output_type -> api.user_center.auth.v2.RegisterReply
	8,  // 27: api.user_center.auth.v2.Auth.Login:output_type -> api.user_center.auth.v2.LoginReply
	12, // 28: api.user_center.auth.v2.Auth.RefToken:output_type -> api.user_center.auth.v2.RefTokenReply
	14, // 29: api.user_center.auth.v2.Auth.VerifyToken:output_type -> api.user_center.auth.v2.VerifyTokenReply
	10, // 30: api.user_center.auth.v2.Auth.DestructionToken:output_type -> api.user_center.auth.v2.DestructionTokenReply
	16, // 31: api.user_center.auth.v2.Auth.SendCode:output_type -> api.user_center.auth.v2.SendCodeReply
	18, // 32: api.user_center.auth.v2.Auth.VerifyCode:output_type -> api.user_center.auth.v2.VerifyCodeReply
	20, // 33: api.user_center.auth.v2.Auth.UpdatePassword:output_type -> api.user_center.auth.v2.UpdatePasswordReply
	22, // 34: api.user_center.auth.v2.Auth.RealNameAuth:output_type -> api.user_center.auth.v2.RealNameAuthReply
	26, // 35: api.user_center.auth.v2.Auth.Binding:output_type -> api.user_center.auth.v2.BindingReply
	26, // [26:36] is the sub-list for method output_type
	16, // [16:26] is the sub-list for method input_type
	16, // [16:16] is the sub-list for extension type_name
	16, // [16:16] is the sub-list for extension extendee
	0,  // [0:16] is the sub-list for field type_name
}

func init() { file_user_center_auth_v2_auth_proto_init() }
func file_user_center_auth_v2_auth_proto_init() {
	if File_user_center_auth_v2_auth_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_user_center_auth_v2_auth_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AuthToken); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_user_center_auth_v2_auth_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RegisterReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_user_center_auth_v2_auth_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RegisterReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_user_center_auth_v2_auth_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LoginReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_user_center_auth_v2_auth_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LoginReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_user_center_auth_v2_auth_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DestructionTokenReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_user_center_auth_v2_auth_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DestructionTokenReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_user_center_auth_v2_auth_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RefTokenReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_user_center_auth_v2_auth_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RefTokenReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_user_center_auth_v2_auth_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VerifyTokenReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_user_center_auth_v2_auth_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VerifyTokenReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_user_center_auth_v2_auth_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SendCodeReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_user_center_auth_v2_auth_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SendCodeReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_user_center_auth_v2_auth_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VerifyCodeReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_user_center_auth_v2_auth_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VerifyCodeReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_user_center_auth_v2_auth_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdatePasswordReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_user_center_auth_v2_auth_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdatePasswordReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_user_center_auth_v2_auth_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RealNameAuthReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_user_center_auth_v2_auth_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RealNameAuthReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_user_center_auth_v2_auth_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SSOLoginReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_user_center_auth_v2_auth_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SSOLoginReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_user_center_auth_v2_auth_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BindingReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_user_center_auth_v2_auth_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BindingReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_user_center_auth_v2_auth_proto_rawDesc,
			NumEnums:      4,
			NumMessages:   24,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_user_center_auth_v2_auth_proto_goTypes,
		DependencyIndexes: file_user_center_auth_v2_auth_proto_depIdxs,
		EnumInfos:         file_user_center_auth_v2_auth_proto_enumTypes,
		MessageInfos:      file_user_center_auth_v2_auth_proto_msgTypes,
	}.Build()
	File_user_center_auth_v2_auth_proto = out.File
	file_user_center_auth_v2_auth_proto_rawDesc = nil
	file_user_center_auth_v2_auth_proto_goTypes = nil
	file_user_center_auth_v2_auth_proto_depIdxs = nil
}
