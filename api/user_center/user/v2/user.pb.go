// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.34.2
// 	protoc        v5.27.1
// source: user_center/user/v2/user.proto

package v2

import (
	_ "github.com/envoyproxy/protoc-gen-validate/validate"
	v2 "github.com/spark-comm/spark-api/api/common/enum/v2"
	v21 "github.com/spark-comm/spark-api/api/common/model/v2"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// 用户在线状态
type UserOnlineType int32

const (
	UserOnlineType_USER_ONLINE_TYPE_OFFLINE UserOnlineType = 0 // 离线
	UserOnlineType_USER_ONLINE_TYPE_ONLINE  UserOnlineType = 1 // 在线
)

// Enum value maps for UserOnlineType.
var (
	UserOnlineType_name = map[int32]string{
		0: "USER_ONLINE_TYPE_OFFLINE",
		1: "USER_ONLINE_TYPE_ONLINE",
	}
	UserOnlineType_value = map[string]int32{
		"USER_ONLINE_TYPE_OFFLINE": 0,
		"USER_ONLINE_TYPE_ONLINE":  1,
	}
)

func (x UserOnlineType) Enum() *UserOnlineType {
	p := new(UserOnlineType)
	*p = x
	return p
}

func (x UserOnlineType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (UserOnlineType) Descriptor() protoreflect.EnumDescriptor {
	return file_user_center_user_v2_user_proto_enumTypes[0].Descriptor()
}

func (UserOnlineType) Type() protoreflect.EnumType {
	return &file_user_center_user_v2_user_proto_enumTypes[0]
}

func (x UserOnlineType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use UserOnlineType.Descriptor instead.
func (UserOnlineType) EnumDescriptor() ([]byte, []int) {
	return file_user_center_user_v2_user_proto_rawDescGZIP(), []int{0}
}

// 创建用户
// -------------------------------------------
type CreateUserReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Account     string         `protobuf:"bytes,1,opt,name=account,proto3" json:"account,omitempty"`                                              //账号
	AccountType v2.AccountType `protobuf:"varint,2,opt,name=accountType,proto3,enum=api.common.enum.v2.AccountType" json:"accountType,omitempty"` //账号类型
	Password    string         `protobuf:"bytes,3,opt,name=password,proto3" json:"password,omitempty"`                                            // 密码
	Nickname    string         `protobuf:"bytes,4,opt,name=nickname,proto3" json:"nickname,omitempty"`                                            // 昵称
	AreaCode    int32          `protobuf:"varint,5,opt,name=areaCode,proto3" json:"areaCode,omitempty"`                                           // 区号
	ShareCode   string         `protobuf:"bytes,6,opt,name=shareCode,proto3" json:"shareCode,omitempty"`                                          // 分享码
	FaceUrl     string         `protobuf:"bytes,7,opt,name=faceUrl,proto3" json:"faceUrl,omitempty"`                                              // 头像
	Email       string         `protobuf:"bytes,8,opt,name=email,proto3" json:"email,omitempty"`                                                  // 邮箱
	Phone       string         `protobuf:"bytes,9,opt,name=phone,proto3" json:"phone,omitempty"`                                                  // 手机号
	Gender      v2.Gender      `protobuf:"varint,10,opt,name=gender,proto3,enum=api.common.enum.v2.Gender" json:"gender,omitempty"`               // 性别 1,女；2，男
	IsGenerate  int32          `protobuf:"varint,11,opt,name=isGenerate,proto3" json:"isGenerate,omitempty"`                                      //是否后台生成账号
	NodeId      string         `protobuf:"bytes,12,opt,name=nodeId,proto3" json:"nodeId,omitempty"`                                               //节点id
	TenantId    string         `protobuf:"bytes,13,opt,name=tenantId,proto3" json:"tenantId,omitempty"`                                           // 租户id
	FromUserId  string         `protobuf:"bytes,14,opt,name=fromUserId,proto3" json:"fromUserId,omitempty"`                                       //来源用户id
}

func (x *CreateUserReq) Reset() {
	*x = CreateUserReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_user_center_user_v2_user_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateUserReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateUserReq) ProtoMessage() {}

func (x *CreateUserReq) ProtoReflect() protoreflect.Message {
	mi := &file_user_center_user_v2_user_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateUserReq.ProtoReflect.Descriptor instead.
func (*CreateUserReq) Descriptor() ([]byte, []int) {
	return file_user_center_user_v2_user_proto_rawDescGZIP(), []int{0}
}

func (x *CreateUserReq) GetAccount() string {
	if x != nil {
		return x.Account
	}
	return ""
}

func (x *CreateUserReq) GetAccountType() v2.AccountType {
	if x != nil {
		return x.AccountType
	}
	return v2.AccountType(0)
}

func (x *CreateUserReq) GetPassword() string {
	if x != nil {
		return x.Password
	}
	return ""
}

func (x *CreateUserReq) GetNickname() string {
	if x != nil {
		return x.Nickname
	}
	return ""
}

func (x *CreateUserReq) GetAreaCode() int32 {
	if x != nil {
		return x.AreaCode
	}
	return 0
}

func (x *CreateUserReq) GetShareCode() string {
	if x != nil {
		return x.ShareCode
	}
	return ""
}

func (x *CreateUserReq) GetFaceUrl() string {
	if x != nil {
		return x.FaceUrl
	}
	return ""
}

func (x *CreateUserReq) GetEmail() string {
	if x != nil {
		return x.Email
	}
	return ""
}

func (x *CreateUserReq) GetPhone() string {
	if x != nil {
		return x.Phone
	}
	return ""
}

func (x *CreateUserReq) GetGender() v2.Gender {
	if x != nil {
		return x.Gender
	}
	return v2.Gender(0)
}

func (x *CreateUserReq) GetIsGenerate() int32 {
	if x != nil {
		return x.IsGenerate
	}
	return 0
}

func (x *CreateUserReq) GetNodeId() string {
	if x != nil {
		return x.NodeId
	}
	return ""
}

func (x *CreateUserReq) GetTenantId() string {
	if x != nil {
		return x.TenantId
	}
	return ""
}

func (x *CreateUserReq) GetFromUserId() string {
	if x != nil {
		return x.FromUserId
	}
	return ""
}

type CreateUserReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *CreateUserReply) Reset() {
	*x = CreateUserReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_user_center_user_v2_user_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateUserReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateUserReply) ProtoMessage() {}

func (x *CreateUserReply) ProtoReflect() protoreflect.Message {
	mi := &file_user_center_user_v2_user_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateUserReply.ProtoReflect.Descriptor instead.
func (*CreateUserReply) Descriptor() ([]byte, []int) {
	return file_user_center_user_v2_user_proto_rawDescGZIP(), []int{1}
}

// 更新密码
// -------------------------------------------
type UpdatePasswordReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId   string `protobuf:"bytes,1,opt,name=userId,proto3" json:"userId,omitempty"`     // 用户 id
	Password string `protobuf:"bytes,2,opt,name=password,proto3" json:"password,omitempty"` // 密码
}

func (x *UpdatePasswordReq) Reset() {
	*x = UpdatePasswordReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_user_center_user_v2_user_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdatePasswordReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdatePasswordReq) ProtoMessage() {}

func (x *UpdatePasswordReq) ProtoReflect() protoreflect.Message {
	mi := &file_user_center_user_v2_user_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdatePasswordReq.ProtoReflect.Descriptor instead.
func (*UpdatePasswordReq) Descriptor() ([]byte, []int) {
	return file_user_center_user_v2_user_proto_rawDescGZIP(), []int{2}
}

func (x *UpdatePasswordReq) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *UpdatePasswordReq) GetPassword() string {
	if x != nil {
		return x.Password
	}
	return ""
}

type UpdatePasswordReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *UpdatePasswordReply) Reset() {
	*x = UpdatePasswordReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_user_center_user_v2_user_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdatePasswordReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdatePasswordReply) ProtoMessage() {}

func (x *UpdatePasswordReply) ProtoReflect() protoreflect.Message {
	mi := &file_user_center_user_v2_user_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdatePasswordReply.ProtoReflect.Descriptor instead.
func (*UpdatePasswordReply) Descriptor() ([]byte, []int) {
	return file_user_center_user_v2_user_proto_rawDescGZIP(), []int{3}
}

// 删除用户
// -------------------------------------------
type DeleteUserReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId string `protobuf:"bytes,1,opt,name=userId,proto3" json:"userId,omitempty"` // 用户 id
}

func (x *DeleteUserReq) Reset() {
	*x = DeleteUserReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_user_center_user_v2_user_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteUserReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteUserReq) ProtoMessage() {}

func (x *DeleteUserReq) ProtoReflect() protoreflect.Message {
	mi := &file_user_center_user_v2_user_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteUserReq.ProtoReflect.Descriptor instead.
func (*DeleteUserReq) Descriptor() ([]byte, []int) {
	return file_user_center_user_v2_user_proto_rawDescGZIP(), []int{4}
}

func (x *DeleteUserReq) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

type DeleteUserReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *DeleteUserReply) Reset() {
	*x = DeleteUserReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_user_center_user_v2_user_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteUserReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteUserReply) ProtoMessage() {}

func (x *DeleteUserReply) ProtoReflect() protoreflect.Message {
	mi := &file_user_center_user_v2_user_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteUserReply.ProtoReflect.Descriptor instead.
func (*DeleteUserReply) Descriptor() ([]byte, []int) {
	return file_user_center_user_v2_user_proto_rawDescGZIP(), []int{5}
}

// 校验密码
// -------------------------------------------
type VerifyPasswordReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId   string `protobuf:"bytes,1,opt,name=userId,proto3" json:"userId,omitempty"`     // 用户 id
	Password string `protobuf:"bytes,2,opt,name=password,proto3" json:"password,omitempty"` // 密码
}

func (x *VerifyPasswordReq) Reset() {
	*x = VerifyPasswordReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_user_center_user_v2_user_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VerifyPasswordReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VerifyPasswordReq) ProtoMessage() {}

func (x *VerifyPasswordReq) ProtoReflect() protoreflect.Message {
	mi := &file_user_center_user_v2_user_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VerifyPasswordReq.ProtoReflect.Descriptor instead.
func (*VerifyPasswordReq) Descriptor() ([]byte, []int) {
	return file_user_center_user_v2_user_proto_rawDescGZIP(), []int{6}
}

func (x *VerifyPasswordReq) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *VerifyPasswordReq) GetPassword() string {
	if x != nil {
		return x.Password
	}
	return ""
}

type VerifyPasswordReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ok bool   `protobuf:"varint,1,opt,name=ok,proto3" json:"ok,omitempty"`
	Id string `protobuf:"bytes,2,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *VerifyPasswordReply) Reset() {
	*x = VerifyPasswordReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_user_center_user_v2_user_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VerifyPasswordReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VerifyPasswordReply) ProtoMessage() {}

func (x *VerifyPasswordReply) ProtoReflect() protoreflect.Message {
	mi := &file_user_center_user_v2_user_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VerifyPasswordReply.ProtoReflect.Descriptor instead.
func (*VerifyPasswordReply) Descriptor() ([]byte, []int) {
	return file_user_center_user_v2_user_proto_rawDescGZIP(), []int{7}
}

func (x *VerifyPasswordReply) GetOk() bool {
	if x != nil {
		return x.Ok
	}
	return false
}

func (x *VerifyPasswordReply) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

// 批量插入
type BatchInsertUserReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	NodeId string      `protobuf:"bytes,1,opt,name=nodeId,proto3" json:"nodeId,omitempty"` // 节点 id
	List   []*UserData `protobuf:"bytes,2,rep,name=list,proto3" json:"list,omitempty"`     // 插入的数据
}

func (x *BatchInsertUserReq) Reset() {
	*x = BatchInsertUserReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_user_center_user_v2_user_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BatchInsertUserReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BatchInsertUserReq) ProtoMessage() {}

func (x *BatchInsertUserReq) ProtoReflect() protoreflect.Message {
	mi := &file_user_center_user_v2_user_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BatchInsertUserReq.ProtoReflect.Descriptor instead.
func (*BatchInsertUserReq) Descriptor() ([]byte, []int) {
	return file_user_center_user_v2_user_proto_rawDescGZIP(), []int{8}
}

func (x *BatchInsertUserReq) GetNodeId() string {
	if x != nil {
		return x.NodeId
	}
	return ""
}

func (x *BatchInsertUserReq) GetList() []*UserData {
	if x != nil {
		return x.List
	}
	return nil
}

type BatchInsertUserReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *BatchInsertUserReply) Reset() {
	*x = BatchInsertUserReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_user_center_user_v2_user_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BatchInsertUserReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BatchInsertUserReply) ProtoMessage() {}

func (x *BatchInsertUserReply) ProtoReflect() protoreflect.Message {
	mi := &file_user_center_user_v2_user_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BatchInsertUserReply.ProtoReflect.Descriptor instead.
func (*BatchInsertUserReply) Descriptor() ([]byte, []int) {
	return file_user_center_user_v2_user_proto_rawDescGZIP(), []int{9}
}

// 获取同步用户信息
type GetSyncUserInfoReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId string `protobuf:"bytes,1,opt,name=userId,proto3" json:"userId,omitempty"` //用户id
}

func (x *GetSyncUserInfoReq) Reset() {
	*x = GetSyncUserInfoReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_user_center_user_v2_user_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetSyncUserInfoReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetSyncUserInfoReq) ProtoMessage() {}

func (x *GetSyncUserInfoReq) ProtoReflect() protoreflect.Message {
	mi := &file_user_center_user_v2_user_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetSyncUserInfoReq.ProtoReflect.Descriptor instead.
func (*GetSyncUserInfoReq) Descriptor() ([]byte, []int) {
	return file_user_center_user_v2_user_proto_rawDescGZIP(), []int{10}
}

func (x *GetSyncUserInfoReq) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

type GetSyncUserInfoReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserInfo *v21.SyncUser   `protobuf:"bytes,1,opt,name=userInfo,proto3" json:"userInfo,omitempty"` //用户信息
	Nodes    []*SyncUserNode `protobuf:"bytes,2,rep,name=nodes,proto3" json:"nodes,omitempty"`       //用户所在的节点
}

func (x *GetSyncUserInfoReply) Reset() {
	*x = GetSyncUserInfoReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_user_center_user_v2_user_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetSyncUserInfoReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetSyncUserInfoReply) ProtoMessage() {}

func (x *GetSyncUserInfoReply) ProtoReflect() protoreflect.Message {
	mi := &file_user_center_user_v2_user_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetSyncUserInfoReply.ProtoReflect.Descriptor instead.
func (*GetSyncUserInfoReply) Descriptor() ([]byte, []int) {
	return file_user_center_user_v2_user_proto_rawDescGZIP(), []int{11}
}

func (x *GetSyncUserInfoReply) GetUserInfo() *v21.SyncUser {
	if x != nil {
		return x.UserInfo
	}
	return nil
}

func (x *GetSyncUserInfoReply) GetNodes() []*SyncUserNode {
	if x != nil {
		return x.Nodes
	}
	return nil
}

// 同步用户信息
type SyncUserInfoReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserInfo *v21.SyncUser `protobuf:"bytes,1,opt,name=userInfo,proto3" json:"userInfo,omitempty"` //用户信息
}

func (x *SyncUserInfoReq) Reset() {
	*x = SyncUserInfoReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_user_center_user_v2_user_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SyncUserInfoReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SyncUserInfoReq) ProtoMessage() {}

func (x *SyncUserInfoReq) ProtoReflect() protoreflect.Message {
	mi := &file_user_center_user_v2_user_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SyncUserInfoReq.ProtoReflect.Descriptor instead.
func (*SyncUserInfoReq) Descriptor() ([]byte, []int) {
	return file_user_center_user_v2_user_proto_rawDescGZIP(), []int{12}
}

func (x *SyncUserInfoReq) GetUserInfo() *v21.SyncUser {
	if x != nil {
		return x.UserInfo
	}
	return nil
}

type SyncUserInfoReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *SyncUserInfoReply) Reset() {
	*x = SyncUserInfoReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_user_center_user_v2_user_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SyncUserInfoReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SyncUserInfoReply) ProtoMessage() {}

func (x *SyncUserInfoReply) ProtoReflect() protoreflect.Message {
	mi := &file_user_center_user_v2_user_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SyncUserInfoReply.ProtoReflect.Descriptor instead.
func (*SyncUserInfoReply) Descriptor() ([]byte, []int) {
	return file_user_center_user_v2_user_proto_rawDescGZIP(), []int{13}
}

// 同步的用户节点信息
type SyncUserNode struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	NodeId       string `protobuf:"bytes,1,opt,name=nodeId,proto3" json:"nodeId,omitempty"`             // 节点 id
	FaceURL      string `protobuf:"bytes,2,opt,name=faceURL,proto3" json:"faceURL,omitempty"`           // 头像
	Nickname     string `protobuf:"bytes,3,opt,name=nickname,proto3" json:"nickname,omitempty"`         // 昵称
	FromUserId   string `protobuf:"bytes,4,opt,name=fromUserId,proto3" json:"fromUserId,omitempty"`     // 推广来源用户id
	UserId       string `protobuf:"bytes,5,opt,name=userId,proto3" json:"userId,omitempty"`             // 用户所在节点id
	CenterUserId string `protobuf:"bytes,6,opt,name=centerUserId,proto3" json:"centerUserId,omitempty"` // 用户中心的id
	TenantId     string `protobuf:"bytes,7,opt,name=tenantId,proto3" json:"tenantId,omitempty"`         // 租户id
}

func (x *SyncUserNode) Reset() {
	*x = SyncUserNode{}
	if protoimpl.UnsafeEnabled {
		mi := &file_user_center_user_v2_user_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SyncUserNode) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SyncUserNode) ProtoMessage() {}

func (x *SyncUserNode) ProtoReflect() protoreflect.Message {
	mi := &file_user_center_user_v2_user_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SyncUserNode.ProtoReflect.Descriptor instead.
func (*SyncUserNode) Descriptor() ([]byte, []int) {
	return file_user_center_user_v2_user_proto_rawDescGZIP(), []int{14}
}

func (x *SyncUserNode) GetNodeId() string {
	if x != nil {
		return x.NodeId
	}
	return ""
}

func (x *SyncUserNode) GetFaceURL() string {
	if x != nil {
		return x.FaceURL
	}
	return ""
}

func (x *SyncUserNode) GetNickname() string {
	if x != nil {
		return x.Nickname
	}
	return ""
}

func (x *SyncUserNode) GetFromUserId() string {
	if x != nil {
		return x.FromUserId
	}
	return ""
}

func (x *SyncUserNode) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *SyncUserNode) GetCenterUserId() string {
	if x != nil {
		return x.CenterUserId
	}
	return ""
}

func (x *SyncUserNode) GetTenantId() string {
	if x != nil {
		return x.TenantId
	}
	return ""
}

type UserData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CreatedAt int64  `protobuf:"varint,1,opt,name=createdAt,proto3" json:"createdAt,omitempty"` // 创建时间
	UpdatedAt int64  `protobuf:"varint,2,opt,name=updatedAt,proto3" json:"updatedAt,omitempty"` // 更新时间
	DeletedAt int64  `protobuf:"varint,3,opt,name=deletedAt,proto3" json:"deletedAt,omitempty"` // 删除时间
	Id        string `protobuf:"bytes,4,opt,name=id,proto3" json:"id,omitempty"`                // profile id 和 userId 等价
	Password  string `protobuf:"bytes,5,opt,name=password,proto3" json:"password,omitempty"`    // 密码
	TenantId  string `protobuf:"bytes,6,opt,name=tenantId,proto3" json:"tenantId,omitempty"`    // 租户id
}

func (x *UserData) Reset() {
	*x = UserData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_user_center_user_v2_user_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserData) ProtoMessage() {}

func (x *UserData) ProtoReflect() protoreflect.Message {
	mi := &file_user_center_user_v2_user_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserData.ProtoReflect.Descriptor instead.
func (*UserData) Descriptor() ([]byte, []int) {
	return file_user_center_user_v2_user_proto_rawDescGZIP(), []int{15}
}

func (x *UserData) GetCreatedAt() int64 {
	if x != nil {
		return x.CreatedAt
	}
	return 0
}

func (x *UserData) GetUpdatedAt() int64 {
	if x != nil {
		return x.UpdatedAt
	}
	return 0
}

func (x *UserData) GetDeletedAt() int64 {
	if x != nil {
		return x.DeletedAt
	}
	return 0
}

func (x *UserData) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *UserData) GetPassword() string {
	if x != nil {
		return x.Password
	}
	return ""
}

func (x *UserData) GetTenantId() string {
	if x != nil {
		return x.TenantId
	}
	return ""
}

type GetNodeInfoByUserIdReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId string `protobuf:"bytes,1,opt,name=userId,proto3" json:"userId,omitempty"` // 用户id
}

func (x *GetNodeInfoByUserIdReq) Reset() {
	*x = GetNodeInfoByUserIdReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_user_center_user_v2_user_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetNodeInfoByUserIdReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetNodeInfoByUserIdReq) ProtoMessage() {}

func (x *GetNodeInfoByUserIdReq) ProtoReflect() protoreflect.Message {
	mi := &file_user_center_user_v2_user_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetNodeInfoByUserIdReq.ProtoReflect.Descriptor instead.
func (*GetNodeInfoByUserIdReq) Descriptor() ([]byte, []int) {
	return file_user_center_user_v2_user_proto_rawDescGZIP(), []int{16}
}

func (x *GetNodeInfoByUserIdReq) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

type GetNodeInfoByUserIdReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserNodes []*UserNode `protobuf:"bytes,1,rep,name=userNodes,proto3" json:"userNodes,omitempty"` // 用户所在的节点
}

func (x *GetNodeInfoByUserIdReply) Reset() {
	*x = GetNodeInfoByUserIdReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_user_center_user_v2_user_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetNodeInfoByUserIdReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetNodeInfoByUserIdReply) ProtoMessage() {}

func (x *GetNodeInfoByUserIdReply) ProtoReflect() protoreflect.Message {
	mi := &file_user_center_user_v2_user_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetNodeInfoByUserIdReply.ProtoReflect.Descriptor instead.
func (*GetNodeInfoByUserIdReply) Descriptor() ([]byte, []int) {
	return file_user_center_user_v2_user_proto_rawDescGZIP(), []int{17}
}

func (x *GetNodeInfoByUserIdReply) GetUserNodes() []*UserNode {
	if x != nil {
		return x.UserNodes
	}
	return nil
}

type UserNode struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Logo   string `protobuf:"bytes,1,opt,name=logo,proto3" json:"logo,omitempty"`     //   节点logo
	Name   string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`     // 节点名称
	NodeId string `protobuf:"bytes,3,opt,name=nodeId,proto3" json:"nodeId,omitempty"` // 节点id
	Code   string `protobuf:"bytes,4,opt,name=code,proto3" json:"code,omitempty"`     // 节点code
}

func (x *UserNode) Reset() {
	*x = UserNode{}
	if protoimpl.UnsafeEnabled {
		mi := &file_user_center_user_v2_user_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserNode) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserNode) ProtoMessage() {}

func (x *UserNode) ProtoReflect() protoreflect.Message {
	mi := &file_user_center_user_v2_user_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserNode.ProtoReflect.Descriptor instead.
func (*UserNode) Descriptor() ([]byte, []int) {
	return file_user_center_user_v2_user_proto_rawDescGZIP(), []int{18}
}

func (x *UserNode) GetLogo() string {
	if x != nil {
		return x.Logo
	}
	return ""
}

func (x *UserNode) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *UserNode) GetNodeId() string {
	if x != nil {
		return x.NodeId
	}
	return ""
}

func (x *UserNode) GetCode() string {
	if x != nil {
		return x.Code
	}
	return ""
}

// 下发用户信息
type DistributeUserReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId           string `protobuf:"bytes,1,opt,name=userId,proto3" json:"userId,omitempty"`                      // 用户id
	NodeId           string `protobuf:"bytes,2,opt,name=nodeId,proto3" json:"nodeId,omitempty"`                      // 用户id
	Code             string `protobuf:"bytes,3,opt,name=code,proto3" json:"code,omitempty"`                          // 节点code
	IsJoinDistribute bool   `protobuf:"varint,4,opt,name=isJoinDistribute,proto3" json:"isJoinDistribute,omitempty"` // 是否加入社区下发
}

func (x *DistributeUserReq) Reset() {
	*x = DistributeUserReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_user_center_user_v2_user_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DistributeUserReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DistributeUserReq) ProtoMessage() {}

func (x *DistributeUserReq) ProtoReflect() protoreflect.Message {
	mi := &file_user_center_user_v2_user_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DistributeUserReq.ProtoReflect.Descriptor instead.
func (*DistributeUserReq) Descriptor() ([]byte, []int) {
	return file_user_center_user_v2_user_proto_rawDescGZIP(), []int{19}
}

func (x *DistributeUserReq) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *DistributeUserReq) GetNodeId() string {
	if x != nil {
		return x.NodeId
	}
	return ""
}

func (x *DistributeUserReq) GetCode() string {
	if x != nil {
		return x.Code
	}
	return ""
}

func (x *DistributeUserReq) GetIsJoinDistribute() bool {
	if x != nil {
		return x.IsJoinDistribute
	}
	return false
}

type DistributeUserReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *DistributeUserReply) Reset() {
	*x = DistributeUserReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_user_center_user_v2_user_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DistributeUserReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DistributeUserReply) ProtoMessage() {}

func (x *DistributeUserReply) ProtoReflect() protoreflect.Message {
	mi := &file_user_center_user_v2_user_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DistributeUserReply.ProtoReflect.Descriptor instead.
func (*DistributeUserReply) Descriptor() ([]byte, []int) {
	return file_user_center_user_v2_user_proto_rawDescGZIP(), []int{20}
}

// 下发用户信息
type GetUserNodeByNodeIdAndCenterUserIdReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId string `protobuf:"bytes,1,opt,name=userId,proto3" json:"userId,omitempty"` // 用户id
	NodeId string `protobuf:"bytes,2,opt,name=nodeId,proto3" json:"nodeId,omitempty"` // 用户id
}

func (x *GetUserNodeByNodeIdAndCenterUserIdReq) Reset() {
	*x = GetUserNodeByNodeIdAndCenterUserIdReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_user_center_user_v2_user_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetUserNodeByNodeIdAndCenterUserIdReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetUserNodeByNodeIdAndCenterUserIdReq) ProtoMessage() {}

func (x *GetUserNodeByNodeIdAndCenterUserIdReq) ProtoReflect() protoreflect.Message {
	mi := &file_user_center_user_v2_user_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetUserNodeByNodeIdAndCenterUserIdReq.ProtoReflect.Descriptor instead.
func (*GetUserNodeByNodeIdAndCenterUserIdReq) Descriptor() ([]byte, []int) {
	return file_user_center_user_v2_user_proto_rawDescGZIP(), []int{21}
}

func (x *GetUserNodeByNodeIdAndCenterUserIdReq) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *GetUserNodeByNodeIdAndCenterUserIdReq) GetNodeId() string {
	if x != nil {
		return x.NodeId
	}
	return ""
}

type GetUserNodeByNodeIdAndCenterUserIdReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserNode *SyncUserNode `protobuf:"bytes,1,opt,name=userNode,proto3" json:"userNode,omitempty"` //用户所在的节点
}

func (x *GetUserNodeByNodeIdAndCenterUserIdReply) Reset() {
	*x = GetUserNodeByNodeIdAndCenterUserIdReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_user_center_user_v2_user_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetUserNodeByNodeIdAndCenterUserIdReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetUserNodeByNodeIdAndCenterUserIdReply) ProtoMessage() {}

func (x *GetUserNodeByNodeIdAndCenterUserIdReply) ProtoReflect() protoreflect.Message {
	mi := &file_user_center_user_v2_user_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetUserNodeByNodeIdAndCenterUserIdReply.ProtoReflect.Descriptor instead.
func (*GetUserNodeByNodeIdAndCenterUserIdReply) Descriptor() ([]byte, []int) {
	return file_user_center_user_v2_user_proto_rawDescGZIP(), []int{22}
}

func (x *GetUserNodeByNodeIdAndCenterUserIdReply) GetUserNode() *SyncUserNode {
	if x != nil {
		return x.UserNode
	}
	return nil
}

// 注销账号
// -------------------------------------------
type CancelNodeAccountReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId string `protobuf:"bytes,1,opt,name=userId,proto3" json:"userId,omitempty"` // 用户ID
}

func (x *CancelNodeAccountReq) Reset() {
	*x = CancelNodeAccountReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_user_center_user_v2_user_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CancelNodeAccountReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CancelNodeAccountReq) ProtoMessage() {}

func (x *CancelNodeAccountReq) ProtoReflect() protoreflect.Message {
	mi := &file_user_center_user_v2_user_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CancelNodeAccountReq.ProtoReflect.Descriptor instead.
func (*CancelNodeAccountReq) Descriptor() ([]byte, []int) {
	return file_user_center_user_v2_user_proto_rawDescGZIP(), []int{23}
}

func (x *CancelNodeAccountReq) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

type CancelNodeAccountReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *CancelNodeAccountReply) Reset() {
	*x = CancelNodeAccountReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_user_center_user_v2_user_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CancelNodeAccountReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CancelNodeAccountReply) ProtoMessage() {}

func (x *CancelNodeAccountReply) ProtoReflect() protoreflect.Message {
	mi := &file_user_center_user_v2_user_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CancelNodeAccountReply.ProtoReflect.Descriptor instead.
func (*CancelNodeAccountReply) Descriptor() ([]byte, []int) {
	return file_user_center_user_v2_user_proto_rawDescGZIP(), []int{24}
}

var File_user_center_user_v2_user_proto protoreflect.FileDescriptor

var file_user_center_user_v2_user_proto_rawDesc = []byte{
	0x0a, 0x1e, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x63, 0x65, 0x6e, 0x74, 0x65, 0x72, 0x2f, 0x75, 0x73,
	0x65, 0x72, 0x2f, 0x76, 0x32, 0x2f, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x12, 0x17, 0x61, 0x70, 0x69, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x63, 0x65, 0x6e, 0x74, 0x65,
	0x72, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x76, 0x32, 0x1a, 0x17, 0x76, 0x61, 0x6c, 0x69, 0x64,
	0x61, 0x74, 0x65, 0x2f, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x1a, 0x1a, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2f, 0x65, 0x6e, 0x75, 0x6d, 0x2f,
	0x76, 0x32, 0x2f, 0x65, 0x6e, 0x75, 0x6d, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1a,
	0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2f, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2f, 0x76, 0x32, 0x2f,
	0x75, 0x73, 0x65, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xe0, 0x03, 0x0a, 0x0d, 0x43,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x71, 0x12, 0x21, 0x0a, 0x07,
	0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x07, 0xfa,
	0x42, 0x04, 0x72, 0x02, 0x10, 0x06, 0x52, 0x07, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12,
	0x41, 0x0a, 0x0b, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0e, 0x32, 0x1f, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f,
	0x6e, 0x2e, 0x65, 0x6e, 0x75, 0x6d, 0x2e, 0x76, 0x32, 0x2e, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x54, 0x79, 0x70, 0x65, 0x52, 0x0b, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x54, 0x79,
	0x70, 0x65, 0x12, 0x25, 0x0a, 0x08, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x42, 0x09, 0xfa, 0x42, 0x06, 0x72, 0x04, 0x10, 0x08, 0x18, 0x10, 0x52,
	0x08, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x6e, 0x69, 0x63,
	0x6b, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6e, 0x69, 0x63,
	0x6b, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x61, 0x72, 0x65, 0x61, 0x43, 0x6f, 0x64,
	0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x61, 0x72, 0x65, 0x61, 0x43, 0x6f, 0x64,
	0x65, 0x12, 0x1c, 0x0a, 0x09, 0x73, 0x68, 0x61, 0x72, 0x65, 0x43, 0x6f, 0x64, 0x65, 0x18, 0x06,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x68, 0x61, 0x72, 0x65, 0x43, 0x6f, 0x64, 0x65, 0x12,
	0x18, 0x0a, 0x07, 0x66, 0x61, 0x63, 0x65, 0x55, 0x72, 0x6c, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x07, 0x66, 0x61, 0x63, 0x65, 0x55, 0x72, 0x6c, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x6d, 0x61,
	0x69, 0x6c, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x12,
	0x14, 0x0a, 0x05, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05,
	0x70, 0x68, 0x6f, 0x6e, 0x65, 0x12, 0x32, 0x0a, 0x06, 0x67, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x18,
	0x0a, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1a, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x63, 0x6f, 0x6d, 0x6d,
	0x6f, 0x6e, 0x2e, 0x65, 0x6e, 0x75, 0x6d, 0x2e, 0x76, 0x32, 0x2e, 0x47, 0x65, 0x6e, 0x64, 0x65,
	0x72, 0x52, 0x06, 0x67, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x12, 0x1e, 0x0a, 0x0a, 0x69, 0x73, 0x47,
	0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x65, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x69,
	0x73, 0x47, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x6e, 0x6f, 0x64,
	0x65, 0x49, 0x64, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x6e, 0x6f, 0x64, 0x65, 0x49,
	0x64, 0x12, 0x1a, 0x0a, 0x08, 0x74, 0x65, 0x6e, 0x61, 0x6e, 0x74, 0x49, 0x64, 0x18, 0x0d, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x08, 0x74, 0x65, 0x6e, 0x61, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x1e, 0x0a,
	0x0a, 0x66, 0x72, 0x6f, 0x6d, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x18, 0x0e, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0a, 0x66, 0x72, 0x6f, 0x6d, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x22, 0x11, 0x0a,
	0x0f, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x70, 0x6c, 0x79,
	0x22, 0x52, 0x0a, 0x11, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x50, 0x61, 0x73, 0x73, 0x77, 0x6f,
	0x72, 0x64, 0x52, 0x65, 0x71, 0x12, 0x16, 0x0a, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x25, 0x0a,
	0x08, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x42,
	0x09, 0xfa, 0x42, 0x06, 0x72, 0x04, 0x10, 0x08, 0x18, 0x10, 0x52, 0x08, 0x70, 0x61, 0x73, 0x73,
	0x77, 0x6f, 0x72, 0x64, 0x22, 0x15, 0x0a, 0x13, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x50, 0x61,
	0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x27, 0x0a, 0x0d, 0x44,
	0x65, 0x6c, 0x65, 0x74, 0x65, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x71, 0x12, 0x16, 0x0a, 0x06,
	0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73,
	0x65, 0x72, 0x49, 0x64, 0x22, 0x11, 0x0a, 0x0f, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x55, 0x73,
	0x65, 0x72, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x47, 0x0a, 0x11, 0x56, 0x65, 0x72, 0x69, 0x66,
	0x79, 0x50, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x52, 0x65, 0x71, 0x12, 0x16, 0x0a, 0x06,
	0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73,
	0x65, 0x72, 0x49, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64,
	0x22, 0x35, 0x0a, 0x13, 0x56, 0x65, 0x72, 0x69, 0x66, 0x79, 0x50, 0x61, 0x73, 0x73, 0x77, 0x6f,
	0x72, 0x64, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x0e, 0x0a, 0x02, 0x6f, 0x6b, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x02, 0x6f, 0x6b, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x22, 0x63, 0x0a, 0x12, 0x42, 0x61, 0x74, 0x63, 0x68,
	0x49, 0x6e, 0x73, 0x65, 0x72, 0x74, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x71, 0x12, 0x16, 0x0a,
	0x06, 0x6e, 0x6f, 0x64, 0x65, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x6e,
	0x6f, 0x64, 0x65, 0x49, 0x64, 0x12, 0x35, 0x0a, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x02, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x63,
	0x65, 0x6e, 0x74, 0x65, 0x72, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x76, 0x32, 0x2e, 0x55, 0x73,
	0x65, 0x72, 0x44, 0x61, 0x74, 0x61, 0x52, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x22, 0x16, 0x0a, 0x14,
	0x42, 0x61, 0x74, 0x63, 0x68, 0x49, 0x6e, 0x73, 0x65, 0x72, 0x74, 0x55, 0x73, 0x65, 0x72, 0x52,
	0x65, 0x70, 0x6c, 0x79, 0x22, 0x2c, 0x0a, 0x12, 0x47, 0x65, 0x74, 0x53, 0x79, 0x6e, 0x63, 0x55,
	0x73, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x71, 0x12, 0x16, 0x0a, 0x06, 0x75, 0x73,
	0x65, 0x72, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72,
	0x49, 0x64, 0x22, 0x8e, 0x01, 0x0a, 0x14, 0x47, 0x65, 0x74, 0x53, 0x79, 0x6e, 0x63, 0x55, 0x73,
	0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x39, 0x0a, 0x08, 0x75,
	0x73, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e,
	0x61, 0x70, 0x69, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c,
	0x2e, 0x76, 0x32, 0x2e, 0x53, 0x79, 0x6e, 0x63, 0x55, 0x73, 0x65, 0x72, 0x52, 0x08, 0x75, 0x73,
	0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x3b, 0x0a, 0x05, 0x6e, 0x6f, 0x64, 0x65, 0x73, 0x18,
	0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x25, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x75, 0x73, 0x65, 0x72,
	0x5f, 0x63, 0x65, 0x6e, 0x74, 0x65, 0x72, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x76, 0x32, 0x2e,
	0x53, 0x79, 0x6e, 0x63, 0x55, 0x73, 0x65, 0x72, 0x4e, 0x6f, 0x64, 0x65, 0x52, 0x05, 0x6e, 0x6f,
	0x64, 0x65, 0x73, 0x22, 0x4c, 0x0a, 0x0f, 0x53, 0x79, 0x6e, 0x63, 0x55, 0x73, 0x65, 0x72, 0x49,
	0x6e, 0x66, 0x6f, 0x52, 0x65, 0x71, 0x12, 0x39, 0x0a, 0x08, 0x75, 0x73, 0x65, 0x72, 0x49, 0x6e,
	0x66, 0x6f, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x63,
	0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x76, 0x32, 0x2e, 0x53,
	0x79, 0x6e, 0x63, 0x55, 0x73, 0x65, 0x72, 0x52, 0x08, 0x75, 0x73, 0x65, 0x72, 0x49, 0x6e, 0x66,
	0x6f, 0x22, 0x13, 0x0a, 0x11, 0x53, 0x79, 0x6e, 0x63, 0x55, 0x73, 0x65, 0x72, 0x49, 0x6e, 0x66,
	0x6f, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0xd4, 0x01, 0x0a, 0x0c, 0x53, 0x79, 0x6e, 0x63, 0x55,
	0x73, 0x65, 0x72, 0x4e, 0x6f, 0x64, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x6e, 0x6f, 0x64, 0x65, 0x49,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x6e, 0x6f, 0x64, 0x65, 0x49, 0x64, 0x12,
	0x18, 0x0a, 0x07, 0x66, 0x61, 0x63, 0x65, 0x55, 0x52, 0x4c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x07, 0x66, 0x61, 0x63, 0x65, 0x55, 0x52, 0x4c, 0x12, 0x1a, 0x0a, 0x08, 0x6e, 0x69, 0x63,
	0x6b, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6e, 0x69, 0x63,
	0x6b, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x66, 0x72, 0x6f, 0x6d, 0x55, 0x73, 0x65,
	0x72, 0x49, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x66, 0x72, 0x6f, 0x6d, 0x55,
	0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x22, 0x0a,
	0x0c, 0x63, 0x65, 0x6e, 0x74, 0x65, 0x72, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x18, 0x06, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0c, 0x63, 0x65, 0x6e, 0x74, 0x65, 0x72, 0x55, 0x73, 0x65, 0x72, 0x49,
	0x64, 0x12, 0x1a, 0x0a, 0x08, 0x74, 0x65, 0x6e, 0x61, 0x6e, 0x74, 0x49, 0x64, 0x18, 0x07, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x08, 0x74, 0x65, 0x6e, 0x61, 0x6e, 0x74, 0x49, 0x64, 0x22, 0xac, 0x01,
	0x0a, 0x08, 0x55, 0x73, 0x65, 0x72, 0x44, 0x61, 0x74, 0x61, 0x12, 0x1c, 0x0a, 0x09, 0x63, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x63,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x75, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x64, 0x41, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x75, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65,
	0x64, 0x41, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x64, 0x65, 0x6c, 0x65, 0x74,
	0x65, 0x64, 0x41, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x02, 0x69, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64,
	0x12, 0x1a, 0x0a, 0x08, 0x74, 0x65, 0x6e, 0x61, 0x6e, 0x74, 0x49, 0x64, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x08, 0x74, 0x65, 0x6e, 0x61, 0x6e, 0x74, 0x49, 0x64, 0x22, 0x30, 0x0a, 0x16,
	0x47, 0x65, 0x74, 0x4e, 0x6f, 0x64, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x42, 0x79, 0x55, 0x73, 0x65,
	0x72, 0x49, 0x64, 0x52, 0x65, 0x71, 0x12, 0x16, 0x0a, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x22, 0x5b,
	0x0a, 0x18, 0x47, 0x65, 0x74, 0x4e, 0x6f, 0x64, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x42, 0x79, 0x55,
	0x73, 0x65, 0x72, 0x49, 0x64, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x3f, 0x0a, 0x09, 0x75, 0x73,
	0x65, 0x72, 0x4e, 0x6f, 0x64, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x21, 0x2e,
	0x61, 0x70, 0x69, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x63, 0x65, 0x6e, 0x74, 0x65, 0x72, 0x2e,
	0x75, 0x73, 0x65, 0x72, 0x2e, 0x76, 0x32, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x4e, 0x6f, 0x64, 0x65,
	0x52, 0x09, 0x75, 0x73, 0x65, 0x72, 0x4e, 0x6f, 0x64, 0x65, 0x73, 0x22, 0x5e, 0x0a, 0x08, 0x55,
	0x73, 0x65, 0x72, 0x4e, 0x6f, 0x64, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x6c, 0x6f, 0x67, 0x6f, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6c, 0x6f, 0x67, 0x6f, 0x12, 0x12, 0x0a, 0x04, 0x6e,
	0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12,
	0x16, 0x0a, 0x06, 0x6e, 0x6f, 0x64, 0x65, 0x49, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x06, 0x6e, 0x6f, 0x64, 0x65, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x22, 0x83, 0x01, 0x0a, 0x11,
	0x44, 0x69, 0x73, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65,
	0x71, 0x12, 0x16, 0x0a, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x6e, 0x6f, 0x64,
	0x65, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x6e, 0x6f, 0x64, 0x65, 0x49,
	0x64, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x2a, 0x0a, 0x10, 0x69, 0x73, 0x4a, 0x6f, 0x69, 0x6e, 0x44,
	0x69, 0x73, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x10, 0x69, 0x73, 0x4a, 0x6f, 0x69, 0x6e, 0x44, 0x69, 0x73, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74,
	0x65, 0x22, 0x15, 0x0a, 0x13, 0x44, 0x69, 0x73, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x55,
	0x73, 0x65, 0x72, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x57, 0x0a, 0x25, 0x47, 0x65, 0x74, 0x55,
	0x73, 0x65, 0x72, 0x4e, 0x6f, 0x64, 0x65, 0x42, 0x79, 0x4e, 0x6f, 0x64, 0x65, 0x49, 0x64, 0x41,
	0x6e, 0x64, 0x43, 0x65, 0x6e, 0x74, 0x65, 0x72, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x52, 0x65,
	0x71, 0x12, 0x16, 0x0a, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x6e, 0x6f, 0x64,
	0x65, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x6e, 0x6f, 0x64, 0x65, 0x49,
	0x64, 0x22, 0x6c, 0x0a, 0x27, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x4e, 0x6f, 0x64, 0x65,
	0x42, 0x79, 0x4e, 0x6f, 0x64, 0x65, 0x49, 0x64, 0x41, 0x6e, 0x64, 0x43, 0x65, 0x6e, 0x74, 0x65,
	0x72, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x41, 0x0a, 0x08,
	0x75, 0x73, 0x65, 0x72, 0x4e, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x25,
	0x2e, 0x61, 0x70, 0x69, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x63, 0x65, 0x6e, 0x74, 0x65, 0x72,
	0x2e, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x76, 0x32, 0x2e, 0x53, 0x79, 0x6e, 0x63, 0x55, 0x73, 0x65,
	0x72, 0x4e, 0x6f, 0x64, 0x65, 0x52, 0x08, 0x75, 0x73, 0x65, 0x72, 0x4e, 0x6f, 0x64, 0x65, 0x22,
	0x37, 0x0a, 0x14, 0x43, 0x61, 0x6e, 0x63, 0x65, 0x6c, 0x4e, 0x6f, 0x64, 0x65, 0x41, 0x63, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x12, 0x1f, 0x0a, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x72, 0x02, 0x10, 0x01,
	0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x22, 0x18, 0x0a, 0x16, 0x43, 0x61, 0x6e, 0x63,
	0x65, 0x6c, 0x4e, 0x6f, 0x64, 0x65, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65, 0x70,
	0x6c, 0x79, 0x2a, 0x4b, 0x0a, 0x0e, 0x55, 0x73, 0x65, 0x72, 0x4f, 0x6e, 0x6c, 0x69, 0x6e, 0x65,
	0x54, 0x79, 0x70, 0x65, 0x12, 0x1c, 0x0a, 0x18, 0x55, 0x53, 0x45, 0x52, 0x5f, 0x4f, 0x4e, 0x4c,
	0x49, 0x4e, 0x45, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x4f, 0x46, 0x46, 0x4c, 0x49, 0x4e, 0x45,
	0x10, 0x00, 0x12, 0x1b, 0x0a, 0x17, 0x55, 0x53, 0x45, 0x52, 0x5f, 0x4f, 0x4e, 0x4c, 0x49, 0x4e,
	0x45, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x4f, 0x4e, 0x4c, 0x49, 0x4e, 0x45, 0x10, 0x01, 0x32,
	0xe3, 0x09, 0x0a, 0x04, 0x55, 0x73, 0x65, 0x72, 0x12, 0x5e, 0x0a, 0x0a, 0x43, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x55, 0x73, 0x65, 0x72, 0x12, 0x26, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x75, 0x73, 0x65,
	0x72, 0x5f, 0x63, 0x65, 0x6e, 0x74, 0x65, 0x72, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x76, 0x32,
	0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x71, 0x1a, 0x28,
	0x2e, 0x61, 0x70, 0x69, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x63, 0x65, 0x6e, 0x74, 0x65, 0x72,
	0x2e, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x76, 0x32, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x55,
	0x73, 0x65, 0x72, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x6a, 0x0a, 0x0e, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x50, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x12, 0x2a, 0x2e, 0x61, 0x70, 0x69,
	0x2e, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x63, 0x65, 0x6e, 0x74, 0x65, 0x72, 0x2e, 0x75, 0x73, 0x65,
	0x72, 0x2e, 0x76, 0x32, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x50, 0x61, 0x73, 0x73, 0x77,
	0x6f, 0x72, 0x64, 0x52, 0x65, 0x71, 0x1a, 0x2c, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x75, 0x73, 0x65,
	0x72, 0x5f, 0x63, 0x65, 0x6e, 0x74, 0x65, 0x72, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x76, 0x32,
	0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x50, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x52,
	0x65, 0x70, 0x6c, 0x79, 0x12, 0x5e, 0x0a, 0x0a, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x55, 0x73,
	0x65, 0x72, 0x12, 0x26, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x63, 0x65,
	0x6e, 0x74, 0x65, 0x72, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x76, 0x32, 0x2e, 0x44, 0x65, 0x6c,
	0x65, 0x74, 0x65, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x71, 0x1a, 0x28, 0x2e, 0x61, 0x70, 0x69,
	0x2e, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x63, 0x65, 0x6e, 0x74, 0x65, 0x72, 0x2e, 0x75, 0x73, 0x65,
	0x72, 0x2e, 0x76, 0x32, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x55, 0x73, 0x65, 0x72, 0x52,
	0x65, 0x70, 0x6c, 0x79, 0x12, 0x6a, 0x0a, 0x0e, 0x56, 0x65, 0x72, 0x69, 0x66, 0x79, 0x50, 0x61,
	0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x12, 0x2a, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x75, 0x73, 0x65,
	0x72, 0x5f, 0x63, 0x65, 0x6e, 0x74, 0x65, 0x72, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x76, 0x32,
	0x2e, 0x56, 0x65, 0x72, 0x69, 0x66, 0x79, 0x50, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x52,
	0x65, 0x71, 0x1a, 0x2c, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x63, 0x65,
	0x6e, 0x74, 0x65, 0x72, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x76, 0x32, 0x2e, 0x56, 0x65, 0x72,
	0x69, 0x66, 0x79, 0x50, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x52, 0x65, 0x70, 0x6c, 0x79,
	0x12, 0x69, 0x0a, 0x0b, 0x42, 0x61, 0x74, 0x63, 0x68, 0x49, 0x6e, 0x73, 0x65, 0x72, 0x74, 0x12,
	0x2b, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x63, 0x65, 0x6e, 0x74, 0x65,
	0x72, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x76, 0x32, 0x2e, 0x42, 0x61, 0x74, 0x63, 0x68, 0x49,
	0x6e, 0x73, 0x65, 0x72, 0x74, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x71, 0x1a, 0x2d, 0x2e, 0x61,
	0x70, 0x69, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x63, 0x65, 0x6e, 0x74, 0x65, 0x72, 0x2e, 0x75,
	0x73, 0x65, 0x72, 0x2e, 0x76, 0x32, 0x2e, 0x42, 0x61, 0x74, 0x63, 0x68, 0x49, 0x6e, 0x73, 0x65,
	0x72, 0x74, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x6d, 0x0a, 0x0f, 0x47,
	0x65, 0x74, 0x53, 0x79, 0x6e, 0x63, 0x55, 0x73, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x2b,
	0x2e, 0x61, 0x70, 0x69, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x63, 0x65, 0x6e, 0x74, 0x65, 0x72,
	0x2e, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x76, 0x32, 0x2e, 0x47, 0x65, 0x74, 0x53, 0x79, 0x6e, 0x63,
	0x55, 0x73, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x71, 0x1a, 0x2d, 0x2e, 0x61, 0x70,
	0x69, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x63, 0x65, 0x6e, 0x74, 0x65, 0x72, 0x2e, 0x75, 0x73,
	0x65, 0x72, 0x2e, 0x76, 0x32, 0x2e, 0x47, 0x65, 0x74, 0x53, 0x79, 0x6e, 0x63, 0x55, 0x73, 0x65,
	0x72, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x64, 0x0a, 0x0c, 0x53, 0x79,
	0x6e, 0x63, 0x55, 0x73, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x28, 0x2e, 0x61, 0x70, 0x69,
	0x2e, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x63, 0x65, 0x6e, 0x74, 0x65, 0x72, 0x2e, 0x75, 0x73, 0x65,
	0x72, 0x2e, 0x76, 0x32, 0x2e, 0x53, 0x79, 0x6e, 0x63, 0x55, 0x73, 0x65, 0x72, 0x49, 0x6e, 0x66,
	0x6f, 0x52, 0x65, 0x71, 0x1a, 0x2a, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x5f,
	0x63, 0x65, 0x6e, 0x74, 0x65, 0x72, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x76, 0x32, 0x2e, 0x53,
	0x79, 0x6e, 0x63, 0x55, 0x73, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x70, 0x6c, 0x79,
	0x12, 0x79, 0x0a, 0x13, 0x47, 0x65, 0x74, 0x4e, 0x6f, 0x64, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x42,
	0x79, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x2f, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x75, 0x73,
	0x65, 0x72, 0x5f, 0x63, 0x65, 0x6e, 0x74, 0x65, 0x72, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x76,
	0x32, 0x2e, 0x47, 0x65, 0x74, 0x4e, 0x6f, 0x64, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x42, 0x79, 0x55,
	0x73, 0x65, 0x72, 0x49, 0x64, 0x52, 0x65, 0x71, 0x1a, 0x31, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x75,
	0x73, 0x65, 0x72, 0x5f, 0x63, 0x65, 0x6e, 0x74, 0x65, 0x72, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x2e,
	0x76, 0x32, 0x2e, 0x47, 0x65, 0x74, 0x4e, 0x6f, 0x64, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x42, 0x79,
	0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x6a, 0x0a, 0x0e, 0x44,
	0x69, 0x73, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x55, 0x73, 0x65, 0x72, 0x12, 0x2a, 0x2e,
	0x61, 0x70, 0x69, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x63, 0x65, 0x6e, 0x74, 0x65, 0x72, 0x2e,
	0x75, 0x73, 0x65, 0x72, 0x2e, 0x76, 0x32, 0x2e, 0x44, 0x69, 0x73, 0x74, 0x72, 0x69, 0x62, 0x75,
	0x74, 0x65, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x71, 0x1a, 0x2c, 0x2e, 0x61, 0x70, 0x69, 0x2e,
	0x75, 0x73, 0x65, 0x72, 0x5f, 0x63, 0x65, 0x6e, 0x74, 0x65, 0x72, 0x2e, 0x75, 0x73, 0x65, 0x72,
	0x2e, 0x76, 0x32, 0x2e, 0x44, 0x69, 0x73, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x55, 0x73,
	0x65, 0x72, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0xa6, 0x01, 0x0a, 0x22, 0x47, 0x65, 0x74, 0x55,
	0x73, 0x65, 0x72, 0x4e, 0x6f, 0x64, 0x65, 0x42, 0x79, 0x4e, 0x6f, 0x64, 0x65, 0x49, 0x64, 0x41,
	0x6e, 0x64, 0x43, 0x65, 0x6e, 0x74, 0x65, 0x72, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x3e,
	0x2e, 0x61, 0x70, 0x69, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x63, 0x65, 0x6e, 0x74, 0x65, 0x72,
	0x2e, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x76, 0x32, 0x2e, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72,
	0x4e, 0x6f, 0x64, 0x65, 0x42, 0x79, 0x4e, 0x6f, 0x64, 0x65, 0x49, 0x64, 0x41, 0x6e, 0x64, 0x43,
	0x65, 0x6e, 0x74, 0x65, 0x72, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x52, 0x65, 0x71, 0x1a, 0x40,
	0x2e, 0x61, 0x70, 0x69, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x63, 0x65, 0x6e, 0x74, 0x65, 0x72,
	0x2e, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x76, 0x32, 0x2e, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72,
	0x4e, 0x6f, 0x64, 0x65, 0x42, 0x79, 0x4e, 0x6f, 0x64, 0x65, 0x49, 0x64, 0x41, 0x6e, 0x64, 0x43,
	0x65, 0x6e, 0x74, 0x65, 0x72, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x52, 0x65, 0x70, 0x6c, 0x79,
	0x12, 0x73, 0x0a, 0x11, 0x43, 0x61, 0x6e, 0x63, 0x65, 0x6c, 0x4e, 0x6f, 0x64, 0x65, 0x41, 0x63,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x2d, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x75, 0x73, 0x65, 0x72,
	0x5f, 0x63, 0x65, 0x6e, 0x74, 0x65, 0x72, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x76, 0x32, 0x2e,
	0x43, 0x61, 0x6e, 0x63, 0x65, 0x6c, 0x4e, 0x6f, 0x64, 0x65, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x52, 0x65, 0x71, 0x1a, 0x2f, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x5f,
	0x63, 0x65, 0x6e, 0x74, 0x65, 0x72, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x76, 0x32, 0x2e, 0x43,
	0x61, 0x6e, 0x63, 0x65, 0x6c, 0x4e, 0x6f, 0x64, 0x65, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x52, 0x65, 0x70, 0x6c, 0x79, 0x42, 0x57, 0x0a, 0x17, 0x61, 0x70, 0x69, 0x2e, 0x75, 0x73, 0x65,
	0x72, 0x5f, 0x63, 0x65, 0x6e, 0x74, 0x65, 0x72, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x76, 0x32,
	0x50, 0x01, 0x5a, 0x3a, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x73,
	0x70, 0x61, 0x72, 0x6b, 0x2d, 0x63, 0x6f, 0x6d, 0x6d, 0x2f, 0x73, 0x70, 0x61, 0x72, 0x6b, 0x2d,
	0x61, 0x70, 0x69, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x63, 0x65, 0x6e,
	0x74, 0x65, 0x72, 0x2f, 0x75, 0x73, 0x65, 0x72, 0x2f, 0x76, 0x32, 0x3b, 0x76, 0x32, 0x62, 0x06,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_user_center_user_v2_user_proto_rawDescOnce sync.Once
	file_user_center_user_v2_user_proto_rawDescData = file_user_center_user_v2_user_proto_rawDesc
)

func file_user_center_user_v2_user_proto_rawDescGZIP() []byte {
	file_user_center_user_v2_user_proto_rawDescOnce.Do(func() {
		file_user_center_user_v2_user_proto_rawDescData = protoimpl.X.CompressGZIP(file_user_center_user_v2_user_proto_rawDescData)
	})
	return file_user_center_user_v2_user_proto_rawDescData
}

var file_user_center_user_v2_user_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_user_center_user_v2_user_proto_msgTypes = make([]protoimpl.MessageInfo, 25)
var file_user_center_user_v2_user_proto_goTypes = []any{
	(UserOnlineType)(0),                             // 0: api.user_center.user.v2.UserOnlineType
	(*CreateUserReq)(nil),                           // 1: api.user_center.user.v2.CreateUserReq
	(*CreateUserReply)(nil),                         // 2: api.user_center.user.v2.CreateUserReply
	(*UpdatePasswordReq)(nil),                       // 3: api.user_center.user.v2.UpdatePasswordReq
	(*UpdatePasswordReply)(nil),                     // 4: api.user_center.user.v2.UpdatePasswordReply
	(*DeleteUserReq)(nil),                           // 5: api.user_center.user.v2.DeleteUserReq
	(*DeleteUserReply)(nil),                         // 6: api.user_center.user.v2.DeleteUserReply
	(*VerifyPasswordReq)(nil),                       // 7: api.user_center.user.v2.VerifyPasswordReq
	(*VerifyPasswordReply)(nil),                     // 8: api.user_center.user.v2.VerifyPasswordReply
	(*BatchInsertUserReq)(nil),                      // 9: api.user_center.user.v2.BatchInsertUserReq
	(*BatchInsertUserReply)(nil),                    // 10: api.user_center.user.v2.BatchInsertUserReply
	(*GetSyncUserInfoReq)(nil),                      // 11: api.user_center.user.v2.GetSyncUserInfoReq
	(*GetSyncUserInfoReply)(nil),                    // 12: api.user_center.user.v2.GetSyncUserInfoReply
	(*SyncUserInfoReq)(nil),                         // 13: api.user_center.user.v2.SyncUserInfoReq
	(*SyncUserInfoReply)(nil),                       // 14: api.user_center.user.v2.SyncUserInfoReply
	(*SyncUserNode)(nil),                            // 15: api.user_center.user.v2.SyncUserNode
	(*UserData)(nil),                                // 16: api.user_center.user.v2.UserData
	(*GetNodeInfoByUserIdReq)(nil),                  // 17: api.user_center.user.v2.GetNodeInfoByUserIdReq
	(*GetNodeInfoByUserIdReply)(nil),                // 18: api.user_center.user.v2.GetNodeInfoByUserIdReply
	(*UserNode)(nil),                                // 19: api.user_center.user.v2.UserNode
	(*DistributeUserReq)(nil),                       // 20: api.user_center.user.v2.DistributeUserReq
	(*DistributeUserReply)(nil),                     // 21: api.user_center.user.v2.DistributeUserReply
	(*GetUserNodeByNodeIdAndCenterUserIdReq)(nil),   // 22: api.user_center.user.v2.GetUserNodeByNodeIdAndCenterUserIdReq
	(*GetUserNodeByNodeIdAndCenterUserIdReply)(nil), // 23: api.user_center.user.v2.GetUserNodeByNodeIdAndCenterUserIdReply
	(*CancelNodeAccountReq)(nil),                    // 24: api.user_center.user.v2.CancelNodeAccountReq
	(*CancelNodeAccountReply)(nil),                  // 25: api.user_center.user.v2.CancelNodeAccountReply
	(v2.AccountType)(0),                             // 26: api.common.enum.v2.AccountType
	(v2.Gender)(0),                                  // 27: api.common.enum.v2.Gender
	(*v21.SyncUser)(nil),                            // 28: api.common.model.v2.SyncUser
}
var file_user_center_user_v2_user_proto_depIdxs = []int32{
	26, // 0: api.user_center.user.v2.CreateUserReq.accountType:type_name -> api.common.enum.v2.AccountType
	27, // 1: api.user_center.user.v2.CreateUserReq.gender:type_name -> api.common.enum.v2.Gender
	16, // 2: api.user_center.user.v2.BatchInsertUserReq.list:type_name -> api.user_center.user.v2.UserData
	28, // 3: api.user_center.user.v2.GetSyncUserInfoReply.userInfo:type_name -> api.common.model.v2.SyncUser
	15, // 4: api.user_center.user.v2.GetSyncUserInfoReply.nodes:type_name -> api.user_center.user.v2.SyncUserNode
	28, // 5: api.user_center.user.v2.SyncUserInfoReq.userInfo:type_name -> api.common.model.v2.SyncUser
	19, // 6: api.user_center.user.v2.GetNodeInfoByUserIdReply.userNodes:type_name -> api.user_center.user.v2.UserNode
	15, // 7: api.user_center.user.v2.GetUserNodeByNodeIdAndCenterUserIdReply.userNode:type_name -> api.user_center.user.v2.SyncUserNode
	1,  // 8: api.user_center.user.v2.User.CreateUser:input_type -> api.user_center.user.v2.CreateUserReq
	3,  // 9: api.user_center.user.v2.User.UpdatePassword:input_type -> api.user_center.user.v2.UpdatePasswordReq
	5,  // 10: api.user_center.user.v2.User.DeleteUser:input_type -> api.user_center.user.v2.DeleteUserReq
	7,  // 11: api.user_center.user.v2.User.VerifyPassword:input_type -> api.user_center.user.v2.VerifyPasswordReq
	9,  // 12: api.user_center.user.v2.User.BatchInsert:input_type -> api.user_center.user.v2.BatchInsertUserReq
	11, // 13: api.user_center.user.v2.User.GetSyncUserInfo:input_type -> api.user_center.user.v2.GetSyncUserInfoReq
	13, // 14: api.user_center.user.v2.User.SyncUserInfo:input_type -> api.user_center.user.v2.SyncUserInfoReq
	17, // 15: api.user_center.user.v2.User.GetNodeInfoByUserId:input_type -> api.user_center.user.v2.GetNodeInfoByUserIdReq
	20, // 16: api.user_center.user.v2.User.DistributeUser:input_type -> api.user_center.user.v2.DistributeUserReq
	22, // 17: api.user_center.user.v2.User.GetUserNodeByNodeIdAndCenterUserId:input_type -> api.user_center.user.v2.GetUserNodeByNodeIdAndCenterUserIdReq
	24, // 18: api.user_center.user.v2.User.CancelNodeAccount:input_type -> api.user_center.user.v2.CancelNodeAccountReq
	2,  // 19: api.user_center.user.v2.User.CreateUser:output_type -> api.user_center.user.v2.CreateUserReply
	4,  // 20: api.user_center.user.v2.User.UpdatePassword:output_type -> api.user_center.user.v2.UpdatePasswordReply
	6,  // 21: api.user_center.user.v2.User.DeleteUser:output_type -> api.user_center.user.v2.DeleteUserReply
	8,  // 22: api.user_center.user.v2.User.VerifyPassword:output_type -> api.user_center.user.v2.VerifyPasswordReply
	10, // 23: api.user_center.user.v2.User.BatchInsert:output_type -> api.user_center.user.v2.BatchInsertUserReply
	12, // 24: api.user_center.user.v2.User.GetSyncUserInfo:output_type -> api.user_center.user.v2.GetSyncUserInfoReply
	14, // 25: api.user_center.user.v2.User.SyncUserInfo:output_type -> api.user_center.user.v2.SyncUserInfoReply
	18, // 26: api.user_center.user.v2.User.GetNodeInfoByUserId:output_type -> api.user_center.user.v2.GetNodeInfoByUserIdReply
	21, // 27: api.user_center.user.v2.User.DistributeUser:output_type -> api.user_center.user.v2.DistributeUserReply
	23, // 28: api.user_center.user.v2.User.GetUserNodeByNodeIdAndCenterUserId:output_type -> api.user_center.user.v2.GetUserNodeByNodeIdAndCenterUserIdReply
	25, // 29: api.user_center.user.v2.User.CancelNodeAccount:output_type -> api.user_center.user.v2.CancelNodeAccountReply
	19, // [19:30] is the sub-list for method output_type
	8,  // [8:19] is the sub-list for method input_type
	8,  // [8:8] is the sub-list for extension type_name
	8,  // [8:8] is the sub-list for extension extendee
	0,  // [0:8] is the sub-list for field type_name
}

func init() { file_user_center_user_v2_user_proto_init() }
func file_user_center_user_v2_user_proto_init() {
	if File_user_center_user_v2_user_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_user_center_user_v2_user_proto_msgTypes[0].Exporter = func(v any, i int) any {
			switch v := v.(*CreateUserReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_user_center_user_v2_user_proto_msgTypes[1].Exporter = func(v any, i int) any {
			switch v := v.(*CreateUserReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_user_center_user_v2_user_proto_msgTypes[2].Exporter = func(v any, i int) any {
			switch v := v.(*UpdatePasswordReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_user_center_user_v2_user_proto_msgTypes[3].Exporter = func(v any, i int) any {
			switch v := v.(*UpdatePasswordReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_user_center_user_v2_user_proto_msgTypes[4].Exporter = func(v any, i int) any {
			switch v := v.(*DeleteUserReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_user_center_user_v2_user_proto_msgTypes[5].Exporter = func(v any, i int) any {
			switch v := v.(*DeleteUserReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_user_center_user_v2_user_proto_msgTypes[6].Exporter = func(v any, i int) any {
			switch v := v.(*VerifyPasswordReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_user_center_user_v2_user_proto_msgTypes[7].Exporter = func(v any, i int) any {
			switch v := v.(*VerifyPasswordReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_user_center_user_v2_user_proto_msgTypes[8].Exporter = func(v any, i int) any {
			switch v := v.(*BatchInsertUserReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_user_center_user_v2_user_proto_msgTypes[9].Exporter = func(v any, i int) any {
			switch v := v.(*BatchInsertUserReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_user_center_user_v2_user_proto_msgTypes[10].Exporter = func(v any, i int) any {
			switch v := v.(*GetSyncUserInfoReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_user_center_user_v2_user_proto_msgTypes[11].Exporter = func(v any, i int) any {
			switch v := v.(*GetSyncUserInfoReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_user_center_user_v2_user_proto_msgTypes[12].Exporter = func(v any, i int) any {
			switch v := v.(*SyncUserInfoReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_user_center_user_v2_user_proto_msgTypes[13].Exporter = func(v any, i int) any {
			switch v := v.(*SyncUserInfoReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_user_center_user_v2_user_proto_msgTypes[14].Exporter = func(v any, i int) any {
			switch v := v.(*SyncUserNode); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_user_center_user_v2_user_proto_msgTypes[15].Exporter = func(v any, i int) any {
			switch v := v.(*UserData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_user_center_user_v2_user_proto_msgTypes[16].Exporter = func(v any, i int) any {
			switch v := v.(*GetNodeInfoByUserIdReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_user_center_user_v2_user_proto_msgTypes[17].Exporter = func(v any, i int) any {
			switch v := v.(*GetNodeInfoByUserIdReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_user_center_user_v2_user_proto_msgTypes[18].Exporter = func(v any, i int) any {
			switch v := v.(*UserNode); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_user_center_user_v2_user_proto_msgTypes[19].Exporter = func(v any, i int) any {
			switch v := v.(*DistributeUserReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_user_center_user_v2_user_proto_msgTypes[20].Exporter = func(v any, i int) any {
			switch v := v.(*DistributeUserReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_user_center_user_v2_user_proto_msgTypes[21].Exporter = func(v any, i int) any {
			switch v := v.(*GetUserNodeByNodeIdAndCenterUserIdReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_user_center_user_v2_user_proto_msgTypes[22].Exporter = func(v any, i int) any {
			switch v := v.(*GetUserNodeByNodeIdAndCenterUserIdReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_user_center_user_v2_user_proto_msgTypes[23].Exporter = func(v any, i int) any {
			switch v := v.(*CancelNodeAccountReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_user_center_user_v2_user_proto_msgTypes[24].Exporter = func(v any, i int) any {
			switch v := v.(*CancelNodeAccountReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_user_center_user_v2_user_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   25,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_user_center_user_v2_user_proto_goTypes,
		DependencyIndexes: file_user_center_user_v2_user_proto_depIdxs,
		EnumInfos:         file_user_center_user_v2_user_proto_enumTypes,
		MessageInfos:      file_user_center_user_v2_user_proto_msgTypes,
	}.Build()
	File_user_center_user_v2_user_proto = out.File
	file_user_center_user_v2_user_proto_rawDesc = nil
	file_user_center_user_v2_user_proto_goTypes = nil
	file_user_center_user_v2_user_proto_depIdxs = nil
}
