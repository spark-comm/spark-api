// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.31.0
// 	protoc        v4.25.0
// source: im_cloud/user/v2/profile.proto

package v2

import (
	v2 "github.com/spark-comm/spark-api/api/common/model/user/v2"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	_ "google.golang.org/protobuf/types/known/emptypb"
	_ "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Switch int32

const (
	Switch_Close Switch = 0 //关闭
	Switch_Open  Switch = 1 //开启
)

// Enum value maps for Switch.
var (
	Switch_name = map[int32]string{
		0: "Close",
		1: "Open",
	}
	Switch_value = map[string]int32{
		"Close": 0,
		"Open":  1,
	}
)

func (x Switch) Enum() *Switch {
	p := new(Switch)
	*p = x
	return p
}

func (x Switch) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Switch) Descriptor() protoreflect.EnumDescriptor {
	return file_im_cloud_user_v2_profile_proto_enumTypes[0].Descriptor()
}

func (Switch) Type() protoreflect.EnumType {
	return &file_im_cloud_user_v2_profile_proto_enumTypes[0]
}

func (x Switch) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Switch.Descriptor instead.
func (Switch) EnumDescriptor() ([]byte, []int) {
	return file_im_cloud_user_v2_profile_proto_rawDescGZIP(), []int{0}
}

type UserOption int32

const (
	UserOption_notLoginStatus       UserOption = 0  // 禁止登录
	UserOption_isOpenMoments        UserOption = 1  //是否公开朋友圈
	UserOption_qrCodeAdd            UserOption = 2  //是否开启二维码
	UserOption_cardAdd              UserOption = 3  //是否开启名片
	UserOption_groupAdd             UserOption = 4  //是否开启群添加
	UserOption_codeAdd              UserOption = 5  //开启code
	UserOption_phoneAdd             UserOption = 6  //开启手机号
	UserOption_showLastLogin        UserOption = 7  //好友是否可见我的上线时间
	UserOption_multipleDeviceLogin  UserOption = 8  //是否允许多设备登陆
	UserOption_isAdmin              UserOption = 9  //是否管理员账号
	UserOption_isOpenWallet         UserOption = 10 // 是否开启钱包
	UserOption_appMangerLevel       UserOption = 11 // 应用管理等级
	UserOption_globalRecvMsgOpt     UserOption = 12 // 0：正常；1：不接受消息；2：接受在线消息不接受离线消息；
	UserOption_isReal               UserOption = 13 //是否实名
	UserOption_isCustomerService    UserOption = 14 // 是否客服账号
	UserOption_isTenant             UserOption = 15 // 是否租户
	UserOption_isSetPrivatePassword UserOption = 16 //是否设置私密对话密码,1-是 0-否
	UserOption_welcomeMessage       UserOption = 17 //客服配置的欢迎语
)

// Enum value maps for UserOption.
var (
	UserOption_name = map[int32]string{
		0:  "notLoginStatus",
		1:  "isOpenMoments",
		2:  "qrCodeAdd",
		3:  "cardAdd",
		4:  "groupAdd",
		5:  "codeAdd",
		6:  "phoneAdd",
		7:  "showLastLogin",
		8:  "multipleDeviceLogin",
		9:  "isAdmin",
		10: "isOpenWallet",
		11: "appMangerLevel",
		12: "globalRecvMsgOpt",
		13: "isReal",
		14: "isCustomerService",
		15: "isTenant",
		16: "isSetPrivatePassword",
		17: "welcomeMessage",
	}
	UserOption_value = map[string]int32{
		"notLoginStatus":       0,
		"isOpenMoments":        1,
		"qrCodeAdd":            2,
		"cardAdd":              3,
		"groupAdd":             4,
		"codeAdd":              5,
		"phoneAdd":             6,
		"showLastLogin":        7,
		"multipleDeviceLogin":  8,
		"isAdmin":              9,
		"isOpenWallet":         10,
		"appMangerLevel":       11,
		"globalRecvMsgOpt":     12,
		"isReal":               13,
		"isCustomerService":    14,
		"isTenant":             15,
		"isSetPrivatePassword": 16,
		"welcomeMessage":       17,
	}
)

func (x UserOption) Enum() *UserOption {
	p := new(UserOption)
	*p = x
	return p
}

func (x UserOption) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (UserOption) Descriptor() protoreflect.EnumDescriptor {
	return file_im_cloud_user_v2_profile_proto_enumTypes[1].Descriptor()
}

func (UserOption) Type() protoreflect.EnumType {
	return &file_im_cloud_user_v2_profile_proto_enumTypes[1]
}

func (x UserOption) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use UserOption.Descriptor instead.
func (UserOption) EnumDescriptor() ([]byte, []int) {
	return file_im_cloud_user_v2_profile_proto_rawDescGZIP(), []int{1}
}

// 搜索用户 存在
// -------------------------------------------
type SearchProfileReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SearchValue string `protobuf:"bytes,1,opt,name=search_value,json=searchValue,proto3" json:"search_value,omitempty"` // 手机号或者用户ID
	Type        int32  `protobuf:"varint,2,opt,name=type,proto3" json:"type,omitempty"`                                 // 1-手机 2-用户ID 3-扫码 4-身份证号 5-邮箱
}

func (x *SearchProfileReq) Reset() {
	*x = SearchProfileReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_im_cloud_user_v2_profile_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SearchProfileReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SearchProfileReq) ProtoMessage() {}

func (x *SearchProfileReq) ProtoReflect() protoreflect.Message {
	mi := &file_im_cloud_user_v2_profile_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SearchProfileReq.ProtoReflect.Descriptor instead.
func (*SearchProfileReq) Descriptor() ([]byte, []int) {
	return file_im_cloud_user_v2_profile_proto_rawDescGZIP(), []int{0}
}

func (x *SearchProfileReq) GetSearchValue() string {
	if x != nil {
		return x.SearchValue
	}
	return ""
}

func (x *SearchProfileReq) GetType() int32 {
	if x != nil {
		return x.Type
	}
	return 0
}

type SearchProfileReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data *v2.UserProfile `protobuf:"bytes,1,opt,name=data,proto3" json:"data,omitempty"` // 用户信息
}

func (x *SearchProfileReply) Reset() {
	*x = SearchProfileReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_im_cloud_user_v2_profile_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SearchProfileReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SearchProfileReply) ProtoMessage() {}

func (x *SearchProfileReply) ProtoReflect() protoreflect.Message {
	mi := &file_im_cloud_user_v2_profile_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SearchProfileReply.ProtoReflect.Descriptor instead.
func (*SearchProfileReply) Descriptor() ([]byte, []int) {
	return file_im_cloud_user_v2_profile_proto_rawDescGZIP(), []int{1}
}

func (x *SearchProfileReply) GetData() *v2.UserProfile {
	if x != nil {
		return x.Data
	}
	return nil
}

// 根据id获取用户信息 存在
// -------------------------------------------
type FindProfileByUserReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserIds []string `protobuf:"bytes,1,rep,name=userIds,proto3" json:"userIds,omitempty"` // 用户 id 数组
}

func (x *FindProfileByUserReq) Reset() {
	*x = FindProfileByUserReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_im_cloud_user_v2_profile_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FindProfileByUserReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FindProfileByUserReq) ProtoMessage() {}

func (x *FindProfileByUserReq) ProtoReflect() protoreflect.Message {
	mi := &file_im_cloud_user_v2_profile_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FindProfileByUserReq.ProtoReflect.Descriptor instead.
func (*FindProfileByUserReq) Descriptor() ([]byte, []int) {
	return file_im_cloud_user_v2_profile_proto_rawDescGZIP(), []int{2}
}

func (x *FindProfileByUserReq) GetUserIds() []string {
	if x != nil {
		return x.UserIds
	}
	return nil
}

type FindProfileByUserReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	List []*v2.UserProfile `protobuf:"bytes,1,rep,name=list,proto3" json:"list,omitempty"` // 用户信息列表
}

func (x *FindProfileByUserReply) Reset() {
	*x = FindProfileByUserReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_im_cloud_user_v2_profile_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FindProfileByUserReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FindProfileByUserReply) ProtoMessage() {}

func (x *FindProfileByUserReply) ProtoReflect() protoreflect.Message {
	mi := &file_im_cloud_user_v2_profile_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FindProfileByUserReply.ProtoReflect.Descriptor instead.
func (*FindProfileByUserReply) Descriptor() ([]byte, []int) {
	return file_im_cloud_user_v2_profile_proto_rawDescGZIP(), []int{3}
}

func (x *FindProfileByUserReply) GetList() []*v2.UserProfile {
	if x != nil {
		return x.List
	}
	return nil
}

// 根据ids获取完整的用户信息不过过滤删除和和租户 存在
// -------------------------------------------
type FindFullProfileByUserIdReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserIds []string `protobuf:"bytes,1,rep,name=userIds,proto3" json:"userIds,omitempty"` // 用户 id 数组
}

func (x *FindFullProfileByUserIdReq) Reset() {
	*x = FindFullProfileByUserIdReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_im_cloud_user_v2_profile_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FindFullProfileByUserIdReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FindFullProfileByUserIdReq) ProtoMessage() {}

func (x *FindFullProfileByUserIdReq) ProtoReflect() protoreflect.Message {
	mi := &file_im_cloud_user_v2_profile_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FindFullProfileByUserIdReq.ProtoReflect.Descriptor instead.
func (*FindFullProfileByUserIdReq) Descriptor() ([]byte, []int) {
	return file_im_cloud_user_v2_profile_proto_rawDescGZIP(), []int{4}
}

func (x *FindFullProfileByUserIdReq) GetUserIds() []string {
	if x != nil {
		return x.UserIds
	}
	return nil
}

type FindFullProfileByUserIdReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	List []*v2.UserProfile `protobuf:"bytes,1,rep,name=list,proto3" json:"list,omitempty"` // 用户信息列表
}

func (x *FindFullProfileByUserIdReply) Reset() {
	*x = FindFullProfileByUserIdReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_im_cloud_user_v2_profile_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FindFullProfileByUserIdReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FindFullProfileByUserIdReply) ProtoMessage() {}

func (x *FindFullProfileByUserIdReply) ProtoReflect() protoreflect.Message {
	mi := &file_im_cloud_user_v2_profile_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FindFullProfileByUserIdReply.ProtoReflect.Descriptor instead.
func (*FindFullProfileByUserIdReply) Descriptor() ([]byte, []int) {
	return file_im_cloud_user_v2_profile_proto_rawDescGZIP(), []int{5}
}

func (x *FindFullProfileByUserIdReply) GetList() []*v2.UserProfile {
	if x != nil {
		return x.List
	}
	return nil
}

// 更新用户信息 存在
// -------------------------------------------
type UpdateProfileReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId        string  `protobuf:"bytes,1,opt,name=userId,proto3" json:"userId,omitempty"`                       // 用户 id
	FaceURL       *string `protobuf:"bytes,2,opt,name=faceURL,proto3,oneof" json:"faceURL,omitempty"`               // 头像
	Nickname      *string `protobuf:"bytes,3,opt,name=nickname,proto3,oneof" json:"nickname,omitempty"`             // 昵称
	Gender        *int32  `protobuf:"varint,4,opt,name=gender,proto3,oneof" json:"gender,omitempty"`                // 性别 1：女 2：男
	Message       *string `protobuf:"bytes,5,opt,name=message,proto3,oneof" json:"message,omitempty"`               // 简介
	Phone         *string `protobuf:"bytes,6,opt,name=phone,proto3,oneof" json:"phone,omitempty"`                   //  电话
	Email         *string `protobuf:"bytes,7,opt,name=email,proto3,oneof" json:"email,omitempty"`                   // 邮箱
	Birth         *int64  `protobuf:"varint,9,opt,name=birth,proto3,oneof" json:"birth,omitempty"`                  // 生日
	IsOpenMoments *uint32 `protobuf:"varint,10,opt,name=IsOpenMoments,proto3,oneof" json:"IsOpenMoments,omitempty"` // 是否公开朋友圈 1公开 2不公开
}

func (x *UpdateProfileReq) Reset() {
	*x = UpdateProfileReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_im_cloud_user_v2_profile_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateProfileReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateProfileReq) ProtoMessage() {}

func (x *UpdateProfileReq) ProtoReflect() protoreflect.Message {
	mi := &file_im_cloud_user_v2_profile_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateProfileReq.ProtoReflect.Descriptor instead.
func (*UpdateProfileReq) Descriptor() ([]byte, []int) {
	return file_im_cloud_user_v2_profile_proto_rawDescGZIP(), []int{6}
}

func (x *UpdateProfileReq) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *UpdateProfileReq) GetFaceURL() string {
	if x != nil && x.FaceURL != nil {
		return *x.FaceURL
	}
	return ""
}

func (x *UpdateProfileReq) GetNickname() string {
	if x != nil && x.Nickname != nil {
		return *x.Nickname
	}
	return ""
}

func (x *UpdateProfileReq) GetGender() int32 {
	if x != nil && x.Gender != nil {
		return *x.Gender
	}
	return 0
}

func (x *UpdateProfileReq) GetMessage() string {
	if x != nil && x.Message != nil {
		return *x.Message
	}
	return ""
}

func (x *UpdateProfileReq) GetPhone() string {
	if x != nil && x.Phone != nil {
		return *x.Phone
	}
	return ""
}

func (x *UpdateProfileReq) GetEmail() string {
	if x != nil && x.Email != nil {
		return *x.Email
	}
	return ""
}

func (x *UpdateProfileReq) GetBirth() int64 {
	if x != nil && x.Birth != nil {
		return *x.Birth
	}
	return 0
}

func (x *UpdateProfileReq) GetIsOpenMoments() uint32 {
	if x != nil && x.IsOpenMoments != nil {
		return *x.IsOpenMoments
	}
	return 0
}

type UpdateProfileReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Profile *v2.UserProfile `protobuf:"bytes,1,opt,name=profile,proto3" json:"profile,omitempty"`
}

func (x *UpdateProfileReply) Reset() {
	*x = UpdateProfileReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_im_cloud_user_v2_profile_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateProfileReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateProfileReply) ProtoMessage() {}

func (x *UpdateProfileReply) ProtoReflect() protoreflect.Message {
	mi := &file_im_cloud_user_v2_profile_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateProfileReply.ProtoReflect.Descriptor instead.
func (*UpdateProfileReply) Descriptor() ([]byte, []int) {
	return file_im_cloud_user_v2_profile_proto_rawDescGZIP(), []int{7}
}

func (x *UpdateProfileReply) GetProfile() *v2.UserProfile {
	if x != nil {
		return x.Profile
	}
	return nil
}

// 获取用户信息 存在
// -------------------------------------------
type GetProfileReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId  string `protobuf:"bytes,1,opt,name=userId,proto3" json:"userId,omitempty"`   // 用户id
	Account string `protobuf:"bytes,2,opt,name=account,proto3" json:"account,omitempty"` // 账号
	Code    string `protobuf:"bytes,3,opt,name=code,proto3" json:"code,omitempty"`       // 编码
	Phone   string `protobuf:"bytes,4,opt,name=phone,proto3" json:"phone,omitempty"`     // 手机号或账号
	Emil    string `protobuf:"bytes,5,opt,name=emil,proto3" json:"emil,omitempty"`       // 用户邮箱
}

func (x *GetProfileReq) Reset() {
	*x = GetProfileReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_im_cloud_user_v2_profile_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetProfileReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetProfileReq) ProtoMessage() {}

func (x *GetProfileReq) ProtoReflect() protoreflect.Message {
	mi := &file_im_cloud_user_v2_profile_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetProfileReq.ProtoReflect.Descriptor instead.
func (*GetProfileReq) Descriptor() ([]byte, []int) {
	return file_im_cloud_user_v2_profile_proto_rawDescGZIP(), []int{8}
}

func (x *GetProfileReq) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *GetProfileReq) GetAccount() string {
	if x != nil {
		return x.Account
	}
	return ""
}

func (x *GetProfileReq) GetCode() string {
	if x != nil {
		return x.Code
	}
	return ""
}

func (x *GetProfileReq) GetPhone() string {
	if x != nil {
		return x.Phone
	}
	return ""
}

func (x *GetProfileReq) GetEmil() string {
	if x != nil {
		return x.Emil
	}
	return ""
}

type GetProfileReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Profile *v2.UserProfile `protobuf:"bytes,1,opt,name=profile,proto3" json:"profile,omitempty"`
}

func (x *GetProfileReply) Reset() {
	*x = GetProfileReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_im_cloud_user_v2_profile_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetProfileReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetProfileReply) ProtoMessage() {}

func (x *GetProfileReply) ProtoReflect() protoreflect.Message {
	mi := &file_im_cloud_user_v2_profile_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetProfileReply.ProtoReflect.Descriptor instead.
func (*GetProfileReply) Descriptor() ([]byte, []int) {
	return file_im_cloud_user_v2_profile_proto_rawDescGZIP(), []int{9}
}

func (x *GetProfileReply) GetProfile() *v2.UserProfile {
	if x != nil {
		return x.Profile
	}
	return nil
}

// 用户配置项 存在
// -------------------------------------------
type SetOptionReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId string     `protobuf:"bytes,1,opt,name=userId,proto3" json:"userId,omitempty"`                                       // 用户 id
	Option UserOption `protobuf:"varint,2,opt,name=option,proto3,enum=api.im_cloud.user.v2.UserOption" json:"option,omitempty"` // 配置项类型
	Value  int32      `protobuf:"varint,3,opt,name=value,proto3" json:"value,omitempty"`                                        // 值
}

func (x *SetOptionReq) Reset() {
	*x = SetOptionReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_im_cloud_user_v2_profile_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetOptionReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetOptionReq) ProtoMessage() {}

func (x *SetOptionReq) ProtoReflect() protoreflect.Message {
	mi := &file_im_cloud_user_v2_profile_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetOptionReq.ProtoReflect.Descriptor instead.
func (*SetOptionReq) Descriptor() ([]byte, []int) {
	return file_im_cloud_user_v2_profile_proto_rawDescGZIP(), []int{10}
}

func (x *SetOptionReq) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *SetOptionReq) GetOption() UserOption {
	if x != nil {
		return x.Option
	}
	return UserOption_notLoginStatus
}

func (x *SetOptionReq) GetValue() int32 {
	if x != nil {
		return x.Value
	}
	return 0
}

type SetOptionReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *SetOptionReply) Reset() {
	*x = SetOptionReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_im_cloud_user_v2_profile_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetOptionReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetOptionReply) ProtoMessage() {}

func (x *SetOptionReply) ProtoReflect() protoreflect.Message {
	mi := &file_im_cloud_user_v2_profile_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetOptionReply.ProtoReflect.Descriptor instead.
func (*SetOptionReply) Descriptor() ([]byte, []int) {
	return file_im_cloud_user_v2_profile_proto_rawDescGZIP(), []int{11}
}

// 查询用户配置项的值 存在
// -------------------------------------------
type GetOptionValReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId string     `protobuf:"bytes,1,opt,name=userId,proto3" json:"userId,omitempty"`                                       // 用户 id
	Option UserOption `protobuf:"varint,2,opt,name=option,proto3,enum=api.im_cloud.user.v2.UserOption" json:"option,omitempty"` // 配置项类型
}

func (x *GetOptionValReq) Reset() {
	*x = GetOptionValReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_im_cloud_user_v2_profile_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetOptionValReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetOptionValReq) ProtoMessage() {}

func (x *GetOptionValReq) ProtoReflect() protoreflect.Message {
	mi := &file_im_cloud_user_v2_profile_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetOptionValReq.ProtoReflect.Descriptor instead.
func (*GetOptionValReq) Descriptor() ([]byte, []int) {
	return file_im_cloud_user_v2_profile_proto_rawDescGZIP(), []int{12}
}

func (x *GetOptionValReq) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *GetOptionValReq) GetOption() UserOption {
	if x != nil {
		return x.Option
	}
	return UserOption_notLoginStatus
}

type GetOptionValReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Value int32 `protobuf:"varint,1,opt,name=value,proto3" json:"value,omitempty"` // 开启/关闭
}

func (x *GetOptionValReply) Reset() {
	*x = GetOptionValReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_im_cloud_user_v2_profile_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetOptionValReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetOptionValReply) ProtoMessage() {}

func (x *GetOptionValReply) ProtoReflect() protoreflect.Message {
	mi := &file_im_cloud_user_v2_profile_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetOptionValReply.ProtoReflect.Descriptor instead.
func (*GetOptionValReply) Descriptor() ([]byte, []int) {
	return file_im_cloud_user_v2_profile_proto_rawDescGZIP(), []int{13}
}

func (x *GetOptionValReply) GetValue() int32 {
	if x != nil {
		return x.Value
	}
	return 0
}

// 获取用户全局消息配置项 存在
// -------------------------------------------
type GetGlobalReceiveMessageOptReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId string `protobuf:"bytes,1,opt,name=userId,proto3" json:"userId,omitempty"` // 用户 id
}

func (x *GetGlobalReceiveMessageOptReq) Reset() {
	*x = GetGlobalReceiveMessageOptReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_im_cloud_user_v2_profile_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetGlobalReceiveMessageOptReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetGlobalReceiveMessageOptReq) ProtoMessage() {}

func (x *GetGlobalReceiveMessageOptReq) ProtoReflect() protoreflect.Message {
	mi := &file_im_cloud_user_v2_profile_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetGlobalReceiveMessageOptReq.ProtoReflect.Descriptor instead.
func (*GetGlobalReceiveMessageOptReq) Descriptor() ([]byte, []int) {
	return file_im_cloud_user_v2_profile_proto_rawDescGZIP(), []int{14}
}

func (x *GetGlobalReceiveMessageOptReq) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

type GetGlobalReceiveMessageOptReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GlobalRecvMsgOpt int32 `protobuf:"varint,1,opt,name=globalRecvMsgOpt,proto3" json:"globalRecvMsgOpt,omitempty"` // 0：正常；1：不接受消息；2：接受在线消息不接受离线消息；
}

func (x *GetGlobalReceiveMessageOptReply) Reset() {
	*x = GetGlobalReceiveMessageOptReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_im_cloud_user_v2_profile_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetGlobalReceiveMessageOptReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetGlobalReceiveMessageOptReply) ProtoMessage() {}

func (x *GetGlobalReceiveMessageOptReply) ProtoReflect() protoreflect.Message {
	mi := &file_im_cloud_user_v2_profile_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetGlobalReceiveMessageOptReply.ProtoReflect.Descriptor instead.
func (*GetGlobalReceiveMessageOptReply) Descriptor() ([]byte, []int) {
	return file_im_cloud_user_v2_profile_proto_rawDescGZIP(), []int{15}
}

func (x *GetGlobalReceiveMessageOptReply) GetGlobalRecvMsgOpt() int32 {
	if x != nil {
		return x.GlobalRecvMsgOpt
	}
	return 0
}

// 获取用户列表 存在
// -------------------------------------------
type GetAllUserIDReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *GetAllUserIDReq) Reset() {
	*x = GetAllUserIDReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_im_cloud_user_v2_profile_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAllUserIDReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAllUserIDReq) ProtoMessage() {}

func (x *GetAllUserIDReq) ProtoReflect() protoreflect.Message {
	mi := &file_im_cloud_user_v2_profile_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAllUserIDReq.ProtoReflect.Descriptor instead.
func (*GetAllUserIDReq) Descriptor() ([]byte, []int) {
	return file_im_cloud_user_v2_profile_proto_rawDescGZIP(), []int{16}
}

type GetAllUserIDReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserIds []string `protobuf:"bytes,1,rep,name=userIds,proto3" json:"userIds,omitempty"`
}

func (x *GetAllUserIDReply) Reset() {
	*x = GetAllUserIDReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_im_cloud_user_v2_profile_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAllUserIDReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAllUserIDReply) ProtoMessage() {}

func (x *GetAllUserIDReply) ProtoReflect() protoreflect.Message {
	mi := &file_im_cloud_user_v2_profile_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAllUserIDReply.ProtoReflect.Descriptor instead.
func (*GetAllUserIDReply) Descriptor() ([]byte, []int) {
	return file_im_cloud_user_v2_profile_proto_rawDescGZIP(), []int{17}
}

func (x *GetAllUserIDReply) GetUserIds() []string {
	if x != nil {
		return x.UserIds
	}
	return nil
}

var File_im_cloud_user_v2_profile_proto protoreflect.FileDescriptor

var file_im_cloud_user_v2_profile_proto_rawDesc = []byte{
	0x0a, 0x1e, 0x69, 0x6d, 0x5f, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2f, 0x75, 0x73, 0x65, 0x72, 0x2f,
	0x76, 0x32, 0x2f, 0x70, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x12, 0x14, 0x61, 0x70, 0x69, 0x2e, 0x69, 0x6d, 0x5f, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x75,
	0x73, 0x65, 0x72, 0x2e, 0x76, 0x32, 0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d,
	0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1b, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x65, 0x6d, 0x70, 0x74, 0x79, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1f, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2f, 0x6d, 0x6f, 0x64,
	0x65, 0x6c, 0x2f, 0x75, 0x73, 0x65, 0x72, 0x2f, 0x76, 0x32, 0x2f, 0x75, 0x73, 0x65, 0x72, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x49, 0x0a, 0x10, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x50,
	0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x12, 0x21, 0x0a, 0x0c, 0x73, 0x65, 0x61,
	0x72, 0x63, 0x68, 0x5f, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0b, 0x73, 0x65, 0x61, 0x72, 0x63, 0x68, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x12, 0x0a, 0x04,
	0x74, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65,
	0x22, 0x4f, 0x0a, 0x12, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c,
	0x65, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x39, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x25, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f,
	0x6e, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x76, 0x32, 0x2e,
	0x55, 0x73, 0x65, 0x72, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x52, 0x04, 0x64, 0x61, 0x74,
	0x61, 0x22, 0x30, 0x0a, 0x14, 0x46, 0x69, 0x6e, 0x64, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65,
	0x42, 0x79, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x71, 0x12, 0x18, 0x0a, 0x07, 0x75, 0x73, 0x65,
	0x72, 0x49, 0x64, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x07, 0x75, 0x73, 0x65, 0x72,
	0x49, 0x64, 0x73, 0x22, 0x53, 0x0a, 0x16, 0x46, 0x69, 0x6e, 0x64, 0x50, 0x72, 0x6f, 0x66, 0x69,
	0x6c, 0x65, 0x42, 0x79, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x39, 0x0a,
	0x04, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x25, 0x2e, 0x61, 0x70,
	0x69, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x75,
	0x73, 0x65, 0x72, 0x2e, 0x76, 0x32, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x50, 0x72, 0x6f, 0x66, 0x69,
	0x6c, 0x65, 0x52, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x22, 0x36, 0x0a, 0x1a, 0x46, 0x69, 0x6e, 0x64,
	0x46, 0x75, 0x6c, 0x6c, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x42, 0x79, 0x55, 0x73, 0x65,
	0x72, 0x49, 0x64, 0x52, 0x65, 0x71, 0x12, 0x18, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64,
	0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x07, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x73,
	0x22, 0x59, 0x0a, 0x1c, 0x46, 0x69, 0x6e, 0x64, 0x46, 0x75, 0x6c, 0x6c, 0x50, 0x72, 0x6f, 0x66,
	0x69, 0x6c, 0x65, 0x42, 0x79, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x52, 0x65, 0x70, 0x6c, 0x79,
	0x12, 0x39, 0x0a, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x25,
	0x2e, 0x61, 0x70, 0x69, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x6d, 0x6f, 0x64, 0x65,
	0x6c, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x76, 0x32, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x50, 0x72,
	0x6f, 0x66, 0x69, 0x6c, 0x65, 0x52, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x22, 0x82, 0x03, 0x0a, 0x10,
	0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x52, 0x65, 0x71,
	0x12, 0x16, 0x0a, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x1d, 0x0a, 0x07, 0x66, 0x61, 0x63, 0x65,
	0x55, 0x52, 0x4c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x07, 0x66, 0x61, 0x63,
	0x65, 0x55, 0x52, 0x4c, 0x88, 0x01, 0x01, 0x12, 0x1f, 0x0a, 0x08, 0x6e, 0x69, 0x63, 0x6b, 0x6e,
	0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x48, 0x01, 0x52, 0x08, 0x6e, 0x69, 0x63,
	0x6b, 0x6e, 0x61, 0x6d, 0x65, 0x88, 0x01, 0x01, 0x12, 0x1b, 0x0a, 0x06, 0x67, 0x65, 0x6e, 0x64,
	0x65, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x48, 0x02, 0x52, 0x06, 0x67, 0x65, 0x6e, 0x64,
	0x65, 0x72, 0x88, 0x01, 0x01, 0x12, 0x1d, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x48, 0x03, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x88, 0x01, 0x01, 0x12, 0x19, 0x0a, 0x05, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x18, 0x06, 0x20,
	0x01, 0x28, 0x09, 0x48, 0x04, 0x52, 0x05, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x88, 0x01, 0x01, 0x12,
	0x19, 0x0a, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x48, 0x05,
	0x52, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x88, 0x01, 0x01, 0x12, 0x19, 0x0a, 0x05, 0x62, 0x69,
	0x72, 0x74, 0x68, 0x18, 0x09, 0x20, 0x01, 0x28, 0x03, 0x48, 0x06, 0x52, 0x05, 0x62, 0x69, 0x72,
	0x74, 0x68, 0x88, 0x01, 0x01, 0x12, 0x29, 0x0a, 0x0d, 0x49, 0x73, 0x4f, 0x70, 0x65, 0x6e, 0x4d,
	0x6f, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0d, 0x48, 0x07, 0x52, 0x0d,
	0x49, 0x73, 0x4f, 0x70, 0x65, 0x6e, 0x4d, 0x6f, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x88, 0x01, 0x01,
	0x42, 0x0a, 0x0a, 0x08, 0x5f, 0x66, 0x61, 0x63, 0x65, 0x55, 0x52, 0x4c, 0x42, 0x0b, 0x0a, 0x09,
	0x5f, 0x6e, 0x69, 0x63, 0x6b, 0x6e, 0x61, 0x6d, 0x65, 0x42, 0x09, 0x0a, 0x07, 0x5f, 0x67, 0x65,
	0x6e, 0x64, 0x65, 0x72, 0x42, 0x0a, 0x0a, 0x08, 0x5f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x42, 0x08, 0x0a, 0x06, 0x5f, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x42, 0x08, 0x0a, 0x06, 0x5f, 0x65,
	0x6d, 0x61, 0x69, 0x6c, 0x42, 0x08, 0x0a, 0x06, 0x5f, 0x62, 0x69, 0x72, 0x74, 0x68, 0x42, 0x10,
	0x0a, 0x0e, 0x5f, 0x49, 0x73, 0x4f, 0x70, 0x65, 0x6e, 0x4d, 0x6f, 0x6d, 0x65, 0x6e, 0x74, 0x73,
	0x22, 0x55, 0x0a, 0x12, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c,
	0x65, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x3f, 0x0a, 0x07, 0x70, 0x72, 0x6f, 0x66, 0x69, 0x6c,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x25, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x63, 0x6f,
	0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x2e,
	0x76, 0x32, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x52, 0x07,
	0x70, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x22, 0x7f, 0x0a, 0x0d, 0x47, 0x65, 0x74, 0x50, 0x72,
	0x6f, 0x66, 0x69, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x12, 0x16, 0x0a, 0x06, 0x75, 0x73, 0x65, 0x72,
	0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64,
	0x12, 0x18, 0x0a, 0x07, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x07, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f,
	0x64, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x14,
	0x0a, 0x05, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x70,
	0x68, 0x6f, 0x6e, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x65, 0x6d, 0x69, 0x6c, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x65, 0x6d, 0x69, 0x6c, 0x22, 0x52, 0x0a, 0x0f, 0x47, 0x65, 0x74, 0x50,
	0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x3f, 0x0a, 0x07, 0x70,
	0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x25, 0x2e, 0x61,
	0x70, 0x69, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e,
	0x75, 0x73, 0x65, 0x72, 0x2e, 0x76, 0x32, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x50, 0x72, 0x6f, 0x66,
	0x69, 0x6c, 0x65, 0x52, 0x07, 0x70, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x22, 0x76, 0x0a, 0x0c,
	0x53, 0x65, 0x74, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x12, 0x16, 0x0a, 0x06,
	0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73,
	0x65, 0x72, 0x49, 0x64, 0x12, 0x38, 0x0a, 0x06, 0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0e, 0x32, 0x20, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x69, 0x6d, 0x5f, 0x63, 0x6c,
	0x6f, 0x75, 0x64, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x76, 0x32, 0x2e, 0x55, 0x73, 0x65, 0x72,
	0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x06, 0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x14,
	0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x76,
	0x61, 0x6c, 0x75, 0x65, 0x22, 0x10, 0x0a, 0x0e, 0x53, 0x65, 0x74, 0x4f, 0x70, 0x74, 0x69, 0x6f,
	0x6e, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x63, 0x0a, 0x0f, 0x47, 0x65, 0x74, 0x4f, 0x70, 0x74,
	0x69, 0x6f, 0x6e, 0x56, 0x61, 0x6c, 0x52, 0x65, 0x71, 0x12, 0x16, 0x0a, 0x06, 0x75, 0x73, 0x65,
	0x72, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49,
	0x64, 0x12, 0x38, 0x0a, 0x06, 0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0e, 0x32, 0x20, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x69, 0x6d, 0x5f, 0x63, 0x6c, 0x6f, 0x75, 0x64,
	0x2e, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x76, 0x32, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x4f, 0x70, 0x74,
	0x69, 0x6f, 0x6e, 0x52, 0x06, 0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x29, 0x0a, 0x11, 0x47,
	0x65, 0x74, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x56, 0x61, 0x6c, 0x52, 0x65, 0x70, 0x6c, 0x79,
	0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x37, 0x0a, 0x1d, 0x47, 0x65, 0x74, 0x47, 0x6c, 0x6f,
	0x62, 0x61, 0x6c, 0x52, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x4f, 0x70, 0x74, 0x52, 0x65, 0x71, 0x12, 0x16, 0x0a, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x22,
	0x4d, 0x0a, 0x1f, 0x47, 0x65, 0x74, 0x47, 0x6c, 0x6f, 0x62, 0x61, 0x6c, 0x52, 0x65, 0x63, 0x65,
	0x69, 0x76, 0x65, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x4f, 0x70, 0x74, 0x52, 0x65, 0x70,
	0x6c, 0x79, 0x12, 0x2a, 0x0a, 0x10, 0x67, 0x6c, 0x6f, 0x62, 0x61, 0x6c, 0x52, 0x65, 0x63, 0x76,
	0x4d, 0x73, 0x67, 0x4f, 0x70, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x10, 0x67, 0x6c,
	0x6f, 0x62, 0x61, 0x6c, 0x52, 0x65, 0x63, 0x76, 0x4d, 0x73, 0x67, 0x4f, 0x70, 0x74, 0x22, 0x11,
	0x0a, 0x0f, 0x47, 0x65, 0x74, 0x41, 0x6c, 0x6c, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x52, 0x65,
	0x71, 0x22, 0x2d, 0x0a, 0x11, 0x47, 0x65, 0x74, 0x41, 0x6c, 0x6c, 0x55, 0x73, 0x65, 0x72, 0x49,
	0x44, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x18, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64,
	0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x07, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x73,
	0x2a, 0x1d, 0x0a, 0x06, 0x53, 0x77, 0x69, 0x74, 0x63, 0x68, 0x12, 0x09, 0x0a, 0x05, 0x43, 0x6c,
	0x6f, 0x73, 0x65, 0x10, 0x00, 0x12, 0x08, 0x0a, 0x04, 0x4f, 0x70, 0x65, 0x6e, 0x10, 0x01, 0x2a,
	0xcc, 0x02, 0x0a, 0x0a, 0x55, 0x73, 0x65, 0x72, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x12,
	0x0a, 0x0e, 0x6e, 0x6f, 0x74, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x10, 0x00, 0x12, 0x11, 0x0a, 0x0d, 0x69, 0x73, 0x4f, 0x70, 0x65, 0x6e, 0x4d, 0x6f, 0x6d, 0x65,
	0x6e, 0x74, 0x73, 0x10, 0x01, 0x12, 0x0d, 0x0a, 0x09, 0x71, 0x72, 0x43, 0x6f, 0x64, 0x65, 0x41,
	0x64, 0x64, 0x10, 0x02, 0x12, 0x0b, 0x0a, 0x07, 0x63, 0x61, 0x72, 0x64, 0x41, 0x64, 0x64, 0x10,
	0x03, 0x12, 0x0c, 0x0a, 0x08, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x41, 0x64, 0x64, 0x10, 0x04, 0x12,
	0x0b, 0x0a, 0x07, 0x63, 0x6f, 0x64, 0x65, 0x41, 0x64, 0x64, 0x10, 0x05, 0x12, 0x0c, 0x0a, 0x08,
	0x70, 0x68, 0x6f, 0x6e, 0x65, 0x41, 0x64, 0x64, 0x10, 0x06, 0x12, 0x11, 0x0a, 0x0d, 0x73, 0x68,
	0x6f, 0x77, 0x4c, 0x61, 0x73, 0x74, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x10, 0x07, 0x12, 0x17, 0x0a,
	0x13, 0x6d, 0x75, 0x6c, 0x74, 0x69, 0x70, 0x6c, 0x65, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x4c,
	0x6f, 0x67, 0x69, 0x6e, 0x10, 0x08, 0x12, 0x0b, 0x0a, 0x07, 0x69, 0x73, 0x41, 0x64, 0x6d, 0x69,
	0x6e, 0x10, 0x09, 0x12, 0x10, 0x0a, 0x0c, 0x69, 0x73, 0x4f, 0x70, 0x65, 0x6e, 0x57, 0x61, 0x6c,
	0x6c, 0x65, 0x74, 0x10, 0x0a, 0x12, 0x12, 0x0a, 0x0e, 0x61, 0x70, 0x70, 0x4d, 0x61, 0x6e, 0x67,
	0x65, 0x72, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x10, 0x0b, 0x12, 0x14, 0x0a, 0x10, 0x67, 0x6c, 0x6f,
	0x62, 0x61, 0x6c, 0x52, 0x65, 0x63, 0x76, 0x4d, 0x73, 0x67, 0x4f, 0x70, 0x74, 0x10, 0x0c, 0x12,
	0x0a, 0x0a, 0x06, 0x69, 0x73, 0x52, 0x65, 0x61, 0x6c, 0x10, 0x0d, 0x12, 0x15, 0x0a, 0x11, 0x69,
	0x73, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x10, 0x0e, 0x12, 0x0c, 0x0a, 0x08, 0x69, 0x73, 0x54, 0x65, 0x6e, 0x61, 0x6e, 0x74, 0x10, 0x0f,
	0x12, 0x18, 0x0a, 0x14, 0x69, 0x73, 0x53, 0x65, 0x74, 0x50, 0x72, 0x69, 0x76, 0x61, 0x74, 0x65,
	0x50, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x10, 0x10, 0x12, 0x12, 0x0a, 0x0e, 0x77, 0x65,
	0x6c, 0x63, 0x6f, 0x6d, 0x65, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x10, 0x11, 0x32, 0xbd,
	0x07, 0x0a, 0x07, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x12, 0x58, 0x0a, 0x0a, 0x47, 0x65,
	0x74, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x12, 0x23, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x69,
	0x6d, 0x5f, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x76, 0x32, 0x2e,
	0x47, 0x65, 0x74, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x1a, 0x25, 0x2e,
	0x61, 0x70, 0x69, 0x2e, 0x69, 0x6d, 0x5f, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x75, 0x73, 0x65,
	0x72, 0x2e, 0x76, 0x32, 0x2e, 0x47, 0x65, 0x74, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x52,
	0x65, 0x70, 0x6c, 0x79, 0x12, 0x61, 0x0a, 0x0d, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x50, 0x72,
	0x6f, 0x66, 0x69, 0x6c, 0x65, 0x12, 0x26, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x69, 0x6d, 0x5f, 0x63,
	0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x76, 0x32, 0x2e, 0x55, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x1a, 0x28, 0x2e,
	0x61, 0x70, 0x69, 0x2e, 0x69, 0x6d, 0x5f, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x75, 0x73, 0x65,
	0x72, 0x2e, 0x76, 0x32, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x50, 0x72, 0x6f, 0x66, 0x69,
	0x6c, 0x65, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x55, 0x0a, 0x09, 0x53, 0x65, 0x74, 0x4f, 0x70,
	0x74, 0x69, 0x6f, 0x6e, 0x12, 0x22, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x69, 0x6d, 0x5f, 0x63, 0x6c,
	0x6f, 0x75, 0x64, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x76, 0x32, 0x2e, 0x53, 0x65, 0x74, 0x4f,
	0x70, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x1a, 0x24, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x69,
	0x6d, 0x5f, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x76, 0x32, 0x2e,
	0x53, 0x65, 0x74, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x5e,
	0x0a, 0x0c, 0x47, 0x65, 0x74, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x56, 0x61, 0x6c, 0x12, 0x25,
	0x2e, 0x61, 0x70, 0x69, 0x2e, 0x69, 0x6d, 0x5f, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x75, 0x73,
	0x65, 0x72, 0x2e, 0x76, 0x32, 0x2e, 0x47, 0x65, 0x74, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x56,
	0x61, 0x6c, 0x52, 0x65, 0x71, 0x1a, 0x27, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x69, 0x6d, 0x5f, 0x63,
	0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x76, 0x32, 0x2e, 0x47, 0x65, 0x74,
	0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x56, 0x61, 0x6c, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x6f,
	0x0a, 0x13, 0x46, 0x69, 0x6e, 0x64, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x42, 0x79, 0x55,
	0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x2a, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x69, 0x6d, 0x5f, 0x63,
	0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x76, 0x32, 0x2e, 0x46, 0x69, 0x6e,
	0x64, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x42, 0x79, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65,
	0x71, 0x1a, 0x2c, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x69, 0x6d, 0x5f, 0x63, 0x6c, 0x6f, 0x75, 0x64,
	0x2e, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x76, 0x32, 0x2e, 0x46, 0x69, 0x6e, 0x64, 0x50, 0x72, 0x6f,
	0x66, 0x69, 0x6c, 0x65, 0x42, 0x79, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12,
	0x7f, 0x0a, 0x17, 0x46, 0x69, 0x6e, 0x64, 0x46, 0x75, 0x6c, 0x6c, 0x50, 0x72, 0x6f, 0x66, 0x69,
	0x6c, 0x65, 0x42, 0x79, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x30, 0x2e, 0x61, 0x70, 0x69,
	0x2e, 0x69, 0x6d, 0x5f, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x76,
	0x32, 0x2e, 0x46, 0x69, 0x6e, 0x64, 0x46, 0x75, 0x6c, 0x6c, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c,
	0x65, 0x42, 0x79, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x52, 0x65, 0x71, 0x1a, 0x32, 0x2e, 0x61,
	0x70, 0x69, 0x2e, 0x69, 0x6d, 0x5f, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x75, 0x73, 0x65, 0x72,
	0x2e, 0x76, 0x32, 0x2e, 0x46, 0x69, 0x6e, 0x64, 0x46, 0x75, 0x6c, 0x6c, 0x50, 0x72, 0x6f, 0x66,
	0x69, 0x6c, 0x65, 0x42, 0x79, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x52, 0x65, 0x70, 0x6c, 0x79,
	0x12, 0x88, 0x01, 0x0a, 0x1a, 0x47, 0x65, 0x74, 0x47, 0x6c, 0x6f, 0x62, 0x61, 0x6c, 0x52, 0x65,
	0x63, 0x65, 0x69, 0x76, 0x65, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x4f, 0x70, 0x74, 0x12,
	0x33, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x69, 0x6d, 0x5f, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x75,
	0x73, 0x65, 0x72, 0x2e, 0x76, 0x32, 0x2e, 0x47, 0x65, 0x74, 0x47, 0x6c, 0x6f, 0x62, 0x61, 0x6c,
	0x52, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x4f, 0x70,
	0x74, 0x52, 0x65, 0x71, 0x1a, 0x35, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x69, 0x6d, 0x5f, 0x63, 0x6c,
	0x6f, 0x75, 0x64, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x76, 0x32, 0x2e, 0x47, 0x65, 0x74, 0x47,
	0x6c, 0x6f, 0x62, 0x61, 0x6c, 0x52, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x4d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x4f, 0x70, 0x74, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x61, 0x0a, 0x0d, 0x53,
	0x65, 0x61, 0x72, 0x63, 0x68, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x12, 0x26, 0x2e, 0x61,
	0x70, 0x69, 0x2e, 0x69, 0x6d, 0x5f, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x75, 0x73, 0x65, 0x72,
	0x2e, 0x76, 0x32, 0x2e, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c,
	0x65, 0x52, 0x65, 0x71, 0x1a, 0x28, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x69, 0x6d, 0x5f, 0x63, 0x6c,
	0x6f, 0x75, 0x64, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x76, 0x32, 0x2e, 0x53, 0x65, 0x61, 0x72,
	0x63, 0x68, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x5e,
	0x0a, 0x0c, 0x47, 0x65, 0x74, 0x41, 0x6c, 0x6c, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x12, 0x25,
	0x2e, 0x61, 0x70, 0x69, 0x2e, 0x69, 0x6d, 0x5f, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x75, 0x73,
	0x65, 0x72, 0x2e, 0x76, 0x32, 0x2e, 0x47, 0x65, 0x74, 0x41, 0x6c, 0x6c, 0x55, 0x73, 0x65, 0x72,
	0x49, 0x44, 0x52, 0x65, 0x71, 0x1a, 0x27, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x69, 0x6d, 0x5f, 0x63,
	0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x76, 0x32, 0x2e, 0x47, 0x65, 0x74,
	0x41, 0x6c, 0x6c, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x42, 0x51,
	0x0a, 0x14, 0x61, 0x70, 0x69, 0x2e, 0x69, 0x6d, 0x5f, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x75,
	0x73, 0x65, 0x72, 0x2e, 0x76, 0x32, 0x50, 0x01, 0x5a, 0x37, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62,
	0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x73, 0x70, 0x61, 0x72, 0x6b, 0x2d, 0x63, 0x6f, 0x6d, 0x6d, 0x2f,
	0x73, 0x70, 0x61, 0x72, 0x6b, 0x2d, 0x61, 0x70, 0x69, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x69, 0x6d,
	0x5f, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2f, 0x75, 0x73, 0x65, 0x72, 0x2f, 0x76, 0x32, 0x3b, 0x76,
	0x32, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_im_cloud_user_v2_profile_proto_rawDescOnce sync.Once
	file_im_cloud_user_v2_profile_proto_rawDescData = file_im_cloud_user_v2_profile_proto_rawDesc
)

func file_im_cloud_user_v2_profile_proto_rawDescGZIP() []byte {
	file_im_cloud_user_v2_profile_proto_rawDescOnce.Do(func() {
		file_im_cloud_user_v2_profile_proto_rawDescData = protoimpl.X.CompressGZIP(file_im_cloud_user_v2_profile_proto_rawDescData)
	})
	return file_im_cloud_user_v2_profile_proto_rawDescData
}

var file_im_cloud_user_v2_profile_proto_enumTypes = make([]protoimpl.EnumInfo, 2)
var file_im_cloud_user_v2_profile_proto_msgTypes = make([]protoimpl.MessageInfo, 18)
var file_im_cloud_user_v2_profile_proto_goTypes = []interface{}{
	(Switch)(0),                             // 0: api.im_cloud.user.v2.Switch
	(UserOption)(0),                         // 1: api.im_cloud.user.v2.UserOption
	(*SearchProfileReq)(nil),                // 2: api.im_cloud.user.v2.SearchProfileReq
	(*SearchProfileReply)(nil),              // 3: api.im_cloud.user.v2.SearchProfileReply
	(*FindProfileByUserReq)(nil),            // 4: api.im_cloud.user.v2.FindProfileByUserReq
	(*FindProfileByUserReply)(nil),          // 5: api.im_cloud.user.v2.FindProfileByUserReply
	(*FindFullProfileByUserIdReq)(nil),      // 6: api.im_cloud.user.v2.FindFullProfileByUserIdReq
	(*FindFullProfileByUserIdReply)(nil),    // 7: api.im_cloud.user.v2.FindFullProfileByUserIdReply
	(*UpdateProfileReq)(nil),                // 8: api.im_cloud.user.v2.UpdateProfileReq
	(*UpdateProfileReply)(nil),              // 9: api.im_cloud.user.v2.UpdateProfileReply
	(*GetProfileReq)(nil),                   // 10: api.im_cloud.user.v2.GetProfileReq
	(*GetProfileReply)(nil),                 // 11: api.im_cloud.user.v2.GetProfileReply
	(*SetOptionReq)(nil),                    // 12: api.im_cloud.user.v2.SetOptionReq
	(*SetOptionReply)(nil),                  // 13: api.im_cloud.user.v2.SetOptionReply
	(*GetOptionValReq)(nil),                 // 14: api.im_cloud.user.v2.GetOptionValReq
	(*GetOptionValReply)(nil),               // 15: api.im_cloud.user.v2.GetOptionValReply
	(*GetGlobalReceiveMessageOptReq)(nil),   // 16: api.im_cloud.user.v2.GetGlobalReceiveMessageOptReq
	(*GetGlobalReceiveMessageOptReply)(nil), // 17: api.im_cloud.user.v2.GetGlobalReceiveMessageOptReply
	(*GetAllUserIDReq)(nil),                 // 18: api.im_cloud.user.v2.GetAllUserIDReq
	(*GetAllUserIDReply)(nil),               // 19: api.im_cloud.user.v2.GetAllUserIDReply
	(*v2.UserProfile)(nil),                  // 20: api.common.model.user.v2.UserProfile
}
var file_im_cloud_user_v2_profile_proto_depIdxs = []int32{
	20, // 0: api.im_cloud.user.v2.SearchProfileReply.data:type_name -> api.common.model.user.v2.UserProfile
	20, // 1: api.im_cloud.user.v2.FindProfileByUserReply.list:type_name -> api.common.model.user.v2.UserProfile
	20, // 2: api.im_cloud.user.v2.FindFullProfileByUserIdReply.list:type_name -> api.common.model.user.v2.UserProfile
	20, // 3: api.im_cloud.user.v2.UpdateProfileReply.profile:type_name -> api.common.model.user.v2.UserProfile
	20, // 4: api.im_cloud.user.v2.GetProfileReply.profile:type_name -> api.common.model.user.v2.UserProfile
	1,  // 5: api.im_cloud.user.v2.SetOptionReq.option:type_name -> api.im_cloud.user.v2.UserOption
	1,  // 6: api.im_cloud.user.v2.GetOptionValReq.option:type_name -> api.im_cloud.user.v2.UserOption
	10, // 7: api.im_cloud.user.v2.Profile.GetProfile:input_type -> api.im_cloud.user.v2.GetProfileReq
	8,  // 8: api.im_cloud.user.v2.Profile.UpdateProfile:input_type -> api.im_cloud.user.v2.UpdateProfileReq
	12, // 9: api.im_cloud.user.v2.Profile.SetOption:input_type -> api.im_cloud.user.v2.SetOptionReq
	14, // 10: api.im_cloud.user.v2.Profile.GetOptionVal:input_type -> api.im_cloud.user.v2.GetOptionValReq
	4,  // 11: api.im_cloud.user.v2.Profile.FindProfileByUserId:input_type -> api.im_cloud.user.v2.FindProfileByUserReq
	6,  // 12: api.im_cloud.user.v2.Profile.FindFullProfileByUserId:input_type -> api.im_cloud.user.v2.FindFullProfileByUserIdReq
	16, // 13: api.im_cloud.user.v2.Profile.GetGlobalReceiveMessageOpt:input_type -> api.im_cloud.user.v2.GetGlobalReceiveMessageOptReq
	2,  // 14: api.im_cloud.user.v2.Profile.SearchProfile:input_type -> api.im_cloud.user.v2.SearchProfileReq
	18, // 15: api.im_cloud.user.v2.Profile.GetAllUserID:input_type -> api.im_cloud.user.v2.GetAllUserIDReq
	11, // 16: api.im_cloud.user.v2.Profile.GetProfile:output_type -> api.im_cloud.user.v2.GetProfileReply
	9,  // 17: api.im_cloud.user.v2.Profile.UpdateProfile:output_type -> api.im_cloud.user.v2.UpdateProfileReply
	13, // 18: api.im_cloud.user.v2.Profile.SetOption:output_type -> api.im_cloud.user.v2.SetOptionReply
	15, // 19: api.im_cloud.user.v2.Profile.GetOptionVal:output_type -> api.im_cloud.user.v2.GetOptionValReply
	5,  // 20: api.im_cloud.user.v2.Profile.FindProfileByUserId:output_type -> api.im_cloud.user.v2.FindProfileByUserReply
	7,  // 21: api.im_cloud.user.v2.Profile.FindFullProfileByUserId:output_type -> api.im_cloud.user.v2.FindFullProfileByUserIdReply
	17, // 22: api.im_cloud.user.v2.Profile.GetGlobalReceiveMessageOpt:output_type -> api.im_cloud.user.v2.GetGlobalReceiveMessageOptReply
	3,  // 23: api.im_cloud.user.v2.Profile.SearchProfile:output_type -> api.im_cloud.user.v2.SearchProfileReply
	19, // 24: api.im_cloud.user.v2.Profile.GetAllUserID:output_type -> api.im_cloud.user.v2.GetAllUserIDReply
	16, // [16:25] is the sub-list for method output_type
	7,  // [7:16] is the sub-list for method input_type
	7,  // [7:7] is the sub-list for extension type_name
	7,  // [7:7] is the sub-list for extension extendee
	0,  // [0:7] is the sub-list for field type_name
}

func init() { file_im_cloud_user_v2_profile_proto_init() }
func file_im_cloud_user_v2_profile_proto_init() {
	if File_im_cloud_user_v2_profile_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_im_cloud_user_v2_profile_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SearchProfileReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_im_cloud_user_v2_profile_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SearchProfileReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_im_cloud_user_v2_profile_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FindProfileByUserReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_im_cloud_user_v2_profile_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FindProfileByUserReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_im_cloud_user_v2_profile_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FindFullProfileByUserIdReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_im_cloud_user_v2_profile_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FindFullProfileByUserIdReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_im_cloud_user_v2_profile_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateProfileReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_im_cloud_user_v2_profile_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateProfileReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_im_cloud_user_v2_profile_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetProfileReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_im_cloud_user_v2_profile_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetProfileReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_im_cloud_user_v2_profile_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SetOptionReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_im_cloud_user_v2_profile_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SetOptionReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_im_cloud_user_v2_profile_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetOptionValReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_im_cloud_user_v2_profile_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetOptionValReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_im_cloud_user_v2_profile_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetGlobalReceiveMessageOptReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_im_cloud_user_v2_profile_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetGlobalReceiveMessageOptReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_im_cloud_user_v2_profile_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetAllUserIDReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_im_cloud_user_v2_profile_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetAllUserIDReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_im_cloud_user_v2_profile_proto_msgTypes[6].OneofWrappers = []interface{}{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_im_cloud_user_v2_profile_proto_rawDesc,
			NumEnums:      2,
			NumMessages:   18,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_im_cloud_user_v2_profile_proto_goTypes,
		DependencyIndexes: file_im_cloud_user_v2_profile_proto_depIdxs,
		EnumInfos:         file_im_cloud_user_v2_profile_proto_enumTypes,
		MessageInfos:      file_im_cloud_user_v2_profile_proto_msgTypes,
	}.Build()
	File_im_cloud_user_v2_profile_proto = out.File
	file_im_cloud_user_v2_profile_proto_rawDesc = nil
	file_im_cloud_user_v2_profile_proto_goTypes = nil
	file_im_cloud_user_v2_profile_proto_depIdxs = nil
}
