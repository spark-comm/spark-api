// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.34.2
// 	protoc        v5.27.1
// source: common/model/v2/msg.proto

package v2

import (
	_ "github.com/envoyproxy/protoc-gen-validate/validate"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// 消息标识符
type Identifier int32

const (
	Identifier_GetMaxSeq           Identifier = 0 //获取seq
	Identifier_SendMsg             Identifier = 1 //发送消息
	Identifier_SignalMsg           Identifier = 2 //信令消息
	Identifier_PullMsg             Identifier = 3 //客户端拉取服务端消息
	Identifier_KickOnlineMsg       Identifier = 4 //踢出用户
	Identifier_LoginOutMsg         Identifier = 5 //用户退出消息
	Identifier_SetBackgroundStatus Identifier = 6 //用户后台运行状态设置
	Identifier_SetLanguage         Identifier = 7 //设置用户当前语言
	Identifier_PushMsg             Identifier = 8 //服务端向客户端推送消息
	Identifier_PushAckMsg          Identifier = 9 //服务端向客户端推送ack消息
)

// Enum value maps for Identifier.
var (
	Identifier_name = map[int32]string{
		0: "GetMaxSeq",
		1: "SendMsg",
		2: "SignalMsg",
		3: "PullMsg",
		4: "KickOnlineMsg",
		5: "LoginOutMsg",
		6: "SetBackgroundStatus",
		7: "SetLanguage",
		8: "PushMsg",
		9: "PushAckMsg",
	}
	Identifier_value = map[string]int32{
		"GetMaxSeq":           0,
		"SendMsg":             1,
		"SignalMsg":           2,
		"PullMsg":             3,
		"KickOnlineMsg":       4,
		"LoginOutMsg":         5,
		"SetBackgroundStatus": 6,
		"SetLanguage":         7,
		"PushMsg":             8,
		"PushAckMsg":          9,
	}
)

func (x Identifier) Enum() *Identifier {
	p := new(Identifier)
	*p = x
	return p
}

func (x Identifier) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Identifier) Descriptor() protoreflect.EnumDescriptor {
	return file_common_model_v2_msg_proto_enumTypes[0].Descriptor()
}

func (Identifier) Type() protoreflect.EnumType {
	return &file_common_model_v2_msg_proto_enumTypes[0]
}

func (x Identifier) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Identifier.Descriptor instead.
func (Identifier) EnumDescriptor() ([]byte, []int) {
	return file_common_model_v2_msg_proto_rawDescGZIP(), []int{0}
}

// 消息响应码
type ResCode int32

const (
	ResCode_Success           ResCode = 0 //成功
	ResCode_DecodeErr         ResCode = 1 //消息内容解码错误
	ResCode_ArgsValidateErr   ResCode = 2 //参数错
	ResCode_SendErr           ResCode = 3 //发送失败
	ResCode_SendReceiverError ResCode = 4 //发送消息到接收器异常
)

// Enum value maps for ResCode.
var (
	ResCode_name = map[int32]string{
		0: "Success",
		1: "DecodeErr",
		2: "ArgsValidateErr",
		3: "SendErr",
		4: "SendReceiverError",
	}
	ResCode_value = map[string]int32{
		"Success":           0,
		"DecodeErr":         1,
		"ArgsValidateErr":   2,
		"SendErr":           3,
		"SendReceiverError": 4,
	}
)

func (x ResCode) Enum() *ResCode {
	p := new(ResCode)
	*p = x
	return p
}

func (x ResCode) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ResCode) Descriptor() protoreflect.EnumDescriptor {
	return file_common_model_v2_msg_proto_enumTypes[1].Descriptor()
}

func (ResCode) Type() protoreflect.EnumType {
	return &file_common_model_v2_msg_proto_enumTypes[1]
}

func (x ResCode) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ResCode.Descriptor instead.
func (ResCode) EnumDescriptor() ([]byte, []int) {
	return file_common_model_v2_msg_proto_rawDescGZIP(), []int{1}
}

type SessionType int32

const (
	SessionType_SingleChatType       SessionType = 0
	SessionType_GroupChatType        SessionType = 1
	SessionType_SuperGroupChatType   SessionType = 2
	SessionType_NotificationChatType SessionType = 3
)

// Enum value maps for SessionType.
var (
	SessionType_name = map[int32]string{
		0: "SingleChatType",
		1: "GroupChatType",
		2: "SuperGroupChatType",
		3: "NotificationChatType",
	}
	SessionType_value = map[string]int32{
		"SingleChatType":       0,
		"GroupChatType":        1,
		"SuperGroupChatType":   2,
		"NotificationChatType": 3,
	}
)

func (x SessionType) Enum() *SessionType {
	p := new(SessionType)
	*p = x
	return p
}

func (x SessionType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (SessionType) Descriptor() protoreflect.EnumDescriptor {
	return file_common_model_v2_msg_proto_enumTypes[2].Descriptor()
}

func (SessionType) Type() protoreflect.EnumType {
	return &file_common_model_v2_msg_proto_enumTypes[2]
}

func (x SessionType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use SessionType.Descriptor instead.
func (SessionType) EnumDescriptor() ([]byte, []int) {
	return file_common_model_v2_msg_proto_rawDescGZIP(), []int{2}
}

// 发送消息结构
type MsgReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Identifier Identifier `protobuf:"varint,1,opt,name=identifier,proto3,enum=api.common.model.v2.Identifier" json:"identifier,omitempty"` //消息标识服
	Token      string     `protobuf:"bytes,2,opt,name=token,proto3" json:"token,omitempty"`                                                //token
	SendID     string     `protobuf:"bytes,3,opt,name=sendID,proto3" json:"sendID,omitempty"`                                              // 发送者id
	TrackID    string     `protobuf:"bytes,4,opt,name=trackID,proto3" json:"trackID,omitempty"`                                            //链路id
	MsgIncr    string     `protobuf:"bytes,5,opt,name=msgIncr,proto3" json:"msgIncr,omitempty"`                                            //ack标记
	Data       []byte     `protobuf:"bytes,6,opt,name=data,proto3" json:"data,omitempty"`                                                  //消息内容
}

func (x *MsgReq) Reset() {
	*x = MsgReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_common_model_v2_msg_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MsgReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MsgReq) ProtoMessage() {}

func (x *MsgReq) ProtoReflect() protoreflect.Message {
	mi := &file_common_model_v2_msg_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MsgReq.ProtoReflect.Descriptor instead.
func (*MsgReq) Descriptor() ([]byte, []int) {
	return file_common_model_v2_msg_proto_rawDescGZIP(), []int{0}
}

func (x *MsgReq) GetIdentifier() Identifier {
	if x != nil {
		return x.Identifier
	}
	return Identifier_GetMaxSeq
}

func (x *MsgReq) GetToken() string {
	if x != nil {
		return x.Token
	}
	return ""
}

func (x *MsgReq) GetSendID() string {
	if x != nil {
		return x.SendID
	}
	return ""
}

func (x *MsgReq) GetTrackID() string {
	if x != nil {
		return x.TrackID
	}
	return ""
}

func (x *MsgReq) GetMsgIncr() string {
	if x != nil {
		return x.MsgIncr
	}
	return ""
}

func (x *MsgReq) GetData() []byte {
	if x != nil {
		return x.Data
	}
	return nil
}

// 发送消息响应
type MsgReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Identifier  Identifier `protobuf:"varint,1,opt,name=identifier,proto3,enum=api.common.model.v2.Identifier" json:"identifier,omitempty"` //消息标识服
	TrackID     string     `protobuf:"bytes,2,opt,name=trackID,proto3" json:"trackID,omitempty"`                                            //链路id
	MsgIncr     string     `protobuf:"bytes,3,opt,name=msgIncr,proto3" json:"msgIncr,omitempty"`                                            //消息增量
	Code        ResCode    `protobuf:"varint,4,opt,name=code,proto3,enum=api.common.model.v2.ResCode" json:"code,omitempty"`                //业务编码
	Msg         string     `protobuf:"bytes,5,opt,name=msg,proto3" json:"msg,omitempty"`                                                    // 提示消息
	Reason      string     `protobuf:"bytes,6,opt,name=reason,proto3" json:"reason,omitempty"`                                              //原因
	Data        []byte     `protobuf:"bytes,7,opt,name=data,proto3" json:"data,omitempty"`                                                  //消息内容
	ServerMsgId string     `protobuf:"bytes,8,opt,name=serverMsgId,proto3" json:"serverMsgId,omitempty"`                                    //服务端消息id
	Seq         int64      `protobuf:"varint,9,opt,name=seq,proto3" json:"seq,omitempty"`                                                   //用户消息的
}

func (x *MsgReply) Reset() {
	*x = MsgReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_common_model_v2_msg_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MsgReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MsgReply) ProtoMessage() {}

func (x *MsgReply) ProtoReflect() protoreflect.Message {
	mi := &file_common_model_v2_msg_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MsgReply.ProtoReflect.Descriptor instead.
func (*MsgReply) Descriptor() ([]byte, []int) {
	return file_common_model_v2_msg_proto_rawDescGZIP(), []int{1}
}

func (x *MsgReply) GetIdentifier() Identifier {
	if x != nil {
		return x.Identifier
	}
	return Identifier_GetMaxSeq
}

func (x *MsgReply) GetTrackID() string {
	if x != nil {
		return x.TrackID
	}
	return ""
}

func (x *MsgReply) GetMsgIncr() string {
	if x != nil {
		return x.MsgIncr
	}
	return ""
}

func (x *MsgReply) GetCode() ResCode {
	if x != nil {
		return x.Code
	}
	return ResCode_Success
}

func (x *MsgReply) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

func (x *MsgReply) GetReason() string {
	if x != nil {
		return x.Reason
	}
	return ""
}

func (x *MsgReply) GetData() []byte {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *MsgReply) GetServerMsgId() string {
	if x != nil {
		return x.ServerMsgId
	}
	return ""
}

func (x *MsgReply) GetSeq() int64 {
	if x != nil {
		return x.Seq
	}
	return 0
}

// 获取最大seq的消息结构
type GetMaxSeqMsg struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SessionType int32  `protobuf:"varint,1,opt,name=sessionType,proto3" json:"sessionType,omitempty"` //会话类型，个人和群聊
	Uid         string `protobuf:"bytes,2,opt,name=uid,proto3" json:"uid,omitempty"`                  //用户id或群id
}

func (x *GetMaxSeqMsg) Reset() {
	*x = GetMaxSeqMsg{}
	if protoimpl.UnsafeEnabled {
		mi := &file_common_model_v2_msg_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetMaxSeqMsg) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetMaxSeqMsg) ProtoMessage() {}

func (x *GetMaxSeqMsg) ProtoReflect() protoreflect.Message {
	mi := &file_common_model_v2_msg_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetMaxSeqMsg.ProtoReflect.Descriptor instead.
func (*GetMaxSeqMsg) Descriptor() ([]byte, []int) {
	return file_common_model_v2_msg_proto_rawDescGZIP(), []int{2}
}

func (x *GetMaxSeqMsg) GetSessionType() int32 {
	if x != nil {
		return x.SessionType
	}
	return 0
}

func (x *GetMaxSeqMsg) GetUid() string {
	if x != nil {
		return x.Uid
	}
	return ""
}

// 最大seq的消息结构
type ResMaxSeqMsg struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SessionType int32  `protobuf:"varint,1,opt,name=sessionType,proto3" json:"sessionType,omitempty"`     //会话类型，个人和群聊
	MaxSeq      int64  `protobuf:"varint,2,opt,name=max_seq,json=maxSeq,proto3" json:"max_seq,omitempty"` //最大的seq
	Uid         string `protobuf:"bytes,3,opt,name=uid,proto3" json:"uid,omitempty"`                      //用户id或群id
}

func (x *ResMaxSeqMsg) Reset() {
	*x = ResMaxSeqMsg{}
	if protoimpl.UnsafeEnabled {
		mi := &file_common_model_v2_msg_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResMaxSeqMsg) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResMaxSeqMsg) ProtoMessage() {}

func (x *ResMaxSeqMsg) ProtoReflect() protoreflect.Message {
	mi := &file_common_model_v2_msg_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResMaxSeqMsg.ProtoReflect.Descriptor instead.
func (*ResMaxSeqMsg) Descriptor() ([]byte, []int) {
	return file_common_model_v2_msg_proto_rawDescGZIP(), []int{3}
}

func (x *ResMaxSeqMsg) GetSessionType() int32 {
	if x != nil {
		return x.SessionType
	}
	return 0
}

func (x *ResMaxSeqMsg) GetMaxSeq() int64 {
	if x != nil {
		return x.MaxSeq
	}
	return 0
}

func (x *ResMaxSeqMsg) GetUid() string {
	if x != nil {
		return x.Uid
	}
	return ""
}

// 客户端拉取服务消息的请求消息结构
type PullingMsg struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SessionType int32   `protobuf:"varint,1,opt,name=sessionType,proto3" json:"sessionType,omitempty"` //会话类型，个人和群聊
	MsgType     int32   `protobuf:"varint,2,opt,name=msgType,proto3" json:"msgType,omitempty"`         //拉取的消息类型1:离线消息；2:漫游消息;3:历史消息
	Uid         string  `protobuf:"bytes,3,opt,name=uid,proto3" json:"uid,omitempty"`                  //用户id或群id
	Seqs        []int64 `protobuf:"varint,4,rep,packed,name=seqs,proto3" json:"seqs,omitempty"`        //消息的seq集合
}

func (x *PullingMsg) Reset() {
	*x = PullingMsg{}
	if protoimpl.UnsafeEnabled {
		mi := &file_common_model_v2_msg_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PullingMsg) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PullingMsg) ProtoMessage() {}

func (x *PullingMsg) ProtoReflect() protoreflect.Message {
	mi := &file_common_model_v2_msg_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PullingMsg.ProtoReflect.Descriptor instead.
func (*PullingMsg) Descriptor() ([]byte, []int) {
	return file_common_model_v2_msg_proto_rawDescGZIP(), []int{4}
}

func (x *PullingMsg) GetSessionType() int32 {
	if x != nil {
		return x.SessionType
	}
	return 0
}

func (x *PullingMsg) GetMsgType() int32 {
	if x != nil {
		return x.MsgType
	}
	return 0
}

func (x *PullingMsg) GetUid() string {
	if x != nil {
		return x.Uid
	}
	return ""
}

func (x *PullingMsg) GetSeqs() []int64 {
	if x != nil {
		return x.Seqs
	}
	return nil
}

// 客户端拉取消息的返回
type ResPullingMsg struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SessionType int32      `protobuf:"varint,1,opt,name=sessionType,proto3" json:"sessionType,omitempty"`     //会话类型，个人和群聊
	Uid         string     `protobuf:"bytes,3,opt,name=uid,proto3" json:"uid,omitempty"`                      //用户id或群id
	MinSeq      int64      `protobuf:"varint,4,opt,name=min_seq,json=minSeq,proto3" json:"min_seq,omitempty"` //最小seq
	Messages    []*MsgData `protobuf:"bytes,5,rep,name=messages,proto3" json:"messages,omitempty"`            //消息数量
	Count       int64      `protobuf:"varint,6,opt,name=count,proto3" json:"count,omitempty"`                 //总数
}

func (x *ResPullingMsg) Reset() {
	*x = ResPullingMsg{}
	if protoimpl.UnsafeEnabled {
		mi := &file_common_model_v2_msg_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResPullingMsg) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResPullingMsg) ProtoMessage() {}

func (x *ResPullingMsg) ProtoReflect() protoreflect.Message {
	mi := &file_common_model_v2_msg_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResPullingMsg.ProtoReflect.Descriptor instead.
func (*ResPullingMsg) Descriptor() ([]byte, []int) {
	return file_common_model_v2_msg_proto_rawDescGZIP(), []int{5}
}

func (x *ResPullingMsg) GetSessionType() int32 {
	if x != nil {
		return x.SessionType
	}
	return 0
}

func (x *ResPullingMsg) GetUid() string {
	if x != nil {
		return x.Uid
	}
	return ""
}

func (x *ResPullingMsg) GetMinSeq() int64 {
	if x != nil {
		return x.MinSeq
	}
	return 0
}

func (x *ResPullingMsg) GetMessages() []*MsgData {
	if x != nil {
		return x.Messages
	}
	return nil
}

func (x *ResPullingMsg) GetCount() int64 {
	if x != nil {
		return x.Count
	}
	return 0
}

// 离线推送
type OfflinePushInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Title         string `protobuf:"bytes,1,opt,name=title,proto3" json:"title,omitempty"`                  //标题
	Desc          string `protobuf:"bytes,2,opt,name=desc,proto3" json:"desc,omitempty"`                    //描述
	Ex            string `protobuf:"bytes,3,opt,name=ex,proto3" json:"ex,omitempty"`                        //扩展字段
	IOSPushSound  string `protobuf:"bytes,4,opt,name=iOSPushSound,proto3" json:"iOSPushSound,omitempty"`    //推送提示音
	IOSBadgeCount bool   `protobuf:"varint,5,opt,name=iOSBadgeCount,proto3" json:"iOSBadgeCount,omitempty"` //是否闪灯
}

func (x *OfflinePushInfo) Reset() {
	*x = OfflinePushInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_common_model_v2_msg_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OfflinePushInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OfflinePushInfo) ProtoMessage() {}

func (x *OfflinePushInfo) ProtoReflect() protoreflect.Message {
	mi := &file_common_model_v2_msg_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OfflinePushInfo.ProtoReflect.Descriptor instead.
func (*OfflinePushInfo) Descriptor() ([]byte, []int) {
	return file_common_model_v2_msg_proto_rawDescGZIP(), []int{6}
}

func (x *OfflinePushInfo) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *OfflinePushInfo) GetDesc() string {
	if x != nil {
		return x.Desc
	}
	return ""
}

func (x *OfflinePushInfo) GetEx() string {
	if x != nil {
		return x.Ex
	}
	return ""
}

func (x *OfflinePushInfo) GetIOSPushSound() string {
	if x != nil {
		return x.IOSPushSound
	}
	return ""
}

func (x *OfflinePushInfo) GetIOSBadgeCount() bool {
	if x != nil {
		return x.IOSBadgeCount
	}
	return false
}

// 消息结构
type MsgData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SendID               string           `protobuf:"bytes,1,opt,name=sendID,proto3" json:"sendID,omitempty"`                                                                                             //发送者
	ReceiveID            string           `protobuf:"bytes,2,opt,name=receiveID,proto3" json:"receiveID,omitempty"`                                                                                       //接收者
	GroupID              string           `protobuf:"bytes,3,opt,name=groupID,proto3" json:"groupID,omitempty"`                                                                                           //群id
	ClientMsgID          string           `protobuf:"bytes,4,opt,name=clientMsgID,proto3" json:"clientMsgID,omitempty"`                                                                                   //客户端消息id
	ServerMsgID          string           `protobuf:"bytes,5,opt,name=serverMsgID,proto3" json:"serverMsgID,omitempty"`                                                                                   //服务端消息id
	SenderPlatform       string           `protobuf:"bytes,6,opt,name=senderPlatform,proto3" json:"senderPlatform,omitempty"`                                                                             //发送平台
	SenderNickname       string           `protobuf:"bytes,7,opt,name=senderNickname,proto3" json:"senderNickname,omitempty"`                                                                             //发送者昵称
	SenderFaceURL        string           `protobuf:"bytes,8,opt,name=senderFaceURL,proto3" json:"senderFaceURL,omitempty"`                                                                               //发送者头像
	SessionType          int32            `protobuf:"varint,9,opt,name=sessionType,proto3" json:"sessionType,omitempty"`                                                                                  //会话类型
	MsgFrom              int32            `protobuf:"varint,10,opt,name=msgFrom,proto3" json:"msgFrom,omitempty"`                                                                                         //消息类型。0用户，1系统
	ContentType          int32            `protobuf:"varint,11,opt,name=contentType,proto3" json:"contentType,omitempty"`                                                                                 //内容类型
	Content              []byte           `protobuf:"bytes,12,opt,name=content,proto3" json:"content,omitempty"`                                                                                          //消息内容
	Seq                  int64            `protobuf:"varint,14,opt,name=seq,proto3" json:"seq,omitempty"`                                                                                                 //消息的seq
	SendTime             int64            `protobuf:"varint,15,opt,name=sendTime,proto3" json:"sendTime,omitempty"`                                                                                       //消息发送时间
	CreateTime           int64            `protobuf:"varint,16,opt,name=createTime,proto3" json:"createTime,omitempty"`                                                                                   //创建时间
	Status               int32            `protobuf:"varint,17,opt,name=status,proto3" json:"status,omitempty"`                                                                                           //状态
	Options              map[string]bool  `protobuf:"bytes,18,rep,name=options,proto3" json:"options,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"varint,2,opt,name=value,proto3"` //配置项
	OfflinePushInfo      *OfflinePushInfo `protobuf:"bytes,19,opt,name=offlinePushInfo,proto3" json:"offlinePushInfo,omitempty"`                                                                          //推送详情
	AtUserIDList         []string         `protobuf:"bytes,20,rep,name=atUserIDList,proto3" json:"atUserIDList,omitempty"`                                                                                // at的人
	MsgDataList          []byte           `protobuf:"bytes,21,opt,name=msgDataList,proto3" json:"msgDataList,omitempty"`                                                                                  //消息详细新
	AttachedInfo         string           `protobuf:"bytes,22,opt,name=attachedInfo,proto3" json:"attachedInfo,omitempty"`                                                                                //附加信息
	Ex                   string           `protobuf:"bytes,23,opt,name=ex,proto3" json:"ex,omitempty"`                                                                                                    //扩展字段
	IsReact              bool             `protobuf:"varint,40,opt,name=isReact,proto3" json:"isReact,omitempty"`                                                                                         //是否已读
	IsExternalExtensions bool             `protobuf:"varint,41,opt,name=isExternalExtensions,proto3" json:"isExternalExtensions,omitempty"`                                                               //是否外部扩展
	MsgFirstModifyTime   int64            `protobuf:"varint,42,opt,name=msgFirstModifyTime,proto3" json:"msgFirstModifyTime,omitempty"`                                                                   //首次更新时间
}

func (x *MsgData) Reset() {
	*x = MsgData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_common_model_v2_msg_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MsgData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MsgData) ProtoMessage() {}

func (x *MsgData) ProtoReflect() protoreflect.Message {
	mi := &file_common_model_v2_msg_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MsgData.ProtoReflect.Descriptor instead.
func (*MsgData) Descriptor() ([]byte, []int) {
	return file_common_model_v2_msg_proto_rawDescGZIP(), []int{7}
}

func (x *MsgData) GetSendID() string {
	if x != nil {
		return x.SendID
	}
	return ""
}

func (x *MsgData) GetReceiveID() string {
	if x != nil {
		return x.ReceiveID
	}
	return ""
}

func (x *MsgData) GetGroupID() string {
	if x != nil {
		return x.GroupID
	}
	return ""
}

func (x *MsgData) GetClientMsgID() string {
	if x != nil {
		return x.ClientMsgID
	}
	return ""
}

func (x *MsgData) GetServerMsgID() string {
	if x != nil {
		return x.ServerMsgID
	}
	return ""
}

func (x *MsgData) GetSenderPlatform() string {
	if x != nil {
		return x.SenderPlatform
	}
	return ""
}

func (x *MsgData) GetSenderNickname() string {
	if x != nil {
		return x.SenderNickname
	}
	return ""
}

func (x *MsgData) GetSenderFaceURL() string {
	if x != nil {
		return x.SenderFaceURL
	}
	return ""
}

func (x *MsgData) GetSessionType() int32 {
	if x != nil {
		return x.SessionType
	}
	return 0
}

func (x *MsgData) GetMsgFrom() int32 {
	if x != nil {
		return x.MsgFrom
	}
	return 0
}

func (x *MsgData) GetContentType() int32 {
	if x != nil {
		return x.ContentType
	}
	return 0
}

func (x *MsgData) GetContent() []byte {
	if x != nil {
		return x.Content
	}
	return nil
}

func (x *MsgData) GetSeq() int64 {
	if x != nil {
		return x.Seq
	}
	return 0
}

func (x *MsgData) GetSendTime() int64 {
	if x != nil {
		return x.SendTime
	}
	return 0
}

func (x *MsgData) GetCreateTime() int64 {
	if x != nil {
		return x.CreateTime
	}
	return 0
}

func (x *MsgData) GetStatus() int32 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *MsgData) GetOptions() map[string]bool {
	if x != nil {
		return x.Options
	}
	return nil
}

func (x *MsgData) GetOfflinePushInfo() *OfflinePushInfo {
	if x != nil {
		return x.OfflinePushInfo
	}
	return nil
}

func (x *MsgData) GetAtUserIDList() []string {
	if x != nil {
		return x.AtUserIDList
	}
	return nil
}

func (x *MsgData) GetMsgDataList() []byte {
	if x != nil {
		return x.MsgDataList
	}
	return nil
}

func (x *MsgData) GetAttachedInfo() string {
	if x != nil {
		return x.AttachedInfo
	}
	return ""
}

func (x *MsgData) GetEx() string {
	if x != nil {
		return x.Ex
	}
	return ""
}

func (x *MsgData) GetIsReact() bool {
	if x != nil {
		return x.IsReact
	}
	return false
}

func (x *MsgData) GetIsExternalExtensions() bool {
	if x != nil {
		return x.IsExternalExtensions
	}
	return false
}

func (x *MsgData) GetMsgFirstModifyTime() int64 {
	if x != nil {
		return x.MsgFirstModifyTime
	}
	return 0
}

// 内部消息传输对象
type MessageTransfer struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId   string   `protobuf:"bytes,1,opt,name=userId,proto3" json:"userId,omitempty"`     //用户ID
	TenantId string   `protobuf:"bytes,2,opt,name=tenantId,proto3" json:"tenantId,omitempty"` //租户的id
	MsgDate  *MsgData `protobuf:"bytes,3,opt,name=msgDate,proto3" json:"msgDate,omitempty"`   //消息内容
}

func (x *MessageTransfer) Reset() {
	*x = MessageTransfer{}
	if protoimpl.UnsafeEnabled {
		mi := &file_common_model_v2_msg_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MessageTransfer) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MessageTransfer) ProtoMessage() {}

func (x *MessageTransfer) ProtoReflect() protoreflect.Message {
	mi := &file_common_model_v2_msg_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MessageTransfer.ProtoReflect.Descriptor instead.
func (*MessageTransfer) Descriptor() ([]byte, []int) {
	return file_common_model_v2_msg_proto_rawDescGZIP(), []int{8}
}

func (x *MessageTransfer) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *MessageTransfer) GetTenantId() string {
	if x != nil {
		return x.TenantId
	}
	return ""
}

func (x *MessageTransfer) GetMsgDate() *MsgData {
	if x != nil {
		return x.MsgDate
	}
	return nil
}

// 存储发送消息到mq
type MessageSaveToMq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Messages []*MessageTransfer `protobuf:"bytes,1,rep,name=messages,proto3" json:"messages,omitempty"`
}

func (x *MessageSaveToMq) Reset() {
	*x = MessageSaveToMq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_common_model_v2_msg_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MessageSaveToMq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MessageSaveToMq) ProtoMessage() {}

func (x *MessageSaveToMq) ProtoReflect() protoreflect.Message {
	mi := &file_common_model_v2_msg_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MessageSaveToMq.ProtoReflect.Descriptor instead.
func (*MessageSaveToMq) Descriptor() ([]byte, []int) {
	return file_common_model_v2_msg_proto_rawDescGZIP(), []int{9}
}

func (x *MessageSaveToMq) GetMessages() []*MessageTransfer {
	if x != nil {
		return x.Messages
	}
	return nil
}

var File_common_model_v2_msg_proto protoreflect.FileDescriptor

var file_common_model_v2_msg_proto_rawDesc = []byte{
	0x0a, 0x19, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2f, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2f, 0x76,
	0x32, 0x2f, 0x6d, 0x73, 0x67, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x13, 0x61, 0x70, 0x69,
	0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x76, 0x32,
	0x1a, 0x17, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x2f, 0x76, 0x61, 0x6c, 0x69, 0x64,
	0x61, 0x74, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xda, 0x01, 0x0a, 0x06, 0x4d, 0x73,
	0x67, 0x52, 0x65, 0x71, 0x12, 0x3f, 0x0a, 0x0a, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x66, 0x69,
	0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1f, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x63,
	0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x76, 0x32, 0x2e, 0x49,
	0x64, 0x65, 0x6e, 0x74, 0x69, 0x66, 0x69, 0x65, 0x72, 0x52, 0x0a, 0x69, 0x64, 0x65, 0x6e, 0x74,
	0x69, 0x66, 0x69, 0x65, 0x72, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x1f, 0x0a, 0x06, 0x73,
	0x65, 0x6e, 0x64, 0x49, 0x44, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x42, 0x07, 0xfa, 0x42, 0x04,
	0x72, 0x02, 0x10, 0x01, 0x52, 0x06, 0x73, 0x65, 0x6e, 0x64, 0x49, 0x44, 0x12, 0x21, 0x0a, 0x07,
	0x74, 0x72, 0x61, 0x63, 0x6b, 0x49, 0x44, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x42, 0x07, 0xfa,
	0x42, 0x04, 0x72, 0x02, 0x10, 0x01, 0x52, 0x07, 0x74, 0x72, 0x61, 0x63, 0x6b, 0x49, 0x44, 0x12,
	0x21, 0x0a, 0x07, 0x6d, 0x73, 0x67, 0x49, 0x6e, 0x63, 0x72, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09,
	0x42, 0x07, 0xfa, 0x42, 0x04, 0x72, 0x02, 0x10, 0x01, 0x52, 0x07, 0x6d, 0x73, 0x67, 0x49, 0x6e,
	0x63, 0x72, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0c,
	0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0xa3, 0x02, 0x0a, 0x08, 0x4d, 0x73, 0x67, 0x52, 0x65,
	0x70, 0x6c, 0x79, 0x12, 0x3f, 0x0a, 0x0a, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x66, 0x69, 0x65,
	0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1f, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x63, 0x6f,
	0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x76, 0x32, 0x2e, 0x49, 0x64,
	0x65, 0x6e, 0x74, 0x69, 0x66, 0x69, 0x65, 0x72, 0x52, 0x0a, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69,
	0x66, 0x69, 0x65, 0x72, 0x12, 0x18, 0x0a, 0x07, 0x74, 0x72, 0x61, 0x63, 0x6b, 0x49, 0x44, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x74, 0x72, 0x61, 0x63, 0x6b, 0x49, 0x44, 0x12, 0x18,
	0x0a, 0x07, 0x6d, 0x73, 0x67, 0x49, 0x6e, 0x63, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x07, 0x6d, 0x73, 0x67, 0x49, 0x6e, 0x63, 0x72, 0x12, 0x30, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1c, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x63, 0x6f, 0x6d,
	0x6d, 0x6f, 0x6e, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x76, 0x32, 0x2e, 0x52, 0x65, 0x73,
	0x43, 0x6f, 0x64, 0x65, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x73,
	0x67, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6d, 0x73, 0x67, 0x12, 0x16, 0x0a, 0x06,
	0x72, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x65,
	0x61, 0x73, 0x6f, 0x6e, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x07, 0x20, 0x01,
	0x28, 0x0c, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x12, 0x20, 0x0a, 0x0b, 0x73, 0x65, 0x72, 0x76,
	0x65, 0x72, 0x4d, 0x73, 0x67, 0x49, 0x64, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x73,
	0x65, 0x72, 0x76, 0x65, 0x72, 0x4d, 0x73, 0x67, 0x49, 0x64, 0x12, 0x10, 0x0a, 0x03, 0x73, 0x65,
	0x71, 0x18, 0x09, 0x20, 0x01, 0x28, 0x03, 0x52, 0x03, 0x73, 0x65, 0x71, 0x22, 0x42, 0x0a, 0x0c,
	0x47, 0x65, 0x74, 0x4d, 0x61, 0x78, 0x53, 0x65, 0x71, 0x4d, 0x73, 0x67, 0x12, 0x20, 0x0a, 0x0b,
	0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x0b, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x12, 0x10,
	0x0a, 0x03, 0x75, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x75, 0x69, 0x64,
	0x22, 0x5b, 0x0a, 0x0c, 0x52, 0x65, 0x73, 0x4d, 0x61, 0x78, 0x53, 0x65, 0x71, 0x4d, 0x73, 0x67,
	0x12, 0x20, 0x0a, 0x0b, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0b, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x54, 0x79,
	0x70, 0x65, 0x12, 0x17, 0x0a, 0x07, 0x6d, 0x61, 0x78, 0x5f, 0x73, 0x65, 0x71, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x06, 0x6d, 0x61, 0x78, 0x53, 0x65, 0x71, 0x12, 0x10, 0x0a, 0x03, 0x75,
	0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x75, 0x69, 0x64, 0x22, 0x78, 0x0a,
	0x0a, 0x50, 0x75, 0x6c, 0x6c, 0x69, 0x6e, 0x67, 0x4d, 0x73, 0x67, 0x12, 0x20, 0x0a, 0x0b, 0x73,
	0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x0b, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x12, 0x18, 0x0a,
	0x07, 0x6d, 0x73, 0x67, 0x54, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07,
	0x6d, 0x73, 0x67, 0x54, 0x79, 0x70, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x69, 0x64, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x75, 0x69, 0x64, 0x12, 0x1c, 0x0a, 0x04, 0x73, 0x65, 0x71,
	0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x03, 0x42, 0x08, 0xfa, 0x42, 0x05, 0x92, 0x01, 0x02, 0x08,
	0x01, 0x52, 0x04, 0x73, 0x65, 0x71, 0x73, 0x22, 0xac, 0x01, 0x0a, 0x0d, 0x52, 0x65, 0x73, 0x50,
	0x75, 0x6c, 0x6c, 0x69, 0x6e, 0x67, 0x4d, 0x73, 0x67, 0x12, 0x20, 0x0a, 0x0b, 0x73, 0x65, 0x73,
	0x73, 0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0b,
	0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x75,
	0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x75, 0x69, 0x64, 0x12, 0x17, 0x0a,
	0x07, 0x6d, 0x69, 0x6e, 0x5f, 0x73, 0x65, 0x71, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06,
	0x6d, 0x69, 0x6e, 0x53, 0x65, 0x71, 0x12, 0x38, 0x0a, 0x08, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x73, 0x18, 0x05, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x63,
	0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x76, 0x32, 0x2e, 0x4d,
	0x73, 0x67, 0x44, 0x61, 0x74, 0x61, 0x52, 0x08, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73,
	0x12, 0x14, 0x0a, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x22, 0x95, 0x01, 0x0a, 0x0f, 0x4f, 0x66, 0x66, 0x6c, 0x69,
	0x6e, 0x65, 0x50, 0x75, 0x73, 0x68, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x69,
	0x74, 0x6c, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65,
	0x12, 0x12, 0x0a, 0x04, 0x64, 0x65, 0x73, 0x63, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x64, 0x65, 0x73, 0x63, 0x12, 0x0e, 0x0a, 0x02, 0x65, 0x78, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x02, 0x65, 0x78, 0x12, 0x22, 0x0a, 0x0c, 0x69, 0x4f, 0x53, 0x50, 0x75, 0x73, 0x68, 0x53,
	0x6f, 0x75, 0x6e, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x69, 0x4f, 0x53, 0x50,
	0x75, 0x73, 0x68, 0x53, 0x6f, 0x75, 0x6e, 0x64, 0x12, 0x24, 0x0a, 0x0d, 0x69, 0x4f, 0x53, 0x42,
	0x61, 0x64, 0x67, 0x65, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x0d, 0x69, 0x4f, 0x53, 0x42, 0x61, 0x64, 0x67, 0x65, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x22, 0xc3,
	0x07, 0x0a, 0x07, 0x4d, 0x73, 0x67, 0x44, 0x61, 0x74, 0x61, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x65,
	0x6e, 0x64, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x65, 0x6e, 0x64,
	0x49, 0x44, 0x12, 0x1c, 0x0a, 0x09, 0x72, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x49, 0x44, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x72, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x49, 0x44,
	0x12, 0x18, 0x0a, 0x07, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x44, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x07, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x44, 0x12, 0x20, 0x0a, 0x0b, 0x63, 0x6c,
	0x69, 0x65, 0x6e, 0x74, 0x4d, 0x73, 0x67, 0x49, 0x44, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0b, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x4d, 0x73, 0x67, 0x49, 0x44, 0x12, 0x20, 0x0a, 0x0b,
	0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x4d, 0x73, 0x67, 0x49, 0x44, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0b, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x4d, 0x73, 0x67, 0x49, 0x44, 0x12, 0x26,
	0x0a, 0x0e, 0x73, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x50, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d,
	0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x73, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x50, 0x6c,
	0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x12, 0x26, 0x0a, 0x0e, 0x73, 0x65, 0x6e, 0x64, 0x65, 0x72,
	0x4e, 0x69, 0x63, 0x6b, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e,
	0x73, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x4e, 0x69, 0x63, 0x6b, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x24,
	0x0a, 0x0d, 0x73, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x46, 0x61, 0x63, 0x65, 0x55, 0x52, 0x4c, 0x18,
	0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x73, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x46, 0x61, 0x63,
	0x65, 0x55, 0x52, 0x4c, 0x12, 0x20, 0x0a, 0x0b, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x54,
	0x79, 0x70, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0b, 0x73, 0x65, 0x73, 0x73, 0x69,
	0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x73, 0x67, 0x46, 0x72, 0x6f,
	0x6d, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x6d, 0x73, 0x67, 0x46, 0x72, 0x6f, 0x6d,
	0x12, 0x20, 0x0a, 0x0b, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x18,
	0x0b, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0b, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x54, 0x79,
	0x70, 0x65, 0x12, 0x21, 0x0a, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x18, 0x0c, 0x20,
	0x01, 0x28, 0x0c, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x7a, 0x02, 0x10, 0x01, 0x52, 0x07, 0x63, 0x6f,
	0x6e, 0x74, 0x65, 0x6e, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x73, 0x65, 0x71, 0x18, 0x0e, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x03, 0x73, 0x65, 0x71, 0x12, 0x1a, 0x0a, 0x08, 0x73, 0x65, 0x6e, 0x64, 0x54,
	0x69, 0x6d, 0x65, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x73, 0x65, 0x6e, 0x64, 0x54,
	0x69, 0x6d, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d,
	0x65, 0x18, 0x10, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54,
	0x69, 0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x11, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x43, 0x0a, 0x07, 0x6f,
	0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x12, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x29, 0x2e, 0x61,
	0x70, 0x69, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e,
	0x76, 0x32, 0x2e, 0x4d, 0x73, 0x67, 0x44, 0x61, 0x74, 0x61, 0x2e, 0x4f, 0x70, 0x74, 0x69, 0x6f,
	0x6e, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x07, 0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73,
	0x12, 0x4e, 0x0a, 0x0f, 0x6f, 0x66, 0x66, 0x6c, 0x69, 0x6e, 0x65, 0x50, 0x75, 0x73, 0x68, 0x49,
	0x6e, 0x66, 0x6f, 0x18, 0x13, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x61, 0x70, 0x69, 0x2e,
	0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x76, 0x32, 0x2e,
	0x4f, 0x66, 0x66, 0x6c, 0x69, 0x6e, 0x65, 0x50, 0x75, 0x73, 0x68, 0x49, 0x6e, 0x66, 0x6f, 0x52,
	0x0f, 0x6f, 0x66, 0x66, 0x6c, 0x69, 0x6e, 0x65, 0x50, 0x75, 0x73, 0x68, 0x49, 0x6e, 0x66, 0x6f,
	0x12, 0x22, 0x0a, 0x0c, 0x61, 0x74, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x4c, 0x69, 0x73, 0x74,
	0x18, 0x14, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0c, 0x61, 0x74, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44,
	0x4c, 0x69, 0x73, 0x74, 0x12, 0x20, 0x0a, 0x0b, 0x6d, 0x73, 0x67, 0x44, 0x61, 0x74, 0x61, 0x4c,
	0x69, 0x73, 0x74, 0x18, 0x15, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0b, 0x6d, 0x73, 0x67, 0x44, 0x61,
	0x74, 0x61, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x22, 0x0a, 0x0c, 0x61, 0x74, 0x74, 0x61, 0x63, 0x68,
	0x65, 0x64, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x16, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x61, 0x74,
	0x74, 0x61, 0x63, 0x68, 0x65, 0x64, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x0e, 0x0a, 0x02, 0x65, 0x78,
	0x18, 0x17, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x65, 0x78, 0x12, 0x18, 0x0a, 0x07, 0x69, 0x73,
	0x52, 0x65, 0x61, 0x63, 0x74, 0x18, 0x28, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x69, 0x73, 0x52,
	0x65, 0x61, 0x63, 0x74, 0x12, 0x32, 0x0a, 0x14, 0x69, 0x73, 0x45, 0x78, 0x74, 0x65, 0x72, 0x6e,
	0x61, 0x6c, 0x45, 0x78, 0x74, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x29, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x14, 0x69, 0x73, 0x45, 0x78, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x45, 0x78,
	0x74, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x2e, 0x0a, 0x12, 0x6d, 0x73, 0x67, 0x46,
	0x69, 0x72, 0x73, 0x74, 0x4d, 0x6f, 0x64, 0x69, 0x66, 0x79, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x2a,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x12, 0x6d, 0x73, 0x67, 0x46, 0x69, 0x72, 0x73, 0x74, 0x4d, 0x6f,
	0x64, 0x69, 0x66, 0x79, 0x54, 0x69, 0x6d, 0x65, 0x1a, 0x3a, 0x0a, 0x0c, 0x4f, 0x70, 0x74, 0x69,
	0x6f, 0x6e, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61,
	0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65,
	0x3a, 0x02, 0x38, 0x01, 0x22, 0x7d, 0x0a, 0x0f, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x54,
	0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x12, 0x16, 0x0a, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12,
	0x1a, 0x0a, 0x08, 0x74, 0x65, 0x6e, 0x61, 0x6e, 0x74, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x08, 0x74, 0x65, 0x6e, 0x61, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x36, 0x0a, 0x07, 0x6d,
	0x73, 0x67, 0x44, 0x61, 0x74, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x61,
	0x70, 0x69, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e,
	0x76, 0x32, 0x2e, 0x4d, 0x73, 0x67, 0x44, 0x61, 0x74, 0x61, 0x52, 0x07, 0x6d, 0x73, 0x67, 0x44,
	0x61, 0x74, 0x65, 0x22, 0x53, 0x0a, 0x0f, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x53, 0x61,
	0x76, 0x65, 0x54, 0x6f, 0x4d, 0x71, 0x12, 0x40, 0x0a, 0x08, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x63,
	0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x76, 0x32, 0x2e, 0x4d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x52, 0x08,
	0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x2a, 0xaf, 0x01, 0x0a, 0x0a, 0x49, 0x64, 0x65,
	0x6e, 0x74, 0x69, 0x66, 0x69, 0x65, 0x72, 0x12, 0x0d, 0x0a, 0x09, 0x47, 0x65, 0x74, 0x4d, 0x61,
	0x78, 0x53, 0x65, 0x71, 0x10, 0x00, 0x12, 0x0b, 0x0a, 0x07, 0x53, 0x65, 0x6e, 0x64, 0x4d, 0x73,
	0x67, 0x10, 0x01, 0x12, 0x0d, 0x0a, 0x09, 0x53, 0x69, 0x67, 0x6e, 0x61, 0x6c, 0x4d, 0x73, 0x67,
	0x10, 0x02, 0x12, 0x0b, 0x0a, 0x07, 0x50, 0x75, 0x6c, 0x6c, 0x4d, 0x73, 0x67, 0x10, 0x03, 0x12,
	0x11, 0x0a, 0x0d, 0x4b, 0x69, 0x63, 0x6b, 0x4f, 0x6e, 0x6c, 0x69, 0x6e, 0x65, 0x4d, 0x73, 0x67,
	0x10, 0x04, 0x12, 0x0f, 0x0a, 0x0b, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x4f, 0x75, 0x74, 0x4d, 0x73,
	0x67, 0x10, 0x05, 0x12, 0x17, 0x0a, 0x13, 0x53, 0x65, 0x74, 0x42, 0x61, 0x63, 0x6b, 0x67, 0x72,
	0x6f, 0x75, 0x6e, 0x64, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x10, 0x06, 0x12, 0x0f, 0x0a, 0x0b,
	0x53, 0x65, 0x74, 0x4c, 0x61, 0x6e, 0x67, 0x75, 0x61, 0x67, 0x65, 0x10, 0x07, 0x12, 0x0b, 0x0a,
	0x07, 0x50, 0x75, 0x73, 0x68, 0x4d, 0x73, 0x67, 0x10, 0x08, 0x12, 0x0e, 0x0a, 0x0a, 0x50, 0x75,
	0x73, 0x68, 0x41, 0x63, 0x6b, 0x4d, 0x73, 0x67, 0x10, 0x09, 0x2a, 0x5e, 0x0a, 0x07, 0x52, 0x65,
	0x73, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x0b, 0x0a, 0x07, 0x53, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73,
	0x10, 0x00, 0x12, 0x0d, 0x0a, 0x09, 0x44, 0x65, 0x63, 0x6f, 0x64, 0x65, 0x45, 0x72, 0x72, 0x10,
	0x01, 0x12, 0x13, 0x0a, 0x0f, 0x41, 0x72, 0x67, 0x73, 0x56, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74,
	0x65, 0x45, 0x72, 0x72, 0x10, 0x02, 0x12, 0x0b, 0x0a, 0x07, 0x53, 0x65, 0x6e, 0x64, 0x45, 0x72,
	0x72, 0x10, 0x03, 0x12, 0x15, 0x0a, 0x11, 0x53, 0x65, 0x6e, 0x64, 0x52, 0x65, 0x63, 0x65, 0x69,
	0x76, 0x65, 0x72, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x10, 0x04, 0x2a, 0x66, 0x0a, 0x0b, 0x53, 0x65,
	0x73, 0x73, 0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x12, 0x12, 0x0a, 0x0e, 0x53, 0x69, 0x6e,
	0x67, 0x6c, 0x65, 0x43, 0x68, 0x61, 0x74, 0x54, 0x79, 0x70, 0x65, 0x10, 0x00, 0x12, 0x11, 0x0a,
	0x0d, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x43, 0x68, 0x61, 0x74, 0x54, 0x79, 0x70, 0x65, 0x10, 0x01,
	0x12, 0x16, 0x0a, 0x12, 0x53, 0x75, 0x70, 0x65, 0x72, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x43, 0x68,
	0x61, 0x74, 0x54, 0x79, 0x70, 0x65, 0x10, 0x02, 0x12, 0x18, 0x0a, 0x14, 0x4e, 0x6f, 0x74, 0x69,
	0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x68, 0x61, 0x74, 0x54, 0x79, 0x70, 0x65,
	0x10, 0x03, 0x42, 0x4f, 0x0a, 0x13, 0x61, 0x70, 0x69, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e,
	0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x76, 0x32, 0x50, 0x01, 0x5a, 0x36, 0x67, 0x69, 0x74,
	0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x73, 0x70, 0x61, 0x72, 0x6b, 0x2d, 0x63, 0x6f,
	0x6d, 0x6d, 0x2f, 0x73, 0x70, 0x61, 0x72, 0x6b, 0x2d, 0x61, 0x70, 0x69, 0x2f, 0x61, 0x70, 0x69,
	0x2f, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2f, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2f, 0x76, 0x32,
	0x3b, 0x76, 0x32, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_common_model_v2_msg_proto_rawDescOnce sync.Once
	file_common_model_v2_msg_proto_rawDescData = file_common_model_v2_msg_proto_rawDesc
)

func file_common_model_v2_msg_proto_rawDescGZIP() []byte {
	file_common_model_v2_msg_proto_rawDescOnce.Do(func() {
		file_common_model_v2_msg_proto_rawDescData = protoimpl.X.CompressGZIP(file_common_model_v2_msg_proto_rawDescData)
	})
	return file_common_model_v2_msg_proto_rawDescData
}

var file_common_model_v2_msg_proto_enumTypes = make([]protoimpl.EnumInfo, 3)
var file_common_model_v2_msg_proto_msgTypes = make([]protoimpl.MessageInfo, 11)
var file_common_model_v2_msg_proto_goTypes = []any{
	(Identifier)(0),         // 0: api.common.model.v2.Identifier
	(ResCode)(0),            // 1: api.common.model.v2.ResCode
	(SessionType)(0),        // 2: api.common.model.v2.SessionType
	(*MsgReq)(nil),          // 3: api.common.model.v2.MsgReq
	(*MsgReply)(nil),        // 4: api.common.model.v2.MsgReply
	(*GetMaxSeqMsg)(nil),    // 5: api.common.model.v2.GetMaxSeqMsg
	(*ResMaxSeqMsg)(nil),    // 6: api.common.model.v2.ResMaxSeqMsg
	(*PullingMsg)(nil),      // 7: api.common.model.v2.PullingMsg
	(*ResPullingMsg)(nil),   // 8: api.common.model.v2.ResPullingMsg
	(*OfflinePushInfo)(nil), // 9: api.common.model.v2.OfflinePushInfo
	(*MsgData)(nil),         // 10: api.common.model.v2.MsgData
	(*MessageTransfer)(nil), // 11: api.common.model.v2.MessageTransfer
	(*MessageSaveToMq)(nil), // 12: api.common.model.v2.MessageSaveToMq
	nil,                     // 13: api.common.model.v2.MsgData.OptionsEntry
}
var file_common_model_v2_msg_proto_depIdxs = []int32{
	0,  // 0: api.common.model.v2.MsgReq.identifier:type_name -> api.common.model.v2.Identifier
	0,  // 1: api.common.model.v2.MsgReply.identifier:type_name -> api.common.model.v2.Identifier
	1,  // 2: api.common.model.v2.MsgReply.code:type_name -> api.common.model.v2.ResCode
	10, // 3: api.common.model.v2.ResPullingMsg.messages:type_name -> api.common.model.v2.MsgData
	13, // 4: api.common.model.v2.MsgData.options:type_name -> api.common.model.v2.MsgData.OptionsEntry
	9,  // 5: api.common.model.v2.MsgData.offlinePushInfo:type_name -> api.common.model.v2.OfflinePushInfo
	10, // 6: api.common.model.v2.MessageTransfer.msgDate:type_name -> api.common.model.v2.MsgData
	11, // 7: api.common.model.v2.MessageSaveToMq.messages:type_name -> api.common.model.v2.MessageTransfer
	8,  // [8:8] is the sub-list for method output_type
	8,  // [8:8] is the sub-list for method input_type
	8,  // [8:8] is the sub-list for extension type_name
	8,  // [8:8] is the sub-list for extension extendee
	0,  // [0:8] is the sub-list for field type_name
}

func init() { file_common_model_v2_msg_proto_init() }
func file_common_model_v2_msg_proto_init() {
	if File_common_model_v2_msg_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_common_model_v2_msg_proto_msgTypes[0].Exporter = func(v any, i int) any {
			switch v := v.(*MsgReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_common_model_v2_msg_proto_msgTypes[1].Exporter = func(v any, i int) any {
			switch v := v.(*MsgReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_common_model_v2_msg_proto_msgTypes[2].Exporter = func(v any, i int) any {
			switch v := v.(*GetMaxSeqMsg); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_common_model_v2_msg_proto_msgTypes[3].Exporter = func(v any, i int) any {
			switch v := v.(*ResMaxSeqMsg); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_common_model_v2_msg_proto_msgTypes[4].Exporter = func(v any, i int) any {
			switch v := v.(*PullingMsg); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_common_model_v2_msg_proto_msgTypes[5].Exporter = func(v any, i int) any {
			switch v := v.(*ResPullingMsg); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_common_model_v2_msg_proto_msgTypes[6].Exporter = func(v any, i int) any {
			switch v := v.(*OfflinePushInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_common_model_v2_msg_proto_msgTypes[7].Exporter = func(v any, i int) any {
			switch v := v.(*MsgData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_common_model_v2_msg_proto_msgTypes[8].Exporter = func(v any, i int) any {
			switch v := v.(*MessageTransfer); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_common_model_v2_msg_proto_msgTypes[9].Exporter = func(v any, i int) any {
			switch v := v.(*MessageSaveToMq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_common_model_v2_msg_proto_rawDesc,
			NumEnums:      3,
			NumMessages:   11,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_common_model_v2_msg_proto_goTypes,
		DependencyIndexes: file_common_model_v2_msg_proto_depIdxs,
		EnumInfos:         file_common_model_v2_msg_proto_enumTypes,
		MessageInfos:      file_common_model_v2_msg_proto_msgTypes,
	}.Build()
	File_common_model_v2_msg_proto = out.File
	file_common_model_v2_msg_proto_rawDesc = nil
	file_common_model_v2_msg_proto_goTypes = nil
	file_common_model_v2_msg_proto_depIdxs = nil
}
