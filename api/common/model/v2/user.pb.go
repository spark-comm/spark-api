// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.31.0
// 	protoc        v4.25.0
// source: common/model/v2/user.proto

package v2

import (
	_ "github.com/envoyproxy/protoc-gen-validate/validate"
	v2 "github.com/spark-comm/spark-api/api/common/enum/v2"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// 同步的用户信息模型
type SyncUser struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id              string         `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`                                                         // profile id 和 userId 等价
	FaceURL         string         `protobuf:"bytes,2,opt,name=faceURL,proto3" json:"faceURL,omitempty"`                                               // 头像地址
	Nickname        string         `protobuf:"bytes,3,opt,name=nickname,proto3" json:"nickname,omitempty"`                                             // 昵称
	Account         string         `protobuf:"bytes,4,opt,name=account,proto3" json:"account,omitempty"`                                               // 账号
	Code            string         `protobuf:"bytes,5,opt,name=code,proto3" json:"code,omitempty"`                                                     // 用户code
	Phone           string         `protobuf:"bytes,6,opt,name=phone,proto3" json:"phone,omitempty"`                                                   // 电话
	Gender          v2.Gender      `protobuf:"varint,7,opt,name=gender,proto3,enum=api.common.enum.v2.Gender" json:"gender,omitempty"`                 // 性别
	ShareCode       string         `protobuf:"bytes,8,opt,name=shareCode,proto3" json:"shareCode,omitempty"`                                           // 分享码
	Email           string         `protobuf:"bytes,9,opt,name=email,proto3" json:"email,omitempty"`                                                   // 邮箱
	Birth           int64          `protobuf:"varint,10,opt,name=birth,proto3" json:"birth,omitempty"`                                                 // 生日
	FullName        string         `protobuf:"bytes,11,opt,name=fullName,proto3" json:"fullName,omitempty"`                                            // 真实名称
	PersonId        string         `protobuf:"bytes,12,opt,name=personId,proto3" json:"personId,omitempty"`                                            // 身份证号
	CreatedAt       int64          `protobuf:"varint,13,opt,name=createdAt,proto3" json:"createdAt,omitempty"`                                         // 创建时间
	UpdatedAt       int64          `protobuf:"varint,14,opt,name=updatedAt,proto3" json:"updatedAt,omitempty"`                                         // 更新时间
	DeletedAt       int64          `protobuf:"varint,15,opt,name=deletedAt,proto3" json:"deletedAt,omitempty"`                                         // 删除时间
	AreaCode        int32          `protobuf:"varint,16,opt,name=areaCode,proto3" json:"areaCode,omitempty"`                                           //手机区号
	Status          int32          `protobuf:"varint,17,opt,name=status,proto3" json:"status,omitempty"`                                               // 账户状态 1 -> 正常,2->冻结
	TenantId        string         `protobuf:"bytes,18,opt,name=tenantId,proto3" json:"tenantId,omitempty"`                                            // 租户id
	NodeId          string         `protobuf:"bytes,19,opt,name=nodeId,proto3" json:"nodeId,omitempty"`                                                //用户注册节点
	LastLoginNodeId string         `protobuf:"bytes,20,opt,name=lastLoginNodeId,proto3" json:"lastLoginNodeId,omitempty"`                              //上次登录节点
	Password        string         `protobuf:"bytes,21,opt,name=password,proto3" json:"password,omitempty"`                                            // 密码
	IsGenerate      int32          `protobuf:"varint,22,opt,name=isGenerate,proto3" json:"isGenerate,omitempty"`                                       //是否生成
	FromUserid      string         `protobuf:"bytes,23,opt,name=fromUserid,proto3" json:"fromUserid,omitempty"`                                        // 邀请人id
	AccountType     v2.AccountType `protobuf:"varint,24,opt,name=accountType,proto3,enum=api.common.enum.v2.AccountType" json:"accountType,omitempty"` // 账户类型
	CenterUserId    string         `protobuf:"bytes,25,opt,name=centerUserId,proto3" json:"centerUserId,omitempty"`                                    // 中心用户id
}

func (x *SyncUser) Reset() {
	*x = SyncUser{}
	if protoimpl.UnsafeEnabled {
		mi := &file_common_model_v2_user_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SyncUser) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SyncUser) ProtoMessage() {}

func (x *SyncUser) ProtoReflect() protoreflect.Message {
	mi := &file_common_model_v2_user_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SyncUser.ProtoReflect.Descriptor instead.
func (*SyncUser) Descriptor() ([]byte, []int) {
	return file_common_model_v2_user_proto_rawDescGZIP(), []int{0}
}

func (x *SyncUser) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *SyncUser) GetFaceURL() string {
	if x != nil {
		return x.FaceURL
	}
	return ""
}

func (x *SyncUser) GetNickname() string {
	if x != nil {
		return x.Nickname
	}
	return ""
}

func (x *SyncUser) GetAccount() string {
	if x != nil {
		return x.Account
	}
	return ""
}

func (x *SyncUser) GetCode() string {
	if x != nil {
		return x.Code
	}
	return ""
}

func (x *SyncUser) GetPhone() string {
	if x != nil {
		return x.Phone
	}
	return ""
}

func (x *SyncUser) GetGender() v2.Gender {
	if x != nil {
		return x.Gender
	}
	return v2.Gender(0)
}

func (x *SyncUser) GetShareCode() string {
	if x != nil {
		return x.ShareCode
	}
	return ""
}

func (x *SyncUser) GetEmail() string {
	if x != nil {
		return x.Email
	}
	return ""
}

func (x *SyncUser) GetBirth() int64 {
	if x != nil {
		return x.Birth
	}
	return 0
}

func (x *SyncUser) GetFullName() string {
	if x != nil {
		return x.FullName
	}
	return ""
}

func (x *SyncUser) GetPersonId() string {
	if x != nil {
		return x.PersonId
	}
	return ""
}

func (x *SyncUser) GetCreatedAt() int64 {
	if x != nil {
		return x.CreatedAt
	}
	return 0
}

func (x *SyncUser) GetUpdatedAt() int64 {
	if x != nil {
		return x.UpdatedAt
	}
	return 0
}

func (x *SyncUser) GetDeletedAt() int64 {
	if x != nil {
		return x.DeletedAt
	}
	return 0
}

func (x *SyncUser) GetAreaCode() int32 {
	if x != nil {
		return x.AreaCode
	}
	return 0
}

func (x *SyncUser) GetStatus() int32 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *SyncUser) GetTenantId() string {
	if x != nil {
		return x.TenantId
	}
	return ""
}

func (x *SyncUser) GetNodeId() string {
	if x != nil {
		return x.NodeId
	}
	return ""
}

func (x *SyncUser) GetLastLoginNodeId() string {
	if x != nil {
		return x.LastLoginNodeId
	}
	return ""
}

func (x *SyncUser) GetPassword() string {
	if x != nil {
		return x.Password
	}
	return ""
}

func (x *SyncUser) GetIsGenerate() int32 {
	if x != nil {
		return x.IsGenerate
	}
	return 0
}

func (x *SyncUser) GetFromUserid() string {
	if x != nil {
		return x.FromUserid
	}
	return ""
}

func (x *SyncUser) GetAccountType() v2.AccountType {
	if x != nil {
		return x.AccountType
	}
	return v2.AccountType(0)
}

func (x *SyncUser) GetCenterUserId() string {
	if x != nil {
		return x.CenterUserId
	}
	return ""
}

var File_common_model_v2_user_proto protoreflect.FileDescriptor

var file_common_model_v2_user_proto_rawDesc = []byte{
	0x0a, 0x1a, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2f, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2f, 0x76,
	0x32, 0x2f, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x13, 0x61, 0x70,
	0x69, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x76,
	0x32, 0x1a, 0x17, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x2f, 0x76, 0x61, 0x6c, 0x69,
	0x64, 0x61, 0x74, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1a, 0x63, 0x6f, 0x6d, 0x6d,
	0x6f, 0x6e, 0x2f, 0x65, 0x6e, 0x75, 0x6d, 0x2f, 0x76, 0x32, 0x2f, 0x65, 0x6e, 0x75, 0x6d, 0x73,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xf9, 0x05, 0x0a, 0x08, 0x53, 0x79, 0x6e, 0x63, 0x55,
	0x73, 0x65, 0x72, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x02, 0x69, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x66, 0x61, 0x63, 0x65, 0x55, 0x52, 0x4c, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x66, 0x61, 0x63, 0x65, 0x55, 0x52, 0x4c, 0x12, 0x1a, 0x0a,
	0x08, 0x6e, 0x69, 0x63, 0x6b, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x08, 0x6e, 0x69, 0x63, 0x6b, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x61, 0x63, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x61, 0x63, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x70, 0x68, 0x6f, 0x6e, 0x65,
	0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x12, 0x32, 0x0a,
	0x06, 0x67, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1a, 0x2e,
	0x61, 0x70, 0x69, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x65, 0x6e, 0x75, 0x6d, 0x2e,
	0x76, 0x32, 0x2e, 0x47, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x52, 0x06, 0x67, 0x65, 0x6e, 0x64, 0x65,
	0x72, 0x12, 0x1c, 0x0a, 0x09, 0x73, 0x68, 0x61, 0x72, 0x65, 0x43, 0x6f, 0x64, 0x65, 0x18, 0x08,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x68, 0x61, 0x72, 0x65, 0x43, 0x6f, 0x64, 0x65, 0x12,
	0x14, 0x0a, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05,
	0x65, 0x6d, 0x61, 0x69, 0x6c, 0x12, 0x14, 0x0a, 0x05, 0x62, 0x69, 0x72, 0x74, 0x68, 0x18, 0x0a,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x62, 0x69, 0x72, 0x74, 0x68, 0x12, 0x1a, 0x0a, 0x08, 0x66,
	0x75, 0x6c, 0x6c, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x66,
	0x75, 0x6c, 0x6c, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x65, 0x72, 0x73, 0x6f,
	0x6e, 0x49, 0x64, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x70, 0x65, 0x72, 0x73, 0x6f,
	0x6e, 0x49, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74,
	0x18, 0x0d, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41,
	0x74, 0x12, 0x1c, 0x0a, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x18, 0x0e,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12,
	0x1c, 0x0a, 0x09, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x41, 0x74, 0x18, 0x0f, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x09, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x1a, 0x0a,
	0x08, 0x61, 0x72, 0x65, 0x61, 0x43, 0x6f, 0x64, 0x65, 0x18, 0x10, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x08, 0x61, 0x72, 0x65, 0x61, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x18, 0x11, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x12, 0x1a, 0x0a, 0x08, 0x74, 0x65, 0x6e, 0x61, 0x6e, 0x74, 0x49, 0x64, 0x18, 0x12, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x08, 0x74, 0x65, 0x6e, 0x61, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x16, 0x0a,
	0x06, 0x6e, 0x6f, 0x64, 0x65, 0x49, 0x64, 0x18, 0x13, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x6e,
	0x6f, 0x64, 0x65, 0x49, 0x64, 0x12, 0x28, 0x0a, 0x0f, 0x6c, 0x61, 0x73, 0x74, 0x4c, 0x6f, 0x67,
	0x69, 0x6e, 0x4e, 0x6f, 0x64, 0x65, 0x49, 0x64, 0x18, 0x14, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f,
	0x6c, 0x61, 0x73, 0x74, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x4e, 0x6f, 0x64, 0x65, 0x49, 0x64, 0x12,
	0x1a, 0x0a, 0x08, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x18, 0x15, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x08, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x12, 0x1e, 0x0a, 0x0a, 0x69,
	0x73, 0x47, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x65, 0x18, 0x16, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x0a, 0x69, 0x73, 0x47, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x66,
	0x72, 0x6f, 0x6d, 0x55, 0x73, 0x65, 0x72, 0x69, 0x64, 0x18, 0x17, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0a, 0x66, 0x72, 0x6f, 0x6d, 0x55, 0x73, 0x65, 0x72, 0x69, 0x64, 0x12, 0x41, 0x0a, 0x0b, 0x61,
	0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x18, 0x18, 0x20, 0x01, 0x28, 0x0e,
	0x32, 0x1f, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x65, 0x6e,
	0x75, 0x6d, 0x2e, 0x76, 0x32, 0x2e, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x54, 0x79, 0x70,
	0x65, 0x52, 0x0b, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x12, 0x22,
	0x0a, 0x0c, 0x63, 0x65, 0x6e, 0x74, 0x65, 0x72, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x18, 0x19,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x63, 0x65, 0x6e, 0x74, 0x65, 0x72, 0x55, 0x73, 0x65, 0x72,
	0x49, 0x64, 0x42, 0x4f, 0x0a, 0x13, 0x61, 0x70, 0x69, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e,
	0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x76, 0x32, 0x50, 0x01, 0x5a, 0x36, 0x67, 0x69, 0x74,
	0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x73, 0x70, 0x61, 0x72, 0x6b, 0x2d, 0x63, 0x6f,
	0x6d, 0x6d, 0x2f, 0x73, 0x70, 0x61, 0x72, 0x6b, 0x2d, 0x61, 0x70, 0x69, 0x2f, 0x61, 0x70, 0x69,
	0x2f, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2f, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2f, 0x76, 0x32,
	0x3b, 0x76, 0x32, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_common_model_v2_user_proto_rawDescOnce sync.Once
	file_common_model_v2_user_proto_rawDescData = file_common_model_v2_user_proto_rawDesc
)

func file_common_model_v2_user_proto_rawDescGZIP() []byte {
	file_common_model_v2_user_proto_rawDescOnce.Do(func() {
		file_common_model_v2_user_proto_rawDescData = protoimpl.X.CompressGZIP(file_common_model_v2_user_proto_rawDescData)
	})
	return file_common_model_v2_user_proto_rawDescData
}

var file_common_model_v2_user_proto_msgTypes = make([]protoimpl.MessageInfo, 1)
var file_common_model_v2_user_proto_goTypes = []interface{}{
	(*SyncUser)(nil),    // 0: api.common.model.v2.SyncUser
	(v2.Gender)(0),      // 1: api.common.enum.v2.Gender
	(v2.AccountType)(0), // 2: api.common.enum.v2.AccountType
}
var file_common_model_v2_user_proto_depIdxs = []int32{
	1, // 0: api.common.model.v2.SyncUser.gender:type_name -> api.common.enum.v2.Gender
	2, // 1: api.common.model.v2.SyncUser.accountType:type_name -> api.common.enum.v2.AccountType
	2, // [2:2] is the sub-list for method output_type
	2, // [2:2] is the sub-list for method input_type
	2, // [2:2] is the sub-list for extension type_name
	2, // [2:2] is the sub-list for extension extendee
	0, // [0:2] is the sub-list for field type_name
}

func init() { file_common_model_v2_user_proto_init() }
func file_common_model_v2_user_proto_init() {
	if File_common_model_v2_user_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_common_model_v2_user_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SyncUser); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_common_model_v2_user_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   1,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_common_model_v2_user_proto_goTypes,
		DependencyIndexes: file_common_model_v2_user_proto_depIdxs,
		MessageInfos:      file_common_model_v2_user_proto_msgTypes,
	}.Build()
	File_common_model_v2_user_proto = out.File
	file_common_model_v2_user_proto_rawDesc = nil
	file_common_model_v2_user_proto_goTypes = nil
	file_common_model_v2_user_proto_depIdxs = nil
}
