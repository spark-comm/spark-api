// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.31.0
// 	protoc        v4.25.0
// source: common/model/group/v2/group.proto

package v2

import (
	v2 "github.com/spark-comm/spark-api/api/common/net/v2"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// 群信息存在
type GroupInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GroupID                string `protobuf:"bytes,1,opt,name=groupID,proto3" json:"groupID,omitempty"`                                 //群Id
	GroupName              string `protobuf:"bytes,2,opt,name=groupName,proto3" json:"groupName,omitempty"`                             //群昵称
	Notification           string `protobuf:"bytes,3,opt,name=notification,proto3" json:"notification,omitempty"`                       //群公告
	Introduction           string `protobuf:"bytes,4,opt,name=introduction,proto3" json:"introduction,omitempty"`                       //群简介
	FaceURL                string `protobuf:"bytes,5,opt,name=faceURL,proto3" json:"faceURL,omitempty"`                                 //群头像
	OwnerUserID            string `protobuf:"bytes,6,opt,name=ownerUserID,proto3" json:"ownerUserID,omitempty"`                         //群主id
	CreateTime             int64  `protobuf:"varint,7,opt,name=createTime,proto3" json:"createTime,omitempty"`                          //创建时间
	MemberCount            int64  `protobuf:"varint,8,opt,name=memberCount,proto3" json:"memberCount,omitempty"`                        //群用户数
	Ex                     string `protobuf:"bytes,9,opt,name=ex,proto3" json:"ex,omitempty"`                                           //扩展
	Status                 int32  `protobuf:"varint,10,opt,name=status,proto3" json:"status,omitempty"`                                 //群状态
	CreatorUserID          string `protobuf:"bytes,11,opt,name=creatorUserID,proto3" json:"creatorUserID,omitempty"`                    //创建者
	GroupType              int32  `protobuf:"varint,12,opt,name=groupType,proto3" json:"groupType,omitempty"`                           //群类型
	NeedVerification       int32  `protobuf:"varint,13,opt,name=needVerification,proto3" json:"needVerification,omitempty"`             //加群是否需要验证:0需要,1不需要
	LookMemberInfo         int32  `protobuf:"varint,14,opt,name=lookMemberInfo,proto3" json:"lookMemberInfo,omitempty"`                 //支持成员信息查看:0支持,1不支持
	ApplyMemberFriend      int32  `protobuf:"varint,15,opt,name=applyMemberFriend,proto3" json:"applyMemberFriend,omitempty"`           //是否可通过群加好友:0支持,1不支持
	NotificationUpdateTime int64  `protobuf:"varint,16,opt,name=notificationUpdateTime,proto3" json:"notificationUpdateTime,omitempty"` //群公告更新时间
	NotificationUserID     string `protobuf:"bytes,17,opt,name=notificationUserID,proto3" json:"notificationUserID,omitempty"`          //更新公告用户id
	Code                   string `protobuf:"bytes,18,opt,name=code,proto3" json:"code,omitempty"`                                      //群编码,对应前台的群id
	MaxMemberCount         int32  `protobuf:"varint,19,opt,name=maxMemberCount,proto3" json:"maxMemberCount,omitempty"`                 //群的最大用户数
	AttachedInfo           string `protobuf:"bytes,20,opt,name=attachedInfo,proto3" json:"attachedInfo,omitempty"`                      //附加信息
	OnlyManageUpdateName   int32  `protobuf:"varint,21,opt,name=onlyManageUpdateName,proto3" json:"onlyManageUpdateName,omitempty"`     //是否仅管理员或群主能够更新群名称
	IsReal                 int32  `protobuf:"varint,22,opt,name=isReal,proto3" json:"isReal,omitempty"`                                 //是否实名认证，默认否
	IsOpen                 int32  `protobuf:"varint,23,opt,name=isOpen,proto3" json:"isOpen,omitempty"`                                 //是否公开群组,1:开启;2:关闭
	AllowPrivateChat       int32  `protobuf:"varint,24,opt,name=allowPrivateChat,proto3" json:"allowPrivateChat,omitempty"`             //允许成员私聊,1:开启;2:关闭
	IsComplete             int32  `protobuf:"varint,25,opt,name=isComplete,proto3" json:"isComplete,omitempty"`                         //是否完成同步
	OwnerCode              string `protobuf:"bytes,26,opt,name=ownerCode,proto3" json:"ownerCode,omitempty"`                            //群主code
	OwnerNickname          string `protobuf:"bytes,27,opt,name=ownerNickname,proto3" json:"ownerNickname,omitempty"`                    //群主昵称
	CreateCode             string `protobuf:"bytes,28,opt,name=createCode,proto3" json:"createCode,omitempty"`                          //创建者code
	CreateNickname         string `protobuf:"bytes,29,opt,name=createNickname,proto3" json:"createNickname,omitempty"`                  //创建者昵称
	UpdateAt               int64  `protobuf:"varint,30,opt,name=updateAt,proto3" json:"updateAt,omitempty"`                             //更新时间
}

func (x *GroupInfo) Reset() {
	*x = GroupInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_common_model_group_v2_group_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GroupInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GroupInfo) ProtoMessage() {}

func (x *GroupInfo) ProtoReflect() protoreflect.Message {
	mi := &file_common_model_group_v2_group_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GroupInfo.ProtoReflect.Descriptor instead.
func (*GroupInfo) Descriptor() ([]byte, []int) {
	return file_common_model_group_v2_group_proto_rawDescGZIP(), []int{0}
}

func (x *GroupInfo) GetGroupID() string {
	if x != nil {
		return x.GroupID
	}
	return ""
}

func (x *GroupInfo) GetGroupName() string {
	if x != nil {
		return x.GroupName
	}
	return ""
}

func (x *GroupInfo) GetNotification() string {
	if x != nil {
		return x.Notification
	}
	return ""
}

func (x *GroupInfo) GetIntroduction() string {
	if x != nil {
		return x.Introduction
	}
	return ""
}

func (x *GroupInfo) GetFaceURL() string {
	if x != nil {
		return x.FaceURL
	}
	return ""
}

func (x *GroupInfo) GetOwnerUserID() string {
	if x != nil {
		return x.OwnerUserID
	}
	return ""
}

func (x *GroupInfo) GetCreateTime() int64 {
	if x != nil {
		return x.CreateTime
	}
	return 0
}

func (x *GroupInfo) GetMemberCount() int64 {
	if x != nil {
		return x.MemberCount
	}
	return 0
}

func (x *GroupInfo) GetEx() string {
	if x != nil {
		return x.Ex
	}
	return ""
}

func (x *GroupInfo) GetStatus() int32 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *GroupInfo) GetCreatorUserID() string {
	if x != nil {
		return x.CreatorUserID
	}
	return ""
}

func (x *GroupInfo) GetGroupType() int32 {
	if x != nil {
		return x.GroupType
	}
	return 0
}

func (x *GroupInfo) GetNeedVerification() int32 {
	if x != nil {
		return x.NeedVerification
	}
	return 0
}

func (x *GroupInfo) GetLookMemberInfo() int32 {
	if x != nil {
		return x.LookMemberInfo
	}
	return 0
}

func (x *GroupInfo) GetApplyMemberFriend() int32 {
	if x != nil {
		return x.ApplyMemberFriend
	}
	return 0
}

func (x *GroupInfo) GetNotificationUpdateTime() int64 {
	if x != nil {
		return x.NotificationUpdateTime
	}
	return 0
}

func (x *GroupInfo) GetNotificationUserID() string {
	if x != nil {
		return x.NotificationUserID
	}
	return ""
}

func (x *GroupInfo) GetCode() string {
	if x != nil {
		return x.Code
	}
	return ""
}

func (x *GroupInfo) GetMaxMemberCount() int32 {
	if x != nil {
		return x.MaxMemberCount
	}
	return 0
}

func (x *GroupInfo) GetAttachedInfo() string {
	if x != nil {
		return x.AttachedInfo
	}
	return ""
}

func (x *GroupInfo) GetOnlyManageUpdateName() int32 {
	if x != nil {
		return x.OnlyManageUpdateName
	}
	return 0
}

func (x *GroupInfo) GetIsReal() int32 {
	if x != nil {
		return x.IsReal
	}
	return 0
}

func (x *GroupInfo) GetIsOpen() int32 {
	if x != nil {
		return x.IsOpen
	}
	return 0
}

func (x *GroupInfo) GetAllowPrivateChat() int32 {
	if x != nil {
		return x.AllowPrivateChat
	}
	return 0
}

func (x *GroupInfo) GetIsComplete() int32 {
	if x != nil {
		return x.IsComplete
	}
	return 0
}

func (x *GroupInfo) GetOwnerCode() string {
	if x != nil {
		return x.OwnerCode
	}
	return ""
}

func (x *GroupInfo) GetOwnerNickname() string {
	if x != nil {
		return x.OwnerNickname
	}
	return ""
}

func (x *GroupInfo) GetCreateCode() string {
	if x != nil {
		return x.CreateCode
	}
	return ""
}

func (x *GroupInfo) GetCreateNickname() string {
	if x != nil {
		return x.CreateNickname
	}
	return ""
}

func (x *GroupInfo) GetUpdateAt() int64 {
	if x != nil {
		return x.UpdateAt
	}
	return 0
}

type GroupRequestInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GroupID       string `protobuf:"bytes,1,opt,name=groupID,proto3" json:"groupID,omitempty"`              //群ID
	GroupName     string `protobuf:"bytes,2,opt,name=groupName,proto3" json:"groupName,omitempty"`          //群名称
	Notification  string `protobuf:"bytes,3,opt,name=notification,proto3" json:"notification,omitempty"`    //通知
	Introduction  string `protobuf:"bytes,4,opt,name=introduction,proto3" json:"introduction,omitempty"`    // 简介
	GroupFaceURL  string `protobuf:"bytes,5,opt,name=groupFaceURL,proto3" json:"groupFaceURL,omitempty"`    //群头像
	CreateTime    int64  `protobuf:"varint,6,opt,name=createTime,proto3" json:"createTime,omitempty"`       //创建时间
	Status        int32  `protobuf:"varint,7,opt,name=status,proto3" json:"status,omitempty"`               //状态
	CreatorUserID string `protobuf:"bytes,8,opt,name=creatorUserID,proto3" json:"creatorUserID,omitempty"`  //创建者
	GroupType     int32  `protobuf:"varint,9,opt,name=groupType,proto3" json:"groupType,omitempty"`         //群类型
	OwnerUserID   string `protobuf:"bytes,10,opt,name=ownerUserID,proto3" json:"ownerUserID,omitempty"`     //本人id
	MemberCount   int32  `protobuf:"varint,11,opt,name=memberCount,proto3" json:"memberCount,omitempty"`    //群人数
	GroupCode     string `protobuf:"bytes,12,opt,name=groupCode,proto3" json:"groupCode,omitempty"`         //群code码
	UserID        string `protobuf:"bytes,13,opt,name=userID,proto3" json:"userID,omitempty"`               //用户id
	Nickname      string `protobuf:"bytes,14,opt,name=nickname,proto3" json:"nickname,omitempty"`           //昵称
	UserFaceURL   string `protobuf:"bytes,15,opt,name=userFaceURL,proto3" json:"userFaceURL,omitempty"`     //用户头像
	Gender        int32  `protobuf:"varint,16,opt,name=gender,proto3" json:"gender,omitempty"`              //性别
	Code          string `protobuf:"bytes,17,opt,name=code,proto3" json:"code,omitempty"`                   //邀请码
	HandleResult  int32  `protobuf:"varint,18,opt,name=handleResult,proto3" json:"handleResult,omitempty"`  //处理方法
	ReqMsg        string `protobuf:"bytes,19,opt,name=reqMsg,proto3" json:"reqMsg,omitempty"`               //请求消息
	HandledMsg    string `protobuf:"bytes,20,opt,name=handledMsg,proto3" json:"handledMsg,omitempty"`       //处理消息
	ReqTime       int64  `protobuf:"varint,21,opt,name=reqTime,proto3" json:"reqTime,omitempty"`            //请求时间
	HandleUserID  string `protobuf:"bytes,22,opt,name=handleUserID,proto3" json:"handleUserID,omitempty"`   //处理人
	HandledTime   int64  `protobuf:"varint,23,opt,name=handledTime,proto3" json:"handledTime,omitempty"`    //处理时间
	Ex            string `protobuf:"bytes,24,opt,name=ex,proto3" json:"ex,omitempty"`                       //扩展
	AttachedInfo  string `protobuf:"bytes,25,opt,name=attachedInfo,proto3" json:"attachedInfo,omitempty"`   //附加信息
	JoinSource    int32  `protobuf:"varint,26,opt,name=joinSource,proto3" json:"joinSource,omitempty"`      //加入来源
	InviterUserID string `protobuf:"bytes,27,opt,name=inviterUserID,proto3" json:"inviterUserID,omitempty"` //邀请人
}

func (x *GroupRequestInfo) Reset() {
	*x = GroupRequestInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_common_model_group_v2_group_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GroupRequestInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GroupRequestInfo) ProtoMessage() {}

func (x *GroupRequestInfo) ProtoReflect() protoreflect.Message {
	mi := &file_common_model_group_v2_group_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GroupRequestInfo.ProtoReflect.Descriptor instead.
func (*GroupRequestInfo) Descriptor() ([]byte, []int) {
	return file_common_model_group_v2_group_proto_rawDescGZIP(), []int{1}
}

func (x *GroupRequestInfo) GetGroupID() string {
	if x != nil {
		return x.GroupID
	}
	return ""
}

func (x *GroupRequestInfo) GetGroupName() string {
	if x != nil {
		return x.GroupName
	}
	return ""
}

func (x *GroupRequestInfo) GetNotification() string {
	if x != nil {
		return x.Notification
	}
	return ""
}

func (x *GroupRequestInfo) GetIntroduction() string {
	if x != nil {
		return x.Introduction
	}
	return ""
}

func (x *GroupRequestInfo) GetGroupFaceURL() string {
	if x != nil {
		return x.GroupFaceURL
	}
	return ""
}

func (x *GroupRequestInfo) GetCreateTime() int64 {
	if x != nil {
		return x.CreateTime
	}
	return 0
}

func (x *GroupRequestInfo) GetStatus() int32 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *GroupRequestInfo) GetCreatorUserID() string {
	if x != nil {
		return x.CreatorUserID
	}
	return ""
}

func (x *GroupRequestInfo) GetGroupType() int32 {
	if x != nil {
		return x.GroupType
	}
	return 0
}

func (x *GroupRequestInfo) GetOwnerUserID() string {
	if x != nil {
		return x.OwnerUserID
	}
	return ""
}

func (x *GroupRequestInfo) GetMemberCount() int32 {
	if x != nil {
		return x.MemberCount
	}
	return 0
}

func (x *GroupRequestInfo) GetGroupCode() string {
	if x != nil {
		return x.GroupCode
	}
	return ""
}

func (x *GroupRequestInfo) GetUserID() string {
	if x != nil {
		return x.UserID
	}
	return ""
}

func (x *GroupRequestInfo) GetNickname() string {
	if x != nil {
		return x.Nickname
	}
	return ""
}

func (x *GroupRequestInfo) GetUserFaceURL() string {
	if x != nil {
		return x.UserFaceURL
	}
	return ""
}

func (x *GroupRequestInfo) GetGender() int32 {
	if x != nil {
		return x.Gender
	}
	return 0
}

func (x *GroupRequestInfo) GetCode() string {
	if x != nil {
		return x.Code
	}
	return ""
}

func (x *GroupRequestInfo) GetHandleResult() int32 {
	if x != nil {
		return x.HandleResult
	}
	return 0
}

func (x *GroupRequestInfo) GetReqMsg() string {
	if x != nil {
		return x.ReqMsg
	}
	return ""
}

func (x *GroupRequestInfo) GetHandledMsg() string {
	if x != nil {
		return x.HandledMsg
	}
	return ""
}

func (x *GroupRequestInfo) GetReqTime() int64 {
	if x != nil {
		return x.ReqTime
	}
	return 0
}

func (x *GroupRequestInfo) GetHandleUserID() string {
	if x != nil {
		return x.HandleUserID
	}
	return ""
}

func (x *GroupRequestInfo) GetHandledTime() int64 {
	if x != nil {
		return x.HandledTime
	}
	return 0
}

func (x *GroupRequestInfo) GetEx() string {
	if x != nil {
		return x.Ex
	}
	return ""
}

func (x *GroupRequestInfo) GetAttachedInfo() string {
	if x != nil {
		return x.AttachedInfo
	}
	return ""
}

func (x *GroupRequestInfo) GetJoinSource() int32 {
	if x != nil {
		return x.JoinSource
	}
	return 0
}

func (x *GroupRequestInfo) GetInviterUserID() string {
	if x != nil {
		return x.InviterUserID
	}
	return ""
}

// 群的基础信息
type BaseGroupInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GroupID       string `protobuf:"bytes,1,opt,name=groupID,proto3" json:"groupID,omitempty"`
	FaceURL       string `protobuf:"bytes,2,opt,name=faceURL,proto3" json:"faceURL,omitempty"`
	NickName      string `protobuf:"bytes,3,opt,name=nickName,proto3" json:"nickName,omitempty"`
	MemberCount   int64  `protobuf:"varint,4,opt,name=memberCount,proto3" json:"memberCount,omitempty"`
	GroupType     int64  `protobuf:"varint,5,opt,name=groupType,proto3" json:"groupType,omitempty"` //群类型
	Status        int32  `protobuf:"varint,6,opt,name=status,proto3" json:"status,omitempty"`       //群状态
	UpdateAt      int64  `protobuf:"varint,7,opt,name=updateAt,proto3" json:"updateAt,omitempty"`   //更新时间
	Code          string `protobuf:"bytes,8,opt,name=code,proto3" json:"code,omitempty"`
	OwnerUserID   string `protobuf:"bytes,9,opt,name=ownerUserID,proto3" json:"ownerUserID,omitempty"`
	CreatorUserID string `protobuf:"bytes,10,opt,name=creatorUserID,proto3" json:"creatorUserID,omitempty"`
}

func (x *BaseGroupInfo) Reset() {
	*x = BaseGroupInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_common_model_group_v2_group_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BaseGroupInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BaseGroupInfo) ProtoMessage() {}

func (x *BaseGroupInfo) ProtoReflect() protoreflect.Message {
	mi := &file_common_model_group_v2_group_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BaseGroupInfo.ProtoReflect.Descriptor instead.
func (*BaseGroupInfo) Descriptor() ([]byte, []int) {
	return file_common_model_group_v2_group_proto_rawDescGZIP(), []int{2}
}

func (x *BaseGroupInfo) GetGroupID() string {
	if x != nil {
		return x.GroupID
	}
	return ""
}

func (x *BaseGroupInfo) GetFaceURL() string {
	if x != nil {
		return x.FaceURL
	}
	return ""
}

func (x *BaseGroupInfo) GetNickName() string {
	if x != nil {
		return x.NickName
	}
	return ""
}

func (x *BaseGroupInfo) GetMemberCount() int64 {
	if x != nil {
		return x.MemberCount
	}
	return 0
}

func (x *BaseGroupInfo) GetGroupType() int64 {
	if x != nil {
		return x.GroupType
	}
	return 0
}

func (x *BaseGroupInfo) GetStatus() int32 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *BaseGroupInfo) GetUpdateAt() int64 {
	if x != nil {
		return x.UpdateAt
	}
	return 0
}

func (x *BaseGroupInfo) GetCode() string {
	if x != nil {
		return x.Code
	}
	return ""
}

func (x *BaseGroupInfo) GetOwnerUserID() string {
	if x != nil {
		return x.OwnerUserID
	}
	return ""
}

func (x *BaseGroupInfo) GetCreatorUserID() string {
	if x != nil {
		return x.CreatorUserID
	}
	return ""
}

// 群成员信息
type MemberInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GroupID        string `protobuf:"bytes,1,opt,name=groupID,proto3" json:"groupID,omitempty"`               //群ID
	UserID         string `protobuf:"bytes,2,opt,name=userID,proto3" json:"userID,omitempty"`                 //用户ID
	RoleLevel      int32  `protobuf:"varint,3,opt,name=roleLevel,proto3" json:"roleLevel,omitempty"`          //用户等级
	JoinTime       int64  `protobuf:"varint,4,opt,name=joinTime,proto3" json:"joinTime,omitempty"`            //加群时间
	Nickname       string `protobuf:"bytes,5,opt,name=nickname,proto3" json:"nickname,omitempty"`             //用户昵称
	FaceUrl        string `protobuf:"bytes,6,opt,name=faceUrl,proto3" json:"faceUrl,omitempty"`               //头像
	AttachedInfo   string `protobuf:"bytes,7,opt,name=attachedInfo,proto3" json:"attachedInfo,omitempty"`     //附加信息
	JoinSource     int32  `protobuf:"varint,8,opt,name=joinSource,proto3" json:"joinSource,omitempty"`        //来源
	OperatorUserID string `protobuf:"bytes,9,opt,name=operatorUserID,proto3" json:"operatorUserID,omitempty"` //操作人id
	Ex             string `protobuf:"bytes,10,opt,name=ex,proto3" json:"ex,omitempty"`                        //扩展
	MuteEndTime    int64  `protobuf:"varint,11,opt,name=muteEndTime,proto3" json:"muteEndTime,omitempty"`     //禁言时间
	Message        string `protobuf:"bytes,12,opt,name=message,proto3" json:"message,omitempty"`              //签名
	Code           string `protobuf:"bytes,13,opt,name=code,proto3" json:"code,omitempty"`                    //邀请码
	Phone          string `protobuf:"bytes,14,opt,name=phone,proto3" json:"phone,omitempty"`                  //手机号
	Email          string `protobuf:"bytes,15,opt,name=email,proto3" json:"email,omitempty"`                  //邮箱
	Birth          int64  `protobuf:"varint,16,opt,name=birth,proto3" json:"birth,omitempty"`                 //生日
	Gender         int32  `protobuf:"varint,17,opt,name=gender,proto3" json:"gender,omitempty"`               //性别
	InviterUserID  string `protobuf:"bytes,18,opt,name=inviterUserID,proto3" json:"inviterUserID,omitempty"`  //邀请人
	GroupUserName  string `protobuf:"bytes,19,opt,name=groupUserName,proto3" json:"groupUserName,omitempty"`  //用户在群中的昵称
	BackgroundUrl  string `protobuf:"bytes,20,opt,name=backgroundUrl,proto3" json:"backgroundUrl,omitempty"`  //背景图片
	UpdateAt       int64  `protobuf:"varint,21,opt,name=updateAt,proto3" json:"updateAt,omitempty"`           //更新时间
}

func (x *MemberInfo) Reset() {
	*x = MemberInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_common_model_group_v2_group_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MemberInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MemberInfo) ProtoMessage() {}

func (x *MemberInfo) ProtoReflect() protoreflect.Message {
	mi := &file_common_model_group_v2_group_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MemberInfo.ProtoReflect.Descriptor instead.
func (*MemberInfo) Descriptor() ([]byte, []int) {
	return file_common_model_group_v2_group_proto_rawDescGZIP(), []int{3}
}

func (x *MemberInfo) GetGroupID() string {
	if x != nil {
		return x.GroupID
	}
	return ""
}

func (x *MemberInfo) GetUserID() string {
	if x != nil {
		return x.UserID
	}
	return ""
}

func (x *MemberInfo) GetRoleLevel() int32 {
	if x != nil {
		return x.RoleLevel
	}
	return 0
}

func (x *MemberInfo) GetJoinTime() int64 {
	if x != nil {
		return x.JoinTime
	}
	return 0
}

func (x *MemberInfo) GetNickname() string {
	if x != nil {
		return x.Nickname
	}
	return ""
}

func (x *MemberInfo) GetFaceUrl() string {
	if x != nil {
		return x.FaceUrl
	}
	return ""
}

func (x *MemberInfo) GetAttachedInfo() string {
	if x != nil {
		return x.AttachedInfo
	}
	return ""
}

func (x *MemberInfo) GetJoinSource() int32 {
	if x != nil {
		return x.JoinSource
	}
	return 0
}

func (x *MemberInfo) GetOperatorUserID() string {
	if x != nil {
		return x.OperatorUserID
	}
	return ""
}

func (x *MemberInfo) GetEx() string {
	if x != nil {
		return x.Ex
	}
	return ""
}

func (x *MemberInfo) GetMuteEndTime() int64 {
	if x != nil {
		return x.MuteEndTime
	}
	return 0
}

func (x *MemberInfo) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *MemberInfo) GetCode() string {
	if x != nil {
		return x.Code
	}
	return ""
}

func (x *MemberInfo) GetPhone() string {
	if x != nil {
		return x.Phone
	}
	return ""
}

func (x *MemberInfo) GetEmail() string {
	if x != nil {
		return x.Email
	}
	return ""
}

func (x *MemberInfo) GetBirth() int64 {
	if x != nil {
		return x.Birth
	}
	return 0
}

func (x *MemberInfo) GetGender() int32 {
	if x != nil {
		return x.Gender
	}
	return 0
}

func (x *MemberInfo) GetInviterUserID() string {
	if x != nil {
		return x.InviterUserID
	}
	return ""
}

func (x *MemberInfo) GetGroupUserName() string {
	if x != nil {
		return x.GroupUserName
	}
	return ""
}

func (x *MemberInfo) GetBackgroundUrl() string {
	if x != nil {
		return x.BackgroundUrl
	}
	return ""
}

func (x *MemberInfo) GetUpdateAt() int64 {
	if x != nil {
		return x.UpdateAt
	}
	return 0
}

type GroupAbstractInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GroupID             string `protobuf:"bytes,1,opt,name=groupID,proto3" json:"groupID,omitempty"`
	GroupMemberNumber   uint32 `protobuf:"varint,2,opt,name=groupMemberNumber,proto3" json:"groupMemberNumber,omitempty"`
	GroupMemberListHash uint64 `protobuf:"varint,3,opt,name=groupMemberListHash,proto3" json:"groupMemberListHash,omitempty"`
}

func (x *GroupAbstractInfo) Reset() {
	*x = GroupAbstractInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_common_model_group_v2_group_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GroupAbstractInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GroupAbstractInfo) ProtoMessage() {}

func (x *GroupAbstractInfo) ProtoReflect() protoreflect.Message {
	mi := &file_common_model_group_v2_group_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GroupAbstractInfo.ProtoReflect.Descriptor instead.
func (*GroupAbstractInfo) Descriptor() ([]byte, []int) {
	return file_common_model_group_v2_group_proto_rawDescGZIP(), []int{4}
}

func (x *GroupAbstractInfo) GetGroupID() string {
	if x != nil {
		return x.GroupID
	}
	return ""
}

func (x *GroupAbstractInfo) GetGroupMemberNumber() uint32 {
	if x != nil {
		return x.GroupMemberNumber
	}
	return 0
}

func (x *GroupAbstractInfo) GetGroupMemberListHash() uint64 {
	if x != nil {
		return x.GroupMemberListHash
	}
	return 0
}

// 根据群id获取列表 兼容老版本
type GetByGroupListSdk struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GroupID    string                `protobuf:"bytes,1,opt,name=groupID,proto3" json:"groupID,omitempty"`
	Pagination *v2.RequestPagination `protobuf:"bytes,2,opt,name=pagination,proto3" json:"pagination,omitempty"`
}

func (x *GetByGroupListSdk) Reset() {
	*x = GetByGroupListSdk{}
	if protoimpl.UnsafeEnabled {
		mi := &file_common_model_group_v2_group_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetByGroupListSdk) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetByGroupListSdk) ProtoMessage() {}

func (x *GetByGroupListSdk) ProtoReflect() protoreflect.Message {
	mi := &file_common_model_group_v2_group_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetByGroupListSdk.ProtoReflect.Descriptor instead.
func (*GetByGroupListSdk) Descriptor() ([]byte, []int) {
	return file_common_model_group_v2_group_proto_rawDescGZIP(), []int{5}
}

func (x *GetByGroupListSdk) GetGroupID() string {
	if x != nil {
		return x.GroupID
	}
	return ""
}

func (x *GetByGroupListSdk) GetPagination() *v2.RequestPagination {
	if x != nil {
		return x.Pagination
	}
	return nil
}

var File_common_model_group_v2_group_proto protoreflect.FileDescriptor

var file_common_model_group_v2_group_proto_rawDesc = []byte{
	0x0a, 0x21, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2f, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2f, 0x67,
	0x72, 0x6f, 0x75, 0x70, 0x2f, 0x76, 0x32, 0x2f, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x12, 0x19, 0x61, 0x70, 0x69, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e,
	0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x2e, 0x76, 0x32, 0x1a, 0x17,
	0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2f, 0x6e, 0x65, 0x74, 0x2f, 0x76, 0x32, 0x2f, 0x6e, 0x65,
	0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x97, 0x08, 0x0a, 0x09, 0x47, 0x72, 0x6f, 0x75,
	0x70, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x18, 0x0a, 0x07, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x44,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x44, 0x12,
	0x1c, 0x0a, 0x09, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x09, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x22, 0x0a,
	0x0c, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0c, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x12, 0x22, 0x0a, 0x0c, 0x69, 0x6e, 0x74, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x69, 0x6e, 0x74, 0x72, 0x6f, 0x64, 0x75,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x18, 0x0a, 0x07, 0x66, 0x61, 0x63, 0x65, 0x55, 0x52, 0x4c,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x66, 0x61, 0x63, 0x65, 0x55, 0x52, 0x4c, 0x12,
	0x20, 0x0a, 0x0b, 0x6f, 0x77, 0x6e, 0x65, 0x72, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x18, 0x06,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x6f, 0x77, 0x6e, 0x65, 0x72, 0x55, 0x73, 0x65, 0x72, 0x49,
	0x44, 0x12, 0x1e, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x18,
	0x07, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d,
	0x65, 0x12, 0x20, 0x0a, 0x0b, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x43, 0x6f, 0x75, 0x6e, 0x74,
	0x18, 0x08, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0b, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x43, 0x6f,
	0x75, 0x6e, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x65, 0x78, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x02, 0x65, 0x78, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x0a, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x24, 0x0a, 0x0d, 0x63,
	0x72, 0x65, 0x61, 0x74, 0x6f, 0x72, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x18, 0x0b, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0d, 0x63, 0x72, 0x65, 0x61, 0x74, 0x6f, 0x72, 0x55, 0x73, 0x65, 0x72, 0x49,
	0x44, 0x12, 0x1c, 0x0a, 0x09, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x54, 0x79, 0x70, 0x65, 0x18, 0x0c,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x54, 0x79, 0x70, 0x65, 0x12,
	0x2a, 0x0a, 0x10, 0x6e, 0x65, 0x65, 0x64, 0x56, 0x65, 0x72, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x05, 0x52, 0x10, 0x6e, 0x65, 0x65, 0x64, 0x56,
	0x65, 0x72, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x26, 0x0a, 0x0e, 0x6c,
	0x6f, 0x6f, 0x6b, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x0e, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x0e, 0x6c, 0x6f, 0x6f, 0x6b, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x49,
	0x6e, 0x66, 0x6f, 0x12, 0x2c, 0x0a, 0x11, 0x61, 0x70, 0x70, 0x6c, 0x79, 0x4d, 0x65, 0x6d, 0x62,
	0x65, 0x72, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x05, 0x52, 0x11,
	0x61, 0x70, 0x70, 0x6c, 0x79, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x46, 0x72, 0x69, 0x65, 0x6e,
	0x64, 0x12, 0x36, 0x0a, 0x16, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x10, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x16, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x2e, 0x0a, 0x12, 0x6e, 0x6f, 0x74,
	0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x18,
	0x11, 0x20, 0x01, 0x28, 0x09, 0x52, 0x12, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64,
	0x65, 0x18, 0x12, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x26, 0x0a,
	0x0e, 0x6d, 0x61, 0x78, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x18,
	0x13, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0e, 0x6d, 0x61, 0x78, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72,
	0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x22, 0x0a, 0x0c, 0x61, 0x74, 0x74, 0x61, 0x63, 0x68, 0x65,
	0x64, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x14, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x61, 0x74, 0x74,
	0x61, 0x63, 0x68, 0x65, 0x64, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x32, 0x0a, 0x14, 0x6f, 0x6e, 0x6c,
	0x79, 0x4d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4e, 0x61, 0x6d,
	0x65, 0x18, 0x15, 0x20, 0x01, 0x28, 0x05, 0x52, 0x14, 0x6f, 0x6e, 0x6c, 0x79, 0x4d, 0x61, 0x6e,
	0x61, 0x67, 0x65, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x16, 0x0a,
	0x06, 0x69, 0x73, 0x52, 0x65, 0x61, 0x6c, 0x18, 0x16, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x69,
	0x73, 0x52, 0x65, 0x61, 0x6c, 0x12, 0x16, 0x0a, 0x06, 0x69, 0x73, 0x4f, 0x70, 0x65, 0x6e, 0x18,
	0x17, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x69, 0x73, 0x4f, 0x70, 0x65, 0x6e, 0x12, 0x2a, 0x0a,
	0x10, 0x61, 0x6c, 0x6c, 0x6f, 0x77, 0x50, 0x72, 0x69, 0x76, 0x61, 0x74, 0x65, 0x43, 0x68, 0x61,
	0x74, 0x18, 0x18, 0x20, 0x01, 0x28, 0x05, 0x52, 0x10, 0x61, 0x6c, 0x6c, 0x6f, 0x77, 0x50, 0x72,
	0x69, 0x76, 0x61, 0x74, 0x65, 0x43, 0x68, 0x61, 0x74, 0x12, 0x1e, 0x0a, 0x0a, 0x69, 0x73, 0x43,
	0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x74, 0x65, 0x18, 0x19, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x69,
	0x73, 0x43, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x74, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x6f, 0x77, 0x6e,
	0x65, 0x72, 0x43, 0x6f, 0x64, 0x65, 0x18, 0x1a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6f, 0x77,
	0x6e, 0x65, 0x72, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x24, 0x0a, 0x0d, 0x6f, 0x77, 0x6e, 0x65, 0x72,
	0x4e, 0x69, 0x63, 0x6b, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x1b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d,
	0x6f, 0x77, 0x6e, 0x65, 0x72, 0x4e, 0x69, 0x63, 0x6b, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1e, 0x0a,
	0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x43, 0x6f, 0x64, 0x65, 0x18, 0x1c, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x26, 0x0a,
	0x0e, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4e, 0x69, 0x63, 0x6b, 0x6e, 0x61, 0x6d, 0x65, 0x18,
	0x1d, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4e, 0x69, 0x63,
	0x6b, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x41,
	0x74, 0x18, 0x1e, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x41,
	0x74, 0x22, 0xcc, 0x06, 0x0a, 0x10, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x18, 0x0a, 0x07, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x49,
	0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x44,
	0x12, 0x1c, 0x0a, 0x09, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x09, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x22,
	0x0a, 0x0c, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x12, 0x22, 0x0a, 0x0c, 0x69, 0x6e, 0x74, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x69, 0x6e, 0x74, 0x72, 0x6f, 0x64,
	0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x22, 0x0a, 0x0c, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x46,
	0x61, 0x63, 0x65, 0x55, 0x52, 0x4c, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x67, 0x72,
	0x6f, 0x75, 0x70, 0x46, 0x61, 0x63, 0x65, 0x55, 0x52, 0x4c, 0x12, 0x1e, 0x0a, 0x0a, 0x63, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a,
	0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x18, 0x07, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x12, 0x24, 0x0a, 0x0d, 0x63, 0x72, 0x65, 0x61, 0x74, 0x6f, 0x72, 0x55, 0x73, 0x65,
	0x72, 0x49, 0x44, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x63, 0x72, 0x65, 0x61, 0x74,
	0x6f, 0x72, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x12, 0x1c, 0x0a, 0x09, 0x67, 0x72, 0x6f, 0x75,
	0x70, 0x54, 0x79, 0x70, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x67, 0x72, 0x6f,
	0x75, 0x70, 0x54, 0x79, 0x70, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x6f, 0x77, 0x6e, 0x65, 0x72, 0x55,
	0x73, 0x65, 0x72, 0x49, 0x44, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x6f, 0x77, 0x6e,
	0x65, 0x72, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x12, 0x20, 0x0a, 0x0b, 0x6d, 0x65, 0x6d, 0x62,
	0x65, 0x72, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0b, 0x6d,
	0x65, 0x6d, 0x62, 0x65, 0x72, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x67, 0x72,
	0x6f, 0x75, 0x70, 0x43, 0x6f, 0x64, 0x65, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x67,
	0x72, 0x6f, 0x75, 0x70, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x75, 0x73, 0x65, 0x72,
	0x49, 0x44, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x44,
	0x12, 0x1a, 0x0a, 0x08, 0x6e, 0x69, 0x63, 0x6b, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x0e, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x08, 0x6e, 0x69, 0x63, 0x6b, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x20, 0x0a, 0x0b,
	0x75, 0x73, 0x65, 0x72, 0x46, 0x61, 0x63, 0x65, 0x55, 0x52, 0x4c, 0x18, 0x0f, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0b, 0x75, 0x73, 0x65, 0x72, 0x46, 0x61, 0x63, 0x65, 0x55, 0x52, 0x4c, 0x12, 0x16,
	0x0a, 0x06, 0x67, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x18, 0x10, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06,
	0x67, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x11,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x22, 0x0a, 0x0c, 0x68, 0x61,
	0x6e, 0x64, 0x6c, 0x65, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x12, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x0c, 0x68, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x16,
	0x0a, 0x06, 0x72, 0x65, 0x71, 0x4d, 0x73, 0x67, 0x18, 0x13, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06,
	0x72, 0x65, 0x71, 0x4d, 0x73, 0x67, 0x12, 0x1e, 0x0a, 0x0a, 0x68, 0x61, 0x6e, 0x64, 0x6c, 0x65,
	0x64, 0x4d, 0x73, 0x67, 0x18, 0x14, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x68, 0x61, 0x6e, 0x64,
	0x6c, 0x65, 0x64, 0x4d, 0x73, 0x67, 0x12, 0x18, 0x0a, 0x07, 0x72, 0x65, 0x71, 0x54, 0x69, 0x6d,
	0x65, 0x18, 0x15, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x72, 0x65, 0x71, 0x54, 0x69, 0x6d, 0x65,
	0x12, 0x22, 0x0a, 0x0c, 0x68, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44,
	0x18, 0x16, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x68, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x55, 0x73,
	0x65, 0x72, 0x49, 0x44, 0x12, 0x20, 0x0a, 0x0b, 0x68, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x64, 0x54,
	0x69, 0x6d, 0x65, 0x18, 0x17, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0b, 0x68, 0x61, 0x6e, 0x64, 0x6c,
	0x65, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x65, 0x78, 0x18, 0x18, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x02, 0x65, 0x78, 0x12, 0x22, 0x0a, 0x0c, 0x61, 0x74, 0x74, 0x61, 0x63, 0x68,
	0x65, 0x64, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x19, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x61, 0x74,
	0x74, 0x61, 0x63, 0x68, 0x65, 0x64, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x1e, 0x0a, 0x0a, 0x6a, 0x6f,
	0x69, 0x6e, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x18, 0x1a, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a,
	0x6a, 0x6f, 0x69, 0x6e, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x12, 0x24, 0x0a, 0x0d, 0x69, 0x6e,
	0x76, 0x69, 0x74, 0x65, 0x72, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x18, 0x1b, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0d, 0x69, 0x6e, 0x76, 0x69, 0x74, 0x65, 0x72, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44,
	0x22, 0xaf, 0x02, 0x0a, 0x0d, 0x42, 0x61, 0x73, 0x65, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x6e,
	0x66, 0x6f, 0x12, 0x18, 0x0a, 0x07, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x44, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x07, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x44, 0x12, 0x18, 0x0a, 0x07,
	0x66, 0x61, 0x63, 0x65, 0x55, 0x52, 0x4c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x66,
	0x61, 0x63, 0x65, 0x55, 0x52, 0x4c, 0x12, 0x1a, 0x0a, 0x08, 0x6e, 0x69, 0x63, 0x6b, 0x4e, 0x61,
	0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6e, 0x69, 0x63, 0x6b, 0x4e, 0x61,
	0x6d, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x43, 0x6f, 0x75, 0x6e,
	0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0b, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x43,
	0x6f, 0x75, 0x6e, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x54, 0x79, 0x70,
	0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x54, 0x79,
	0x70, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x1a, 0x0a, 0x08, 0x75, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x41, 0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x75, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x41, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x08,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x6f, 0x77,
	0x6e, 0x65, 0x72, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0b, 0x6f, 0x77, 0x6e, 0x65, 0x72, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x12, 0x24, 0x0a, 0x0d,
	0x63, 0x72, 0x65, 0x61, 0x74, 0x6f, 0x72, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x18, 0x0a, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0d, 0x63, 0x72, 0x65, 0x61, 0x74, 0x6f, 0x72, 0x55, 0x73, 0x65, 0x72,
	0x49, 0x44, 0x22, 0xe2, 0x04, 0x0a, 0x0a, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x49, 0x6e, 0x66,
	0x6f, 0x12, 0x18, 0x0a, 0x07, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x07, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x44, 0x12, 0x16, 0x0a, 0x06, 0x75,
	0x73, 0x65, 0x72, 0x49, 0x44, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65,
	0x72, 0x49, 0x44, 0x12, 0x1c, 0x0a, 0x09, 0x72, 0x6f, 0x6c, 0x65, 0x4c, 0x65, 0x76, 0x65, 0x6c,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x72, 0x6f, 0x6c, 0x65, 0x4c, 0x65, 0x76, 0x65,
	0x6c, 0x12, 0x1a, 0x0a, 0x08, 0x6a, 0x6f, 0x69, 0x6e, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x08, 0x6a, 0x6f, 0x69, 0x6e, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x1a, 0x0a,
	0x08, 0x6e, 0x69, 0x63, 0x6b, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x08, 0x6e, 0x69, 0x63, 0x6b, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x66, 0x61, 0x63,
	0x65, 0x55, 0x72, 0x6c, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x66, 0x61, 0x63, 0x65,
	0x55, 0x72, 0x6c, 0x12, 0x22, 0x0a, 0x0c, 0x61, 0x74, 0x74, 0x61, 0x63, 0x68, 0x65, 0x64, 0x49,
	0x6e, 0x66, 0x6f, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x61, 0x74, 0x74, 0x61, 0x63,
	0x68, 0x65, 0x64, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x1e, 0x0a, 0x0a, 0x6a, 0x6f, 0x69, 0x6e, 0x53,
	0x6f, 0x75, 0x72, 0x63, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x6a, 0x6f, 0x69,
	0x6e, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x12, 0x26, 0x0a, 0x0e, 0x6f, 0x70, 0x65, 0x72, 0x61,
	0x74, 0x6f, 0x72, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0e, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x12,
	0x0e, 0x0a, 0x02, 0x65, 0x78, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x65, 0x78, 0x12,
	0x20, 0x0a, 0x0b, 0x6d, 0x75, 0x74, 0x65, 0x45, 0x6e, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x0b,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x0b, 0x6d, 0x75, 0x74, 0x65, 0x45, 0x6e, 0x64, 0x54, 0x69, 0x6d,
	0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x0c, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x63,
	0x6f, 0x64, 0x65, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12,
	0x14, 0x0a, 0x05, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05,
	0x70, 0x68, 0x6f, 0x6e, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x18, 0x0f,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x12, 0x14, 0x0a, 0x05, 0x62,
	0x69, 0x72, 0x74, 0x68, 0x18, 0x10, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x62, 0x69, 0x72, 0x74,
	0x68, 0x12, 0x16, 0x0a, 0x06, 0x67, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x18, 0x11, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x06, 0x67, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x12, 0x24, 0x0a, 0x0d, 0x69, 0x6e, 0x76,
	0x69, 0x74, 0x65, 0x72, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x18, 0x12, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0d, 0x69, 0x6e, 0x76, 0x69, 0x74, 0x65, 0x72, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x12,
	0x24, 0x0a, 0x0d, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x55, 0x73, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65,
	0x18, 0x13, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x55, 0x73, 0x65,
	0x72, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x24, 0x0a, 0x0d, 0x62, 0x61, 0x63, 0x6b, 0x67, 0x72, 0x6f,
	0x75, 0x6e, 0x64, 0x55, 0x72, 0x6c, 0x18, 0x14, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x62, 0x61,
	0x63, 0x6b, 0x67, 0x72, 0x6f, 0x75, 0x6e, 0x64, 0x55, 0x72, 0x6c, 0x12, 0x1a, 0x0a, 0x08, 0x75,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x41, 0x74, 0x18, 0x15, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x75,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x41, 0x74, 0x22, 0x8d, 0x01, 0x0a, 0x11, 0x47, 0x72, 0x6f, 0x75,
	0x70, 0x41, 0x62, 0x73, 0x74, 0x72, 0x61, 0x63, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x18, 0x0a,
	0x07, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07,
	0x67, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x44, 0x12, 0x2c, 0x0a, 0x11, 0x67, 0x72, 0x6f, 0x75, 0x70,
	0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x11, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x4e,
	0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x30, 0x0a, 0x13, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x4d, 0x65,
	0x6d, 0x62, 0x65, 0x72, 0x4c, 0x69, 0x73, 0x74, 0x48, 0x61, 0x73, 0x68, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x04, 0x52, 0x13, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x4c,
	0x69, 0x73, 0x74, 0x48, 0x61, 0x73, 0x68, 0x22, 0x73, 0x0a, 0x11, 0x47, 0x65, 0x74, 0x42, 0x79,
	0x47, 0x72, 0x6f, 0x75, 0x70, 0x4c, 0x69, 0x73, 0x74, 0x53, 0x64, 0x6b, 0x12, 0x18, 0x0a, 0x07,
	0x67, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x67,
	0x72, 0x6f, 0x75, 0x70, 0x49, 0x44, 0x12, 0x44, 0x0a, 0x0a, 0x70, 0x61, 0x67, 0x69, 0x6e, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x61, 0x70, 0x69,
	0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x6e, 0x65, 0x74, 0x2e, 0x76, 0x32, 0x2e, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x50, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x52, 0x0a, 0x70, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x42, 0x5b, 0x0a, 0x19,
	0x61, 0x70, 0x69, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c,
	0x2e, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x2e, 0x76, 0x32, 0x50, 0x01, 0x5a, 0x3c, 0x67, 0x69, 0x74,
	0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x73, 0x70, 0x61, 0x72, 0x6b, 0x2d, 0x63, 0x6f,
	0x6d, 0x6d, 0x2f, 0x73, 0x70, 0x61, 0x72, 0x6b, 0x2d, 0x61, 0x70, 0x69, 0x2f, 0x61, 0x70, 0x69,
	0x2f, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2f, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2f, 0x67, 0x72,
	0x6f, 0x75, 0x70, 0x2f, 0x76, 0x32, 0x3b, 0x76, 0x32, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x33,
}

var (
	file_common_model_group_v2_group_proto_rawDescOnce sync.Once
	file_common_model_group_v2_group_proto_rawDescData = file_common_model_group_v2_group_proto_rawDesc
)

func file_common_model_group_v2_group_proto_rawDescGZIP() []byte {
	file_common_model_group_v2_group_proto_rawDescOnce.Do(func() {
		file_common_model_group_v2_group_proto_rawDescData = protoimpl.X.CompressGZIP(file_common_model_group_v2_group_proto_rawDescData)
	})
	return file_common_model_group_v2_group_proto_rawDescData
}

var file_common_model_group_v2_group_proto_msgTypes = make([]protoimpl.MessageInfo, 6)
var file_common_model_group_v2_group_proto_goTypes = []interface{}{
	(*GroupInfo)(nil),            // 0: api.common.model.group.v2.GroupInfo
	(*GroupRequestInfo)(nil),     // 1: api.common.model.group.v2.GroupRequestInfo
	(*BaseGroupInfo)(nil),        // 2: api.common.model.group.v2.BaseGroupInfo
	(*MemberInfo)(nil),           // 3: api.common.model.group.v2.MemberInfo
	(*GroupAbstractInfo)(nil),    // 4: api.common.model.group.v2.GroupAbstractInfo
	(*GetByGroupListSdk)(nil),    // 5: api.common.model.group.v2.GetByGroupListSdk
	(*v2.RequestPagination)(nil), // 6: api.common.net.v2.RequestPagination
}
var file_common_model_group_v2_group_proto_depIdxs = []int32{
	6, // 0: api.common.model.group.v2.GetByGroupListSdk.pagination:type_name -> api.common.net.v2.RequestPagination
	1, // [1:1] is the sub-list for method output_type
	1, // [1:1] is the sub-list for method input_type
	1, // [1:1] is the sub-list for extension type_name
	1, // [1:1] is the sub-list for extension extendee
	0, // [0:1] is the sub-list for field type_name
}

func init() { file_common_model_group_v2_group_proto_init() }
func file_common_model_group_v2_group_proto_init() {
	if File_common_model_group_v2_group_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_common_model_group_v2_group_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GroupInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_common_model_group_v2_group_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GroupRequestInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_common_model_group_v2_group_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BaseGroupInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_common_model_group_v2_group_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MemberInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_common_model_group_v2_group_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GroupAbstractInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_common_model_group_v2_group_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetByGroupListSdk); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_common_model_group_v2_group_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   6,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_common_model_group_v2_group_proto_goTypes,
		DependencyIndexes: file_common_model_group_v2_group_proto_depIdxs,
		MessageInfos:      file_common_model_group_v2_group_proto_msgTypes,
	}.Build()
	File_common_model_group_v2_group_proto = out.File
	file_common_model_group_v2_group_proto_rawDesc = nil
	file_common_model_group_v2_group_proto_goTypes = nil
	file_common_model_group_v2_group_proto_depIdxs = nil
}
