// Code generated by protoc-gen-go-errors. DO NOT EDIT.

package pb_error

import (
	fmt "fmt"
	errors "github.com/go-kratos/kratos/v2/errors"
)

// This is a compile-time assertion to ensure that this generated file
// is compatible with the kratos package it is being compiled against.
const _ = errors.SupportPackageIsVersion1

// 数据未找到
func IsDataNotFound(err error) bool {
	if err == nil {
		return false
	}
	e := errors.FromError(err)
	return e.Reason == ErrorCommonReason_DATA_NOT_FOUND.String() && e.Code == 404
}

// 数据未找到
func ErrorDataNotFound(format string, args ...interface{}) *errors.Error {
	return errors.New(404, ErrorCommonReason_DATA_NOT_FOUND.String(), fmt.Sprintf(format, args...))
}

// 创建失败
func IsCreateDataError(err error) bool {
	if err == nil {
		return false
	}
	e := errors.FromError(err)
	return e.Reason == ErrorCommonReason_CREATE_DATA_ERROR.String() && e.Code == 500
}

// 创建失败
func ErrorCreateDataError(format string, args ...interface{}) *errors.Error {
	return errors.New(500, ErrorCommonReason_CREATE_DATA_ERROR.String(), fmt.Sprintf(format, args...))
}

// 参数错误
func IsParameterError(err error) bool {
	if err == nil {
		return false
	}
	e := errors.FromError(err)
	return e.Reason == ErrorCommonReason_PARAMETER_ERROR.String() && e.Code == 400
}

// 参数错误
func ErrorParameterError(format string, args ...interface{}) *errors.Error {
	return errors.New(400, ErrorCommonReason_PARAMETER_ERROR.String(), fmt.Sprintf(format, args...))
}

// 编辑失败
func IsEditDataError(err error) bool {
	if err == nil {
		return false
	}
	e := errors.FromError(err)
	return e.Reason == ErrorCommonReason_EDIT_DATA_ERROR.String() && e.Code == 500
}

// 编辑失败
func ErrorEditDataError(format string, args ...interface{}) *errors.Error {
	return errors.New(500, ErrorCommonReason_EDIT_DATA_ERROR.String(), fmt.Sprintf(format, args...))
}

// 删除失败
func IsDeleteDataError(err error) bool {
	if err == nil {
		return false
	}
	e := errors.FromError(err)
	return e.Reason == ErrorCommonReason_DELETE_DATA_ERROR.String() && e.Code == 500
}

// 删除失败
func ErrorDeleteDataError(format string, args ...interface{}) *errors.Error {
	return errors.New(500, ErrorCommonReason_DELETE_DATA_ERROR.String(), fmt.Sprintf(format, args...))
}

// 获取数据失败
func IsGetDataError(err error) bool {
	if err == nil {
		return false
	}
	e := errors.FromError(err)
	return e.Reason == ErrorCommonReason_GET_DATA_ERROR.String() && e.Code == 500
}

// 获取数据失败
func ErrorGetDataError(format string, args ...interface{}) *errors.Error {
	return errors.New(500, ErrorCommonReason_GET_DATA_ERROR.String(), fmt.Sprintf(format, args...))
}

// 签名失败
func IsSignDataError(err error) bool {
	if err == nil {
		return false
	}
	e := errors.FromError(err)
	return e.Reason == ErrorCommonReason_SIGN_DATA_ERROR.String() && e.Code == 500
}

// 签名失败
func ErrorSignDataError(format string, args ...interface{}) *errors.Error {
	return errors.New(500, ErrorCommonReason_SIGN_DATA_ERROR.String(), fmt.Sprintf(format, args...))
}
