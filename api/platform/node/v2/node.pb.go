// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.31.0
// 	protoc        v4.25.0
// source: platform/node/v2/node.proto

package v2

import (
	_ "github.com/envoyproxy/protoc-gen-validate/validate"
	_ "github.com/spark-comm/spark-api/api/common/enum/v2"
	v2 "github.com/spark-comm/spark-api/api/common/model/v2"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// 节点类型
type NodeType int32

const (
	NodeType_IndependentNode NodeType = 0 //独立节点
	NodeType_ProxyNode       NodeType = 1 //代理节点
)

// Enum value maps for NodeType.
var (
	NodeType_name = map[int32]string{
		0: "IndependentNode",
		1: "ProxyNode",
	}
	NodeType_value = map[string]int32{
		"IndependentNode": 0,
		"ProxyNode":       1,
	}
)

func (x NodeType) Enum() *NodeType {
	p := new(NodeType)
	*p = x
	return p
}

func (x NodeType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (NodeType) Descriptor() protoreflect.EnumDescriptor {
	return file_platform_node_v2_node_proto_enumTypes[0].Descriptor()
}

func (NodeType) Type() protoreflect.EnumType {
	return &file_platform_node_v2_node_proto_enumTypes[0]
}

func (x NodeType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use NodeType.Descriptor instead.
func (NodeType) EnumDescriptor() ([]byte, []int) {
	return file_platform_node_v2_node_proto_rawDescGZIP(), []int{0}
}

// 节点类型
type NodeStatus int32

const (
	NodeStatus_Unknown    NodeStatus = 0 //未知
	NodeStatus_Enable     NodeStatus = 1 //启用
	NodeStatus_Deactivate NodeStatus = 2 //停用
	NodeStatus_TimeLimit  NodeStatus = 3 //时间限制
)

// Enum value maps for NodeStatus.
var (
	NodeStatus_name = map[int32]string{
		0: "Unknown",
		1: "Enable",
		2: "Deactivate",
		3: "TimeLimit",
	}
	NodeStatus_value = map[string]int32{
		"Unknown":    0,
		"Enable":     1,
		"Deactivate": 2,
		"TimeLimit":  3,
	}
)

func (x NodeStatus) Enum() *NodeStatus {
	p := new(NodeStatus)
	*p = x
	return p
}

func (x NodeStatus) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (NodeStatus) Descriptor() protoreflect.EnumDescriptor {
	return file_platform_node_v2_node_proto_enumTypes[1].Descriptor()
}

func (NodeStatus) Type() protoreflect.EnumType {
	return &file_platform_node_v2_node_proto_enumTypes[1]
}

func (x NodeStatus) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use NodeStatus.Descriptor instead.
func (NodeStatus) EnumDescriptor() ([]byte, []int) {
	return file_platform_node_v2_node_proto_rawDescGZIP(), []int{1}
}

type NodeDetails struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PubKey string       `protobuf:"bytes,1,opt,name=pubKey,proto3" json:"pubKey,omitempty"` //公钥
	PriKey string       `protobuf:"bytes,2,opt,name=priKey,proto3" json:"priKey,omitempty"` //私钥
	Base   *v2.NodeBase `protobuf:"bytes,3,opt,name=base,proto3" json:"base,omitempty"`     //基本信息
}

func (x *NodeDetails) Reset() {
	*x = NodeDetails{}
	if protoimpl.UnsafeEnabled {
		mi := &file_platform_node_v2_node_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NodeDetails) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NodeDetails) ProtoMessage() {}

func (x *NodeDetails) ProtoReflect() protoreflect.Message {
	mi := &file_platform_node_v2_node_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NodeDetails.ProtoReflect.Descriptor instead.
func (*NodeDetails) Descriptor() ([]byte, []int) {
	return file_platform_node_v2_node_proto_rawDescGZIP(), []int{0}
}

func (x *NodeDetails) GetPubKey() string {
	if x != nil {
		return x.PubKey
	}
	return ""
}

func (x *NodeDetails) GetPriKey() string {
	if x != nil {
		return x.PriKey
	}
	return ""
}

func (x *NodeDetails) GetBase() *v2.NodeBase {
	if x != nil {
		return x.Base
	}
	return nil
}

// 新加节点
// -------------------------------------------
type AddNodeReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name          string   `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`                                              //节点名称
	MasterApi     string   `protobuf:"bytes,2,opt,name=masterApi,proto3" json:"masterApi,omitempty"`                                    //受控节点地址
	Code          string   `protobuf:"bytes,3,opt,name=code,proto3" json:"code,omitempty"`                                              //邀请码
	ImApiUrl      string   `protobuf:"bytes,4,opt,name=imApiUrl,proto3" json:"imApiUrl,omitempty"`                                      //客户imapi域名地址,兼容2.0
	ImWsUrl       string   `protobuf:"bytes,5,opt,name=imWsUrl,proto3" json:"imWsUrl,omitempty"`                                        //ws 地址
	AvAppid       string   `protobuf:"bytes,6,opt,name=avAppid,proto3" json:"avAppid,omitempty"`                                        // 腾讯音视频app id
	AvSecret      string   `protobuf:"bytes,7,opt,name=avSecret,proto3" json:"avSecret,omitempty"`                                      // 腾讯音视频密钥
	Logo          string   `protobuf:"bytes,8,opt,name=logo,proto3" json:"logo,omitempty"`                                              // 服务的logo
	Version       string   `protobuf:"bytes,9,opt,name=version,proto3" json:"version,omitempty"`                                        //版本
	NodeType      NodeType `protobuf:"varint,10,opt,name=nodeType,proto3,enum=api.platform.node.v2.NodeType" json:"nodeType,omitempty"` // 节点类型  0：独立节点 2 ：租户节点
	MasterNodeId  string   `protobuf:"bytes,11,opt,name=masterNodeId,proto3" json:"masterNodeId,omitempty"`                             // 主几点id// 当为租户节点时
	PromotionCode string   `protobuf:"bytes,12,opt,name=promotionCode,proto3" json:"promotionCode,omitempty"`                           //租户邀请码
	ManageApi     string   `protobuf:"bytes,13,opt,name=manageApi,proto3" json:"manageApi,omitempty"`                                   // 管理节点地址
}

func (x *AddNodeReq) Reset() {
	*x = AddNodeReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_platform_node_v2_node_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddNodeReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddNodeReq) ProtoMessage() {}

func (x *AddNodeReq) ProtoReflect() protoreflect.Message {
	mi := &file_platform_node_v2_node_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddNodeReq.ProtoReflect.Descriptor instead.
func (*AddNodeReq) Descriptor() ([]byte, []int) {
	return file_platform_node_v2_node_proto_rawDescGZIP(), []int{1}
}

func (x *AddNodeReq) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *AddNodeReq) GetMasterApi() string {
	if x != nil {
		return x.MasterApi
	}
	return ""
}

func (x *AddNodeReq) GetCode() string {
	if x != nil {
		return x.Code
	}
	return ""
}

func (x *AddNodeReq) GetImApiUrl() string {
	if x != nil {
		return x.ImApiUrl
	}
	return ""
}

func (x *AddNodeReq) GetImWsUrl() string {
	if x != nil {
		return x.ImWsUrl
	}
	return ""
}

func (x *AddNodeReq) GetAvAppid() string {
	if x != nil {
		return x.AvAppid
	}
	return ""
}

func (x *AddNodeReq) GetAvSecret() string {
	if x != nil {
		return x.AvSecret
	}
	return ""
}

func (x *AddNodeReq) GetLogo() string {
	if x != nil {
		return x.Logo
	}
	return ""
}

func (x *AddNodeReq) GetVersion() string {
	if x != nil {
		return x.Version
	}
	return ""
}

func (x *AddNodeReq) GetNodeType() NodeType {
	if x != nil {
		return x.NodeType
	}
	return NodeType_IndependentNode
}

func (x *AddNodeReq) GetMasterNodeId() string {
	if x != nil {
		return x.MasterNodeId
	}
	return ""
}

func (x *AddNodeReq) GetPromotionCode() string {
	if x != nil {
		return x.PromotionCode
	}
	return ""
}

func (x *AddNodeReq) GetManageApi() string {
	if x != nil {
		return x.ManageApi
	}
	return ""
}

type AddNodeReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	NodeId string `protobuf:"bytes,1,opt,name=nodeId,proto3" json:"nodeId,omitempty"`
}

func (x *AddNodeReply) Reset() {
	*x = AddNodeReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_platform_node_v2_node_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddNodeReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddNodeReply) ProtoMessage() {}

func (x *AddNodeReply) ProtoReflect() protoreflect.Message {
	mi := &file_platform_node_v2_node_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddNodeReply.ProtoReflect.Descriptor instead.
func (*AddNodeReply) Descriptor() ([]byte, []int) {
	return file_platform_node_v2_node_proto_rawDescGZIP(), []int{2}
}

func (x *AddNodeReply) GetNodeId() string {
	if x != nil {
		return x.NodeId
	}
	return ""
}

// 删除节点
// -------------------------------------------
type DelReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	NodeId string `protobuf:"bytes,1,opt,name=nodeId,proto3" json:"nodeId,omitempty"` //节点id
}

func (x *DelReq) Reset() {
	*x = DelReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_platform_node_v2_node_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DelReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DelReq) ProtoMessage() {}

func (x *DelReq) ProtoReflect() protoreflect.Message {
	mi := &file_platform_node_v2_node_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DelReq.ProtoReflect.Descriptor instead.
func (*DelReq) Descriptor() ([]byte, []int) {
	return file_platform_node_v2_node_proto_rawDescGZIP(), []int{3}
}

func (x *DelReq) GetNodeId() string {
	if x != nil {
		return x.NodeId
	}
	return ""
}

type DelReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *DelReply) Reset() {
	*x = DelReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_platform_node_v2_node_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DelReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DelReply) ProtoMessage() {}

func (x *DelReply) ProtoReflect() protoreflect.Message {
	mi := &file_platform_node_v2_node_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DelReply.ProtoReflect.Descriptor instead.
func (*DelReply) Descriptor() ([]byte, []int) {
	return file_platform_node_v2_node_proto_rawDescGZIP(), []int{4}
}

// 编辑节点
// -------------------------------------------
type EditReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	NodeId        string  `protobuf:"bytes,1,opt,name=nodeId,proto3" json:"nodeId,omitempty"`                      //节点id
	Name          *string `protobuf:"bytes,2,opt,name=name,proto3,oneof" json:"name,omitempty"`                    //节点名称
	MasterApi     *string `protobuf:"bytes,3,opt,name=masterApi,proto3,oneof" json:"masterApi,omitempty"`          //受控节点地址
	Code          *string `protobuf:"bytes,4,opt,name=code,proto3,oneof" json:"code,omitempty"`                    //邀请码
	ImApiUrl      *string `protobuf:"bytes,5,opt,name=imApiUrl,proto3,oneof" json:"imApiUrl,omitempty"`            //客户imapi域名地址,兼容2.0
	ImWsUrl       *string `protobuf:"bytes,6,opt,name=imWsUrl,proto3,oneof" json:"imWsUrl,omitempty"`              //ws 地址
	AvAppid       *string `protobuf:"bytes,7,opt,name=avAppid,proto3,oneof" json:"avAppid,omitempty"`              // 腾讯音视频app id
	AvSecret      *string `protobuf:"bytes,8,opt,name=avSecret,proto3,oneof" json:"avSecret,omitempty"`            // 腾讯音视频密钥
	Logo          *string `protobuf:"bytes,9,opt,name=logo,proto3,oneof" json:"logo,omitempty"`                    // 服务的logo
	Version       *string `protobuf:"bytes,10,opt,name=version,proto3,oneof" json:"version,omitempty"`             //版本
	PromotionCode *string `protobuf:"bytes,11,opt,name=promotionCode,proto3,oneof" json:"promotionCode,omitempty"` //租户邀请码
	Sort          *int32  `protobuf:"varint,22,opt,name=sort,proto3,oneof" json:"sort,omitempty"`                  //排序
}

func (x *EditReq) Reset() {
	*x = EditReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_platform_node_v2_node_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EditReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EditReq) ProtoMessage() {}

func (x *EditReq) ProtoReflect() protoreflect.Message {
	mi := &file_platform_node_v2_node_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EditReq.ProtoReflect.Descriptor instead.
func (*EditReq) Descriptor() ([]byte, []int) {
	return file_platform_node_v2_node_proto_rawDescGZIP(), []int{5}
}

func (x *EditReq) GetNodeId() string {
	if x != nil {
		return x.NodeId
	}
	return ""
}

func (x *EditReq) GetName() string {
	if x != nil && x.Name != nil {
		return *x.Name
	}
	return ""
}

func (x *EditReq) GetMasterApi() string {
	if x != nil && x.MasterApi != nil {
		return *x.MasterApi
	}
	return ""
}

func (x *EditReq) GetCode() string {
	if x != nil && x.Code != nil {
		return *x.Code
	}
	return ""
}

func (x *EditReq) GetImApiUrl() string {
	if x != nil && x.ImApiUrl != nil {
		return *x.ImApiUrl
	}
	return ""
}

func (x *EditReq) GetImWsUrl() string {
	if x != nil && x.ImWsUrl != nil {
		return *x.ImWsUrl
	}
	return ""
}

func (x *EditReq) GetAvAppid() string {
	if x != nil && x.AvAppid != nil {
		return *x.AvAppid
	}
	return ""
}

func (x *EditReq) GetAvSecret() string {
	if x != nil && x.AvSecret != nil {
		return *x.AvSecret
	}
	return ""
}

func (x *EditReq) GetLogo() string {
	if x != nil && x.Logo != nil {
		return *x.Logo
	}
	return ""
}

func (x *EditReq) GetVersion() string {
	if x != nil && x.Version != nil {
		return *x.Version
	}
	return ""
}

func (x *EditReq) GetPromotionCode() string {
	if x != nil && x.PromotionCode != nil {
		return *x.PromotionCode
	}
	return ""
}

func (x *EditReq) GetSort() int32 {
	if x != nil && x.Sort != nil {
		return *x.Sort
	}
	return 0
}

type EditReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *EditReply) Reset() {
	*x = EditReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_platform_node_v2_node_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EditReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EditReply) ProtoMessage() {}

func (x *EditReply) ProtoReflect() protoreflect.Message {
	mi := &file_platform_node_v2_node_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EditReply.ProtoReflect.Descriptor instead.
func (*EditReply) Descriptor() ([]byte, []int) {
	return file_platform_node_v2_node_proto_rawDescGZIP(), []int{6}
}

// 编辑节点状态
// -------------------------------------------
type EditStatusReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	NodeId    string     `protobuf:"bytes,1,opt,name=nodeId,proto3" json:"nodeId,omitempty"`                                       //节点id
	Status    NodeStatus `protobuf:"varint,2,opt,name=status,proto3,enum=api.platform.node.v2.NodeStatus" json:"status,omitempty"` // 1：启用 2：停用 3: 时间限制
	StartTime *int64     `protobuf:"varint,3,opt,name=startTime,proto3,oneof" json:"startTime,omitempty"`                          // 开始时间
	EndTime   *int64     `protobuf:"varint,4,opt,name=endTime,proto3,oneof" json:"endTime,omitempty"`                              // 结束时间
}

func (x *EditStatusReq) Reset() {
	*x = EditStatusReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_platform_node_v2_node_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EditStatusReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EditStatusReq) ProtoMessage() {}

func (x *EditStatusReq) ProtoReflect() protoreflect.Message {
	mi := &file_platform_node_v2_node_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EditStatusReq.ProtoReflect.Descriptor instead.
func (*EditStatusReq) Descriptor() ([]byte, []int) {
	return file_platform_node_v2_node_proto_rawDescGZIP(), []int{7}
}

func (x *EditStatusReq) GetNodeId() string {
	if x != nil {
		return x.NodeId
	}
	return ""
}

func (x *EditStatusReq) GetStatus() NodeStatus {
	if x != nil {
		return x.Status
	}
	return NodeStatus_Unknown
}

func (x *EditStatusReq) GetStartTime() int64 {
	if x != nil && x.StartTime != nil {
		return *x.StartTime
	}
	return 0
}

func (x *EditStatusReq) GetEndTime() int64 {
	if x != nil && x.EndTime != nil {
		return *x.EndTime
	}
	return 0
}

type EditStatusReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *EditStatusReply) Reset() {
	*x = EditStatusReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_platform_node_v2_node_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EditStatusReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EditStatusReply) ProtoMessage() {}

func (x *EditStatusReply) ProtoReflect() protoreflect.Message {
	mi := &file_platform_node_v2_node_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EditStatusReply.ProtoReflect.Descriptor instead.
func (*EditStatusReply) Descriptor() ([]byte, []int) {
	return file_platform_node_v2_node_proto_rawDescGZIP(), []int{8}
}

// 重置节点的key
// -------------------------------------------
type ResetKeyReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	NodeId string `protobuf:"bytes,1,opt,name=nodeId,proto3" json:"nodeId,omitempty"` //节点id
}

func (x *ResetKeyReq) Reset() {
	*x = ResetKeyReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_platform_node_v2_node_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResetKeyReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResetKeyReq) ProtoMessage() {}

func (x *ResetKeyReq) ProtoReflect() protoreflect.Message {
	mi := &file_platform_node_v2_node_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResetKeyReq.ProtoReflect.Descriptor instead.
func (*ResetKeyReq) Descriptor() ([]byte, []int) {
	return file_platform_node_v2_node_proto_rawDescGZIP(), []int{9}
}

func (x *ResetKeyReq) GetNodeId() string {
	if x != nil {
		return x.NodeId
	}
	return ""
}

type ResetKeyReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ResetKeyReply) Reset() {
	*x = ResetKeyReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_platform_node_v2_node_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResetKeyReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResetKeyReply) ProtoMessage() {}

func (x *ResetKeyReply) ProtoReflect() protoreflect.Message {
	mi := &file_platform_node_v2_node_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResetKeyReply.ProtoReflect.Descriptor instead.
func (*ResetKeyReply) Descriptor() ([]byte, []int) {
	return file_platform_node_v2_node_proto_rawDescGZIP(), []int{10}
}

// 获取节点信息
// -------------------------------------------
type GetInfoReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	NodeId string `protobuf:"bytes,1,opt,name=nodeId,proto3" json:"nodeId,omitempty"` //节点id
}

func (x *GetInfoReq) Reset() {
	*x = GetInfoReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_platform_node_v2_node_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetInfoReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetInfoReq) ProtoMessage() {}

func (x *GetInfoReq) ProtoReflect() protoreflect.Message {
	mi := &file_platform_node_v2_node_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetInfoReq.ProtoReflect.Descriptor instead.
func (*GetInfoReq) Descriptor() ([]byte, []int) {
	return file_platform_node_v2_node_proto_rawDescGZIP(), []int{11}
}

func (x *GetInfoReq) GetNodeId() string {
	if x != nil {
		return x.NodeId
	}
	return ""
}

type GetInfoReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data *NodeDetails `protobuf:"bytes,1,opt,name=data,proto3" json:"data,omitempty"` //节点详情
}

func (x *GetInfoReply) Reset() {
	*x = GetInfoReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_platform_node_v2_node_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetInfoReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetInfoReply) ProtoMessage() {}

func (x *GetInfoReply) ProtoReflect() protoreflect.Message {
	mi := &file_platform_node_v2_node_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetInfoReply.ProtoReflect.Descriptor instead.
func (*GetInfoReply) Descriptor() ([]byte, []int) {
	return file_platform_node_v2_node_proto_rawDescGZIP(), []int{12}
}

func (x *GetInfoReply) GetData() *NodeDetails {
	if x != nil {
		return x.Data
	}
	return nil
}

// 获取节点信息
// -------------------------------------------
type GetNodeByCodeReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code string `protobuf:"bytes,1,opt,name=code,proto3" json:"code,omitempty"` //节点id
}

func (x *GetNodeByCodeReq) Reset() {
	*x = GetNodeByCodeReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_platform_node_v2_node_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetNodeByCodeReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetNodeByCodeReq) ProtoMessage() {}

func (x *GetNodeByCodeReq) ProtoReflect() protoreflect.Message {
	mi := &file_platform_node_v2_node_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetNodeByCodeReq.ProtoReflect.Descriptor instead.
func (*GetNodeByCodeReq) Descriptor() ([]byte, []int) {
	return file_platform_node_v2_node_proto_rawDescGZIP(), []int{13}
}

func (x *GetNodeByCodeReq) GetCode() string {
	if x != nil {
		return x.Code
	}
	return ""
}

type GetNodeByCodeReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data *v2.NodeBase `protobuf:"bytes,1,opt,name=data,proto3" json:"data,omitempty"` //节点详情
}

func (x *GetNodeByCodeReply) Reset() {
	*x = GetNodeByCodeReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_platform_node_v2_node_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetNodeByCodeReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetNodeByCodeReply) ProtoMessage() {}

func (x *GetNodeByCodeReply) ProtoReflect() protoreflect.Message {
	mi := &file_platform_node_v2_node_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetNodeByCodeReply.ProtoReflect.Descriptor instead.
func (*GetNodeByCodeReply) Descriptor() ([]byte, []int) {
	return file_platform_node_v2_node_proto_rawDescGZIP(), []int{14}
}

func (x *GetNodeByCodeReply) GetData() *v2.NodeBase {
	if x != nil {
		return x.Data
	}
	return nil
}

// 获取节点列表
// -------------------------------------------
type GetListReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Page    *v2.Pagination `protobuf:"bytes,1,opt,name=page,proto3" json:"page,omitempty"`                                           //分页
	Name    string         `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`                                           //节点名称
	Status  NodeStatus     `protobuf:"varint,3,opt,name=status,proto3,enum=api.platform.node.v2.NodeStatus" json:"status,omitempty"` //节点状态
	Version string         `protobuf:"bytes,4,opt,name=version,proto3" json:"version,omitempty"`                                     //版本
	Code    string         `protobuf:"bytes,5,opt,name=code,proto3" json:"code,omitempty"`                                           //编码
}

func (x *GetListReq) Reset() {
	*x = GetListReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_platform_node_v2_node_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetListReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetListReq) ProtoMessage() {}

func (x *GetListReq) ProtoReflect() protoreflect.Message {
	mi := &file_platform_node_v2_node_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetListReq.ProtoReflect.Descriptor instead.
func (*GetListReq) Descriptor() ([]byte, []int) {
	return file_platform_node_v2_node_proto_rawDescGZIP(), []int{15}
}

func (x *GetListReq) GetPage() *v2.Pagination {
	if x != nil {
		return x.Page
	}
	return nil
}

func (x *GetListReq) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *GetListReq) GetStatus() NodeStatus {
	if x != nil {
		return x.Status
	}
	return NodeStatus_Unknown
}

func (x *GetListReq) GetVersion() string {
	if x != nil {
		return x.Version
	}
	return ""
}

func (x *GetListReq) GetCode() string {
	if x != nil {
		return x.Code
	}
	return ""
}

type GetListReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Total int64          `protobuf:"varint,1,opt,name=total,proto3" json:"total,omitempty"` //总数
	List  []*NodeDetails `protobuf:"bytes,2,rep,name=list,proto3" json:"list,omitempty"`    //节点详情
}

func (x *GetListReply) Reset() {
	*x = GetListReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_platform_node_v2_node_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetListReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetListReply) ProtoMessage() {}

func (x *GetListReply) ProtoReflect() protoreflect.Message {
	mi := &file_platform_node_v2_node_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetListReply.ProtoReflect.Descriptor instead.
func (*GetListReply) Descriptor() ([]byte, []int) {
	return file_platform_node_v2_node_proto_rawDescGZIP(), []int{16}
}

func (x *GetListReply) GetTotal() int64 {
	if x != nil {
		return x.Total
	}
	return 0
}

func (x *GetListReply) GetList() []*NodeDetails {
	if x != nil {
		return x.List
	}
	return nil
}

// 获取所有数据
// -------------------------------------------
type GetAllListReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name    string     `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`                                           //节点名称
	Status  NodeStatus `protobuf:"varint,2,opt,name=status,proto3,enum=api.platform.node.v2.NodeStatus" json:"status,omitempty"` //节点状态
	Version string     `protobuf:"bytes,3,opt,name=version,proto3" json:"version,omitempty"`                                     //版本
	Code    string     `protobuf:"bytes,4,opt,name=code,proto3" json:"code,omitempty"`                                           //编码
}

func (x *GetAllListReq) Reset() {
	*x = GetAllListReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_platform_node_v2_node_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAllListReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAllListReq) ProtoMessage() {}

func (x *GetAllListReq) ProtoReflect() protoreflect.Message {
	mi := &file_platform_node_v2_node_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAllListReq.ProtoReflect.Descriptor instead.
func (*GetAllListReq) Descriptor() ([]byte, []int) {
	return file_platform_node_v2_node_proto_rawDescGZIP(), []int{17}
}

func (x *GetAllListReq) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *GetAllListReq) GetStatus() NodeStatus {
	if x != nil {
		return x.Status
	}
	return NodeStatus_Unknown
}

func (x *GetAllListReq) GetVersion() string {
	if x != nil {
		return x.Version
	}
	return ""
}

func (x *GetAllListReq) GetCode() string {
	if x != nil {
		return x.Code
	}
	return ""
}

type GetAllListReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	List []*v2.NodeBase `protobuf:"bytes,1,rep,name=list,proto3" json:"list,omitempty"` //节点详情
}

func (x *GetAllListReply) Reset() {
	*x = GetAllListReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_platform_node_v2_node_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAllListReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAllListReply) ProtoMessage() {}

func (x *GetAllListReply) ProtoReflect() protoreflect.Message {
	mi := &file_platform_node_v2_node_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAllListReply.ProtoReflect.Descriptor instead.
func (*GetAllListReply) Descriptor() ([]byte, []int) {
	return file_platform_node_v2_node_proto_rawDescGZIP(), []int{18}
}

func (x *GetAllListReply) GetList() []*v2.NodeBase {
	if x != nil {
		return x.List
	}
	return nil
}

// 获取默认节点
// -------------------------------------------
type GetDefNodeNodeReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *GetDefNodeNodeReq) Reset() {
	*x = GetDefNodeNodeReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_platform_node_v2_node_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetDefNodeNodeReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetDefNodeNodeReq) ProtoMessage() {}

func (x *GetDefNodeNodeReq) ProtoReflect() protoreflect.Message {
	mi := &file_platform_node_v2_node_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetDefNodeNodeReq.ProtoReflect.Descriptor instead.
func (*GetDefNodeNodeReq) Descriptor() ([]byte, []int) {
	return file_platform_node_v2_node_proto_rawDescGZIP(), []int{19}
}

type GetDefNodeNodeReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data *v2.NodeBase `protobuf:"bytes,1,opt,name=data,proto3" json:"data,omitempty"` //节点详情
}

func (x *GetDefNodeNodeReply) Reset() {
	*x = GetDefNodeNodeReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_platform_node_v2_node_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetDefNodeNodeReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetDefNodeNodeReply) ProtoMessage() {}

func (x *GetDefNodeNodeReply) ProtoReflect() protoreflect.Message {
	mi := &file_platform_node_v2_node_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetDefNodeNodeReply.ProtoReflect.Descriptor instead.
func (*GetDefNodeNodeReply) Descriptor() ([]byte, []int) {
	return file_platform_node_v2_node_proto_rawDescGZIP(), []int{20}
}

func (x *GetDefNodeNodeReply) GetData() *v2.NodeBase {
	if x != nil {
		return x.Data
	}
	return nil
}

// 设置默认节点
// -------------------------------------------
type SetDefNodeNodeReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	NodeId string `protobuf:"bytes,1,opt,name=nodeId,proto3" json:"nodeId,omitempty"` //节点id
}

func (x *SetDefNodeNodeReq) Reset() {
	*x = SetDefNodeNodeReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_platform_node_v2_node_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetDefNodeNodeReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetDefNodeNodeReq) ProtoMessage() {}

func (x *SetDefNodeNodeReq) ProtoReflect() protoreflect.Message {
	mi := &file_platform_node_v2_node_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetDefNodeNodeReq.ProtoReflect.Descriptor instead.
func (*SetDefNodeNodeReq) Descriptor() ([]byte, []int) {
	return file_platform_node_v2_node_proto_rawDescGZIP(), []int{21}
}

func (x *SetDefNodeNodeReq) GetNodeId() string {
	if x != nil {
		return x.NodeId
	}
	return ""
}

type SetDefNodeNodeReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *SetDefNodeNodeReply) Reset() {
	*x = SetDefNodeNodeReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_platform_node_v2_node_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetDefNodeNodeReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetDefNodeNodeReply) ProtoMessage() {}

func (x *SetDefNodeNodeReply) ProtoReflect() protoreflect.Message {
	mi := &file_platform_node_v2_node_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetDefNodeNodeReply.ProtoReflect.Descriptor instead.
func (*SetDefNodeNodeReply) Descriptor() ([]byte, []int) {
	return file_platform_node_v2_node_proto_rawDescGZIP(), []int{22}
}

// 获取主节点配置
// -------------------------------------------
type GetMasterSyncInfoReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data string `protobuf:"bytes,1,opt,name=data,proto3" json:"data,omitempty"` //加密数据
}

func (x *GetMasterSyncInfoReq) Reset() {
	*x = GetMasterSyncInfoReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_platform_node_v2_node_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetMasterSyncInfoReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetMasterSyncInfoReq) ProtoMessage() {}

func (x *GetMasterSyncInfoReq) ProtoReflect() protoreflect.Message {
	mi := &file_platform_node_v2_node_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetMasterSyncInfoReq.ProtoReflect.Descriptor instead.
func (*GetMasterSyncInfoReq) Descriptor() ([]byte, []int) {
	return file_platform_node_v2_node_proto_rawDescGZIP(), []int{23}
}

func (x *GetMasterSyncInfoReq) GetData() string {
	if x != nil {
		return x.Data
	}
	return ""
}

type GetMasterSyncInfoReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data *v2.SingedMsg `protobuf:"bytes,1,opt,name=data,proto3" json:"data,omitempty"` //加密信息
}

func (x *GetMasterSyncInfoReply) Reset() {
	*x = GetMasterSyncInfoReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_platform_node_v2_node_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetMasterSyncInfoReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetMasterSyncInfoReply) ProtoMessage() {}

func (x *GetMasterSyncInfoReply) ProtoReflect() protoreflect.Message {
	mi := &file_platform_node_v2_node_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetMasterSyncInfoReply.ProtoReflect.Descriptor instead.
func (*GetMasterSyncInfoReply) Descriptor() ([]byte, []int) {
	return file_platform_node_v2_node_proto_rawDescGZIP(), []int{24}
}

func (x *GetMasterSyncInfoReply) GetData() *v2.SingedMsg {
	if x != nil {
		return x.Data
	}
	return nil
}

// 获取主节点
// -------------------------------------------
type GetMasterInfoReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	NodeId string `protobuf:"bytes,1,opt,name=nodeId,proto3" json:"nodeId,omitempty"` //节点id
}

func (x *GetMasterInfoReq) Reset() {
	*x = GetMasterInfoReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_platform_node_v2_node_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetMasterInfoReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetMasterInfoReq) ProtoMessage() {}

func (x *GetMasterInfoReq) ProtoReflect() protoreflect.Message {
	mi := &file_platform_node_v2_node_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetMasterInfoReq.ProtoReflect.Descriptor instead.
func (*GetMasterInfoReq) Descriptor() ([]byte, []int) {
	return file_platform_node_v2_node_proto_rawDescGZIP(), []int{25}
}

func (x *GetMasterInfoReq) GetNodeId() string {
	if x != nil {
		return x.NodeId
	}
	return ""
}

type GetMasterInfoReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data *v2.NodeMasterSyncInfo `protobuf:"bytes,1,opt,name=data,proto3" json:"data,omitempty"` //同步的节点信息
}

func (x *GetMasterInfoReply) Reset() {
	*x = GetMasterInfoReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_platform_node_v2_node_proto_msgTypes[26]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetMasterInfoReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetMasterInfoReply) ProtoMessage() {}

func (x *GetMasterInfoReply) ProtoReflect() protoreflect.Message {
	mi := &file_platform_node_v2_node_proto_msgTypes[26]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetMasterInfoReply.ProtoReflect.Descriptor instead.
func (*GetMasterInfoReply) Descriptor() ([]byte, []int) {
	return file_platform_node_v2_node_proto_rawDescGZIP(), []int{26}
}

func (x *GetMasterInfoReply) GetData() *v2.NodeMasterSyncInfo {
	if x != nil {
		return x.Data
	}
	return nil
}

// 根据租户id获取租户下发信息
// -------------------------------------------
type GetDistributeInfoReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	NodeId string `protobuf:"bytes,1,opt,name=nodeId,proto3" json:"nodeId,omitempty"` //节点主键
}

func (x *GetDistributeInfoReq) Reset() {
	*x = GetDistributeInfoReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_platform_node_v2_node_proto_msgTypes[27]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetDistributeInfoReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetDistributeInfoReq) ProtoMessage() {}

func (x *GetDistributeInfoReq) ProtoReflect() protoreflect.Message {
	mi := &file_platform_node_v2_node_proto_msgTypes[27]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetDistributeInfoReq.ProtoReflect.Descriptor instead.
func (*GetDistributeInfoReq) Descriptor() ([]byte, []int) {
	return file_platform_node_v2_node_proto_rawDescGZIP(), []int{27}
}

func (x *GetDistributeInfoReq) GetNodeId() string {
	if x != nil {
		return x.NodeId
	}
	return ""
}

type DistributeInfoReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Info     *NodeDetails             `protobuf:"bytes,1,opt,name=info,proto3" json:"info,omitempty"`                                             //节点详情，主节点或租户对应的节点
	NodeType NodeType                 `protobuf:"varint,2,opt,name=nodeType,proto3,enum=api.platform.node.v2.NodeType" json:"nodeType,omitempty"` //节点类型
	Data     *v2.TenantDistributeInfo `protobuf:"bytes,3,opt,name=data,proto3" json:"data,omitempty"`                                             //租户下发的信息
}

func (x *DistributeInfoReply) Reset() {
	*x = DistributeInfoReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_platform_node_v2_node_proto_msgTypes[28]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DistributeInfoReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DistributeInfoReply) ProtoMessage() {}

func (x *DistributeInfoReply) ProtoReflect() protoreflect.Message {
	mi := &file_platform_node_v2_node_proto_msgTypes[28]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DistributeInfoReply.ProtoReflect.Descriptor instead.
func (*DistributeInfoReply) Descriptor() ([]byte, []int) {
	return file_platform_node_v2_node_proto_rawDescGZIP(), []int{28}
}

func (x *DistributeInfoReply) GetInfo() *NodeDetails {
	if x != nil {
		return x.Info
	}
	return nil
}

func (x *DistributeInfoReply) GetNodeType() NodeType {
	if x != nil {
		return x.NodeType
	}
	return NodeType_IndependentNode
}

func (x *DistributeInfoReply) GetData() *v2.TenantDistributeInfo {
	if x != nil {
		return x.Data
	}
	return nil
}

// 根据租户id获取租户下发信息
// -------------------------------------------
type GetMasterNodeDetailsReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	NodeId string `protobuf:"bytes,1,opt,name=nodeId,proto3" json:"nodeId,omitempty"` //节点主键
}

func (x *GetMasterNodeDetailsReq) Reset() {
	*x = GetMasterNodeDetailsReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_platform_node_v2_node_proto_msgTypes[29]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetMasterNodeDetailsReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetMasterNodeDetailsReq) ProtoMessage() {}

func (x *GetMasterNodeDetailsReq) ProtoReflect() protoreflect.Message {
	mi := &file_platform_node_v2_node_proto_msgTypes[29]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetMasterNodeDetailsReq.ProtoReflect.Descriptor instead.
func (*GetMasterNodeDetailsReq) Descriptor() ([]byte, []int) {
	return file_platform_node_v2_node_proto_rawDescGZIP(), []int{29}
}

func (x *GetMasterNodeDetailsReq) GetNodeId() string {
	if x != nil {
		return x.NodeId
	}
	return ""
}

type GetMasterNodeDetailsReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Info *NodeDetails `protobuf:"bytes,1,opt,name=info,proto3" json:"info,omitempty"` //节点详情，主节点或租户对应的节点
}

func (x *GetMasterNodeDetailsReply) Reset() {
	*x = GetMasterNodeDetailsReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_platform_node_v2_node_proto_msgTypes[30]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetMasterNodeDetailsReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetMasterNodeDetailsReply) ProtoMessage() {}

func (x *GetMasterNodeDetailsReply) ProtoReflect() protoreflect.Message {
	mi := &file_platform_node_v2_node_proto_msgTypes[30]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetMasterNodeDetailsReply.ProtoReflect.Descriptor instead.
func (*GetMasterNodeDetailsReply) Descriptor() ([]byte, []int) {
	return file_platform_node_v2_node_proto_rawDescGZIP(), []int{30}
}

func (x *GetMasterNodeDetailsReply) GetInfo() *NodeDetails {
	if x != nil {
		return x.Info
	}
	return nil
}

// 获取所有主节点信息
// -------------------------------------------
type GetAllMasterListReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *GetAllMasterListReq) Reset() {
	*x = GetAllMasterListReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_platform_node_v2_node_proto_msgTypes[31]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAllMasterListReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAllMasterListReq) ProtoMessage() {}

func (x *GetAllMasterListReq) ProtoReflect() protoreflect.Message {
	mi := &file_platform_node_v2_node_proto_msgTypes[31]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAllMasterListReq.ProtoReflect.Descriptor instead.
func (*GetAllMasterListReq) Descriptor() ([]byte, []int) {
	return file_platform_node_v2_node_proto_rawDescGZIP(), []int{31}
}

type GetAllMasterListReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	List []*v2.NodeBase `protobuf:"bytes,1,rep,name=list,proto3" json:"list,omitempty"` //节点信息
}

func (x *GetAllMasterListReply) Reset() {
	*x = GetAllMasterListReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_platform_node_v2_node_proto_msgTypes[32]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAllMasterListReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAllMasterListReply) ProtoMessage() {}

func (x *GetAllMasterListReply) ProtoReflect() protoreflect.Message {
	mi := &file_platform_node_v2_node_proto_msgTypes[32]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAllMasterListReply.ProtoReflect.Descriptor instead.
func (*GetAllMasterListReply) Descriptor() ([]byte, []int) {
	return file_platform_node_v2_node_proto_rawDescGZIP(), []int{32}
}

func (x *GetAllMasterListReply) GetList() []*v2.NodeBase {
	if x != nil {
		return x.List
	}
	return nil
}

// 租户上报信息
// -------------------------------------------
type EscalationReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TenantId string        `protobuf:"bytes,1,opt,name=tenantId,proto3" json:"tenantId,omitempty"` //租户主键
	Data     *v2.SingedMsg `protobuf:"bytes,2,opt,name=data,proto3" json:"data,omitempty"`         //加密信息
}

func (x *EscalationReq) Reset() {
	*x = EscalationReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_platform_node_v2_node_proto_msgTypes[33]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EscalationReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EscalationReq) ProtoMessage() {}

func (x *EscalationReq) ProtoReflect() protoreflect.Message {
	mi := &file_platform_node_v2_node_proto_msgTypes[33]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EscalationReq.ProtoReflect.Descriptor instead.
func (*EscalationReq) Descriptor() ([]byte, []int) {
	return file_platform_node_v2_node_proto_rawDescGZIP(), []int{33}
}

func (x *EscalationReq) GetTenantId() string {
	if x != nil {
		return x.TenantId
	}
	return ""
}

func (x *EscalationReq) GetData() *v2.SingedMsg {
	if x != nil {
		return x.Data
	}
	return nil
}

type EscalationReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data *v2.SingedMsg `protobuf:"bytes,1,opt,name=data,proto3" json:"data,omitempty"` //加密信息
}

func (x *EscalationReply) Reset() {
	*x = EscalationReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_platform_node_v2_node_proto_msgTypes[34]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EscalationReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EscalationReply) ProtoMessage() {}

func (x *EscalationReply) ProtoReflect() protoreflect.Message {
	mi := &file_platform_node_v2_node_proto_msgTypes[34]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EscalationReply.ProtoReflect.Descriptor instead.
func (*EscalationReply) Descriptor() ([]byte, []int) {
	return file_platform_node_v2_node_proto_rawDescGZIP(), []int{34}
}

func (x *EscalationReply) GetData() *v2.SingedMsg {
	if x != nil {
		return x.Data
	}
	return nil
}

type NodeAndManager struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Managers []string     `protobuf:"bytes,1,rep,name=managers,proto3" json:"managers,omitempty"` //平台节点信息
	Node     *v2.NodeBase `protobuf:"bytes,2,opt,name=node,proto3" json:"node,omitempty"`         //节点详情
}

func (x *NodeAndManager) Reset() {
	*x = NodeAndManager{}
	if protoimpl.UnsafeEnabled {
		mi := &file_platform_node_v2_node_proto_msgTypes[35]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NodeAndManager) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NodeAndManager) ProtoMessage() {}

func (x *NodeAndManager) ProtoReflect() protoreflect.Message {
	mi := &file_platform_node_v2_node_proto_msgTypes[35]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NodeAndManager.ProtoReflect.Descriptor instead.
func (*NodeAndManager) Descriptor() ([]byte, []int) {
	return file_platform_node_v2_node_proto_rawDescGZIP(), []int{35}
}

func (x *NodeAndManager) GetManagers() []string {
	if x != nil {
		return x.Managers
	}
	return nil
}

func (x *NodeAndManager) GetNode() *v2.NodeBase {
	if x != nil {
		return x.Node
	}
	return nil
}

// 查询节点以及管理节点列表
// -------------------------------------------
type GetNodesAndManagersReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code    string `protobuf:"bytes,1,opt,name=code,proto3" json:"code,omitempty"`       //邀请码
	Version string `protobuf:"bytes,2,opt,name=version,proto3" json:"version,omitempty"` //版本
}

func (x *GetNodesAndManagersReq) Reset() {
	*x = GetNodesAndManagersReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_platform_node_v2_node_proto_msgTypes[36]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetNodesAndManagersReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetNodesAndManagersReq) ProtoMessage() {}

func (x *GetNodesAndManagersReq) ProtoReflect() protoreflect.Message {
	mi := &file_platform_node_v2_node_proto_msgTypes[36]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetNodesAndManagersReq.ProtoReflect.Descriptor instead.
func (*GetNodesAndManagersReq) Descriptor() ([]byte, []int) {
	return file_platform_node_v2_node_proto_rawDescGZIP(), []int{36}
}

func (x *GetNodesAndManagersReq) GetCode() string {
	if x != nil {
		return x.Code
	}
	return ""
}

func (x *GetNodesAndManagersReq) GetVersion() string {
	if x != nil {
		return x.Version
	}
	return ""
}

type GetNodesAndManagersReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DefNodeName string         `protobuf:"bytes,1,opt,name=defNodeName,proto3" json:"defNodeName,omitempty"`
	Managers    []string       `protobuf:"bytes,2,rep,name=managers,proto3" json:"managers,omitempty"` //平台节点信息
	Nodes       []*v2.NodeBase `protobuf:"bytes,3,rep,name=nodes,proto3" json:"nodes,omitempty"`       //节点详情
}

func (x *GetNodesAndManagersReply) Reset() {
	*x = GetNodesAndManagersReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_platform_node_v2_node_proto_msgTypes[37]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetNodesAndManagersReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetNodesAndManagersReply) ProtoMessage() {}

func (x *GetNodesAndManagersReply) ProtoReflect() protoreflect.Message {
	mi := &file_platform_node_v2_node_proto_msgTypes[37]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetNodesAndManagersReply.ProtoReflect.Descriptor instead.
func (*GetNodesAndManagersReply) Descriptor() ([]byte, []int) {
	return file_platform_node_v2_node_proto_rawDescGZIP(), []int{37}
}

func (x *GetNodesAndManagersReply) GetDefNodeName() string {
	if x != nil {
		return x.DefNodeName
	}
	return ""
}

func (x *GetNodesAndManagersReply) GetManagers() []string {
	if x != nil {
		return x.Managers
	}
	return nil
}

func (x *GetNodesAndManagersReply) GetNodes() []*v2.NodeBase {
	if x != nil {
		return x.Nodes
	}
	return nil
}

// 根据id获取节点数据
// -------------------------------------------
type GetNodeByIDReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	NodeId []string `protobuf:"bytes,1,rep,name=NodeId,proto3" json:"NodeId,omitempty"` //节点id
}

func (x *GetNodeByIDReq) Reset() {
	*x = GetNodeByIDReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_platform_node_v2_node_proto_msgTypes[38]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetNodeByIDReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetNodeByIDReq) ProtoMessage() {}

func (x *GetNodeByIDReq) ProtoReflect() protoreflect.Message {
	mi := &file_platform_node_v2_node_proto_msgTypes[38]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetNodeByIDReq.ProtoReflect.Descriptor instead.
func (*GetNodeByIDReq) Descriptor() ([]byte, []int) {
	return file_platform_node_v2_node_proto_rawDescGZIP(), []int{38}
}

func (x *GetNodeByIDReq) GetNodeId() []string {
	if x != nil {
		return x.NodeId
	}
	return nil
}

type GetNodeByIDReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	List []*v2.NodeBase `protobuf:"bytes,1,rep,name=list,proto3" json:"list,omitempty"` //节点详情
}

func (x *GetNodeByIDReply) Reset() {
	*x = GetNodeByIDReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_platform_node_v2_node_proto_msgTypes[39]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetNodeByIDReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetNodeByIDReply) ProtoMessage() {}

func (x *GetNodeByIDReply) ProtoReflect() protoreflect.Message {
	mi := &file_platform_node_v2_node_proto_msgTypes[39]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetNodeByIDReply.ProtoReflect.Descriptor instead.
func (*GetNodeByIDReply) Descriptor() ([]byte, []int) {
	return file_platform_node_v2_node_proto_rawDescGZIP(), []int{39}
}

func (x *GetNodeByIDReply) GetList() []*v2.NodeBase {
	if x != nil {
		return x.List
	}
	return nil
}

var File_platform_node_v2_node_proto protoreflect.FileDescriptor

var file_platform_node_v2_node_proto_rawDesc = []byte{
	0x0a, 0x1b, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x2f,
	0x76, 0x32, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x14, 0x61,
	0x70, 0x69, 0x2e, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x2e, 0x6e, 0x6f, 0x64, 0x65,
	0x2e, 0x76, 0x32, 0x1a, 0x17, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x2f, 0x76, 0x61,
	0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1a, 0x63, 0x6f,
	0x6d, 0x6d, 0x6f, 0x6e, 0x2f, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2f, 0x76, 0x32, 0x2f, 0x63, 0x6f,
	0x6e, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1a, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e,
	0x2f, 0x65, 0x6e, 0x75, 0x6d, 0x2f, 0x76, 0x32, 0x2f, 0x65, 0x6e, 0x75, 0x6d, 0x73, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1a, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2f, 0x6d, 0x6f, 0x64,
	0x65, 0x6c, 0x2f, 0x76, 0x32, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x22, 0x70, 0x0a, 0x0b, 0x4e, 0x6f, 0x64, 0x65, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x12,
	0x16, 0x0a, 0x06, 0x70, 0x75, 0x62, 0x4b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x06, 0x70, 0x75, 0x62, 0x4b, 0x65, 0x79, 0x12, 0x16, 0x0a, 0x06, 0x70, 0x72, 0x69, 0x4b, 0x65,
	0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x70, 0x72, 0x69, 0x4b, 0x65, 0x79, 0x12,
	0x31, 0x0a, 0x04, 0x62, 0x61, 0x73, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e,
	0x61, 0x70, 0x69, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c,
	0x2e, 0x76, 0x32, 0x2e, 0x4e, 0x6f, 0x64, 0x65, 0x42, 0x61, 0x73, 0x65, 0x52, 0x04, 0x62, 0x61,
	0x73, 0x65, 0x22, 0xa2, 0x03, 0x0a, 0x0a, 0x41, 0x64, 0x64, 0x4e, 0x6f, 0x64, 0x65, 0x52, 0x65,
	0x71, 0x12, 0x1b, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42,
	0x07, 0xfa, 0x42, 0x04, 0x72, 0x02, 0x10, 0x01, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1c,
	0x0a, 0x09, 0x6d, 0x61, 0x73, 0x74, 0x65, 0x72, 0x41, 0x70, 0x69, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x09, 0x6d, 0x61, 0x73, 0x74, 0x65, 0x72, 0x41, 0x70, 0x69, 0x12, 0x1b, 0x0a, 0x04,
	0x63, 0x6f, 0x64, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x72,
	0x02, 0x10, 0x04, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x69, 0x6d, 0x41,
	0x70, 0x69, 0x55, 0x72, 0x6c, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x69, 0x6d, 0x41,
	0x70, 0x69, 0x55, 0x72, 0x6c, 0x12, 0x18, 0x0a, 0x07, 0x69, 0x6d, 0x57, 0x73, 0x55, 0x72, 0x6c,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x69, 0x6d, 0x57, 0x73, 0x55, 0x72, 0x6c, 0x12,
	0x18, 0x0a, 0x07, 0x61, 0x76, 0x41, 0x70, 0x70, 0x69, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x07, 0x61, 0x76, 0x41, 0x70, 0x70, 0x69, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x61, 0x76, 0x53,
	0x65, 0x63, 0x72, 0x65, 0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x61, 0x76, 0x53,
	0x65, 0x63, 0x72, 0x65, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x6c, 0x6f, 0x67, 0x6f, 0x18, 0x08, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x6c, 0x6f, 0x67, 0x6f, 0x12, 0x18, 0x0a, 0x07, 0x76, 0x65, 0x72,
	0x73, 0x69, 0x6f, 0x6e, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x76, 0x65, 0x72, 0x73,
	0x69, 0x6f, 0x6e, 0x12, 0x3a, 0x0a, 0x08, 0x6e, 0x6f, 0x64, 0x65, 0x54, 0x79, 0x70, 0x65, 0x18,
	0x0a, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1e, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x70, 0x6c, 0x61, 0x74,
	0x66, 0x6f, 0x72, 0x6d, 0x2e, 0x6e, 0x6f, 0x64, 0x65, 0x2e, 0x76, 0x32, 0x2e, 0x4e, 0x6f, 0x64,
	0x65, 0x54, 0x79, 0x70, 0x65, 0x52, 0x08, 0x6e, 0x6f, 0x64, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12,
	0x22, 0x0a, 0x0c, 0x6d, 0x61, 0x73, 0x74, 0x65, 0x72, 0x4e, 0x6f, 0x64, 0x65, 0x49, 0x64, 0x18,
	0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x6d, 0x61, 0x73, 0x74, 0x65, 0x72, 0x4e, 0x6f, 0x64,
	0x65, 0x49, 0x64, 0x12, 0x24, 0x0a, 0x0d, 0x70, 0x72, 0x6f, 0x6d, 0x6f, 0x74, 0x69, 0x6f, 0x6e,
	0x43, 0x6f, 0x64, 0x65, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x70, 0x72, 0x6f, 0x6d,
	0x6f, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x6d, 0x61, 0x6e,
	0x61, 0x67, 0x65, 0x41, 0x70, 0x69, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6d, 0x61,
	0x6e, 0x61, 0x67, 0x65, 0x41, 0x70, 0x69, 0x22, 0x26, 0x0a, 0x0c, 0x41, 0x64, 0x64, 0x4e, 0x6f,
	0x64, 0x65, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x16, 0x0a, 0x06, 0x6e, 0x6f, 0x64, 0x65, 0x49,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x6e, 0x6f, 0x64, 0x65, 0x49, 0x64, 0x22,
	0x20, 0x0a, 0x06, 0x44, 0x65, 0x6c, 0x52, 0x65, 0x71, 0x12, 0x16, 0x0a, 0x06, 0x6e, 0x6f, 0x64,
	0x65, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x6e, 0x6f, 0x64, 0x65, 0x49,
	0x64, 0x22, 0x0a, 0x0a, 0x08, 0x44, 0x65, 0x6c, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0xf4, 0x03,
	0x0a, 0x07, 0x45, 0x64, 0x69, 0x74, 0x52, 0x65, 0x71, 0x12, 0x16, 0x0a, 0x06, 0x6e, 0x6f, 0x64,
	0x65, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x6e, 0x6f, 0x64, 0x65, 0x49,
	0x64, 0x12, 0x17, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x48,
	0x00, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x88, 0x01, 0x01, 0x12, 0x21, 0x0a, 0x09, 0x6d, 0x61,
	0x73, 0x74, 0x65, 0x72, 0x41, 0x70, 0x69, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x48, 0x01, 0x52,
	0x09, 0x6d, 0x61, 0x73, 0x74, 0x65, 0x72, 0x41, 0x70, 0x69, 0x88, 0x01, 0x01, 0x12, 0x17, 0x0a,
	0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x48, 0x02, 0x52, 0x04, 0x63,
	0x6f, 0x64, 0x65, 0x88, 0x01, 0x01, 0x12, 0x1f, 0x0a, 0x08, 0x69, 0x6d, 0x41, 0x70, 0x69, 0x55,
	0x72, 0x6c, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x48, 0x03, 0x52, 0x08, 0x69, 0x6d, 0x41, 0x70,
	0x69, 0x55, 0x72, 0x6c, 0x88, 0x01, 0x01, 0x12, 0x1d, 0x0a, 0x07, 0x69, 0x6d, 0x57, 0x73, 0x55,
	0x72, 0x6c, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x48, 0x04, 0x52, 0x07, 0x69, 0x6d, 0x57, 0x73,
	0x55, 0x72, 0x6c, 0x88, 0x01, 0x01, 0x12, 0x1d, 0x0a, 0x07, 0x61, 0x76, 0x41, 0x70, 0x70, 0x69,
	0x64, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x48, 0x05, 0x52, 0x07, 0x61, 0x76, 0x41, 0x70, 0x70,
	0x69, 0x64, 0x88, 0x01, 0x01, 0x12, 0x1f, 0x0a, 0x08, 0x61, 0x76, 0x53, 0x65, 0x63, 0x72, 0x65,
	0x74, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x48, 0x06, 0x52, 0x08, 0x61, 0x76, 0x53, 0x65, 0x63,
	0x72, 0x65, 0x74, 0x88, 0x01, 0x01, 0x12, 0x17, 0x0a, 0x04, 0x6c, 0x6f, 0x67, 0x6f, 0x18, 0x09,
	0x20, 0x01, 0x28, 0x09, 0x48, 0x07, 0x52, 0x04, 0x6c, 0x6f, 0x67, 0x6f, 0x88, 0x01, 0x01, 0x12,
	0x1d, 0x0a, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09,
	0x48, 0x08, 0x52, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x88, 0x01, 0x01, 0x12, 0x29,
	0x0a, 0x0d, 0x70, 0x72, 0x6f, 0x6d, 0x6f, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x64, 0x65, 0x18,
	0x0b, 0x20, 0x01, 0x28, 0x09, 0x48, 0x09, 0x52, 0x0d, 0x70, 0x72, 0x6f, 0x6d, 0x6f, 0x74, 0x69,
	0x6f, 0x6e, 0x43, 0x6f, 0x64, 0x65, 0x88, 0x01, 0x01, 0x12, 0x17, 0x0a, 0x04, 0x73, 0x6f, 0x72,
	0x74, 0x18, 0x16, 0x20, 0x01, 0x28, 0x05, 0x48, 0x0a, 0x52, 0x04, 0x73, 0x6f, 0x72, 0x74, 0x88,
	0x01, 0x01, 0x42, 0x07, 0x0a, 0x05, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x42, 0x0c, 0x0a, 0x0a, 0x5f,
	0x6d, 0x61, 0x73, 0x74, 0x65, 0x72, 0x41, 0x70, 0x69, 0x42, 0x07, 0x0a, 0x05, 0x5f, 0x63, 0x6f,
	0x64, 0x65, 0x42, 0x0b, 0x0a, 0x09, 0x5f, 0x69, 0x6d, 0x41, 0x70, 0x69, 0x55, 0x72, 0x6c, 0x42,
	0x0a, 0x0a, 0x08, 0x5f, 0x69, 0x6d, 0x57, 0x73, 0x55, 0x72, 0x6c, 0x42, 0x0a, 0x0a, 0x08, 0x5f,
	0x61, 0x76, 0x41, 0x70, 0x70, 0x69, 0x64, 0x42, 0x0b, 0x0a, 0x09, 0x5f, 0x61, 0x76, 0x53, 0x65,
	0x63, 0x72, 0x65, 0x74, 0x42, 0x07, 0x0a, 0x05, 0x5f, 0x6c, 0x6f, 0x67, 0x6f, 0x42, 0x0a, 0x0a,
	0x08, 0x5f, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x42, 0x10, 0x0a, 0x0e, 0x5f, 0x70, 0x72,
	0x6f, 0x6d, 0x6f, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x64, 0x65, 0x42, 0x07, 0x0a, 0x05, 0x5f,
	0x73, 0x6f, 0x72, 0x74, 0x22, 0x0b, 0x0a, 0x09, 0x45, 0x64, 0x69, 0x74, 0x52, 0x65, 0x70, 0x6c,
	0x79, 0x22, 0xbd, 0x01, 0x0a, 0x0d, 0x45, 0x64, 0x69, 0x74, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x52, 0x65, 0x71, 0x12, 0x16, 0x0a, 0x06, 0x6e, 0x6f, 0x64, 0x65, 0x49, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x06, 0x6e, 0x6f, 0x64, 0x65, 0x49, 0x64, 0x12, 0x38, 0x0a, 0x06, 0x73,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x20, 0x2e, 0x61, 0x70,
	0x69, 0x2e, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x2e, 0x6e, 0x6f, 0x64, 0x65, 0x2e,
	0x76, 0x32, 0x2e, 0x4e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x06, 0x73,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x21, 0x0a, 0x09, 0x73, 0x74, 0x61, 0x72, 0x74, 0x54, 0x69,
	0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x48, 0x00, 0x52, 0x09, 0x73, 0x74, 0x61, 0x72,
	0x74, 0x54, 0x69, 0x6d, 0x65, 0x88, 0x01, 0x01, 0x12, 0x1d, 0x0a, 0x07, 0x65, 0x6e, 0x64, 0x54,
	0x69, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x48, 0x01, 0x52, 0x07, 0x65, 0x6e, 0x64,
	0x54, 0x69, 0x6d, 0x65, 0x88, 0x01, 0x01, 0x42, 0x0c, 0x0a, 0x0a, 0x5f, 0x73, 0x74, 0x61, 0x72,
	0x74, 0x54, 0x69, 0x6d, 0x65, 0x42, 0x0a, 0x0a, 0x08, 0x5f, 0x65, 0x6e, 0x64, 0x54, 0x69, 0x6d,
	0x65, 0x22, 0x11, 0x0a, 0x0f, 0x45, 0x64, 0x69, 0x74, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52,
	0x65, 0x70, 0x6c, 0x79, 0x22, 0x25, 0x0a, 0x0b, 0x52, 0x65, 0x73, 0x65, 0x74, 0x4b, 0x65, 0x79,
	0x52, 0x65, 0x71, 0x12, 0x16, 0x0a, 0x06, 0x6e, 0x6f, 0x64, 0x65, 0x49, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x06, 0x6e, 0x6f, 0x64, 0x65, 0x49, 0x64, 0x22, 0x0f, 0x0a, 0x0d, 0x52,
	0x65, 0x73, 0x65, 0x74, 0x4b, 0x65, 0x79, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x24, 0x0a, 0x0a,
	0x47, 0x65, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x71, 0x12, 0x16, 0x0a, 0x06, 0x6e, 0x6f,
	0x64, 0x65, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x6e, 0x6f, 0x64, 0x65,
	0x49, 0x64, 0x22, 0x45, 0x0a, 0x0c, 0x47, 0x65, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x70,
	0x6c, 0x79, 0x12, 0x35, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x21, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x2e,
	0x6e, 0x6f, 0x64, 0x65, 0x2e, 0x76, 0x32, 0x2e, 0x4e, 0x6f, 0x64, 0x65, 0x44, 0x65, 0x74, 0x61,
	0x69, 0x6c, 0x73, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0x26, 0x0a, 0x10, 0x47, 0x65, 0x74,
	0x4e, 0x6f, 0x64, 0x65, 0x42, 0x79, 0x43, 0x6f, 0x64, 0x65, 0x52, 0x65, 0x71, 0x12, 0x12, 0x0a,
	0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x63, 0x6f, 0x64,
	0x65, 0x22, 0x47, 0x0a, 0x12, 0x47, 0x65, 0x74, 0x4e, 0x6f, 0x64, 0x65, 0x42, 0x79, 0x43, 0x6f,
	0x64, 0x65, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x31, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x63, 0x6f, 0x6d, 0x6d,
	0x6f, 0x6e, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x76, 0x32, 0x2e, 0x4e, 0x6f, 0x64, 0x65,
	0x42, 0x61, 0x73, 0x65, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0xbd, 0x01, 0x0a, 0x0a, 0x47,
	0x65, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x12, 0x33, 0x0a, 0x04, 0x70, 0x61, 0x67,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x63, 0x6f,
	0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x76, 0x32, 0x2e, 0x50, 0x61,
	0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x04, 0x70, 0x61, 0x67, 0x65, 0x12, 0x12,
	0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61,
	0x6d, 0x65, 0x12, 0x38, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x0e, 0x32, 0x20, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72,
	0x6d, 0x2e, 0x6e, 0x6f, 0x64, 0x65, 0x2e, 0x76, 0x32, 0x2e, 0x4e, 0x6f, 0x64, 0x65, 0x53, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x18, 0x0a, 0x07,
	0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x76,
	0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x22, 0x5b, 0x0a, 0x0c, 0x47, 0x65,
	0x74, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f,
	0x74, 0x61, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c,
	0x12, 0x35, 0x0a, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x21,
	0x2e, 0x61, 0x70, 0x69, 0x2e, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x2e, 0x6e, 0x6f,
	0x64, 0x65, 0x2e, 0x76, 0x32, 0x2e, 0x4e, 0x6f, 0x64, 0x65, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c,
	0x73, 0x52, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x22, 0x8b, 0x01, 0x0a, 0x0d, 0x47, 0x65, 0x74, 0x41,
	0x6c, 0x6c, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x38, 0x0a,
	0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x20, 0x2e,
	0x61, 0x70, 0x69, 0x2e, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x2e, 0x6e, 0x6f, 0x64,
	0x65, 0x2e, 0x76, 0x32, 0x2e, 0x4e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52,
	0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69,
	0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f,
	0x6e, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x63, 0x6f, 0x64, 0x65, 0x22, 0x44, 0x0a, 0x0f, 0x47, 0x65, 0x74, 0x41, 0x6c, 0x6c, 0x4c,
	0x69, 0x73, 0x74, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x31, 0x0a, 0x04, 0x6c, 0x69, 0x73, 0x74,
	0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x63, 0x6f, 0x6d,
	0x6d, 0x6f, 0x6e, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x76, 0x32, 0x2e, 0x4e, 0x6f, 0x64,
	0x65, 0x42, 0x61, 0x73, 0x65, 0x52, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x22, 0x13, 0x0a, 0x11, 0x47,
	0x65, 0x74, 0x44, 0x65, 0x66, 0x4e, 0x6f, 0x64, 0x65, 0x4e, 0x6f, 0x64, 0x65, 0x52, 0x65, 0x71,
	0x22, 0x48, 0x0a, 0x13, 0x47, 0x65, 0x74, 0x44, 0x65, 0x66, 0x4e, 0x6f, 0x64, 0x65, 0x4e, 0x6f,
	0x64, 0x65, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x31, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x63, 0x6f, 0x6d, 0x6d,
	0x6f, 0x6e, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x76, 0x32, 0x2e, 0x4e, 0x6f, 0x64, 0x65,
	0x42, 0x61, 0x73, 0x65, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0x2b, 0x0a, 0x11, 0x53, 0x65,
	0x74, 0x44, 0x65, 0x66, 0x4e, 0x6f, 0x64, 0x65, 0x4e, 0x6f, 0x64, 0x65, 0x52, 0x65, 0x71, 0x12,
	0x16, 0x0a, 0x06, 0x6e, 0x6f, 0x64, 0x65, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x06, 0x6e, 0x6f, 0x64, 0x65, 0x49, 0x64, 0x22, 0x15, 0x0a, 0x13, 0x53, 0x65, 0x74, 0x44, 0x65,
	0x66, 0x4e, 0x6f, 0x64, 0x65, 0x4e, 0x6f, 0x64, 0x65, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x2a,
	0x0a, 0x14, 0x47, 0x65, 0x74, 0x4d, 0x61, 0x73, 0x74, 0x65, 0x72, 0x53, 0x79, 0x6e, 0x63, 0x49,
	0x6e, 0x66, 0x6f, 0x52, 0x65, 0x71, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0x4c, 0x0a, 0x16, 0x47, 0x65,
	0x74, 0x4d, 0x61, 0x73, 0x74, 0x65, 0x72, 0x53, 0x79, 0x6e, 0x63, 0x49, 0x6e, 0x66, 0x6f, 0x52,
	0x65, 0x70, 0x6c, 0x79, 0x12, 0x32, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e,
	0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x76, 0x32, 0x2e, 0x53, 0x69, 0x6e, 0x67, 0x65, 0x64, 0x4d,
	0x73, 0x67, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0x2a, 0x0a, 0x10, 0x47, 0x65, 0x74, 0x4d,
	0x61, 0x73, 0x74, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x71, 0x12, 0x16, 0x0a, 0x06,
	0x6e, 0x6f, 0x64, 0x65, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x6e, 0x6f,
	0x64, 0x65, 0x49, 0x64, 0x22, 0x51, 0x0a, 0x12, 0x47, 0x65, 0x74, 0x4d, 0x61, 0x73, 0x74, 0x65,
	0x72, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x3b, 0x0a, 0x04, 0x64, 0x61,
	0x74, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x27, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x63,
	0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x76, 0x32, 0x2e, 0x4e,
	0x6f, 0x64, 0x65, 0x4d, 0x61, 0x73, 0x74, 0x65, 0x72, 0x53, 0x79, 0x6e, 0x63, 0x49, 0x6e, 0x66,
	0x6f, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0x2e, 0x0a, 0x14, 0x47, 0x65, 0x74, 0x44, 0x69,
	0x73, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x71, 0x12,
	0x16, 0x0a, 0x06, 0x6e, 0x6f, 0x64, 0x65, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x06, 0x6e, 0x6f, 0x64, 0x65, 0x49, 0x64, 0x22, 0xc7, 0x01, 0x0a, 0x13, 0x44, 0x69, 0x73, 0x74,
	0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12,
	0x35, 0x0a, 0x04, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x21, 0x2e,
	0x61, 0x70, 0x69, 0x2e, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x2e, 0x6e, 0x6f, 0x64,
	0x65, 0x2e, 0x76, 0x32, 0x2e, 0x4e, 0x6f, 0x64, 0x65, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73,
	0x52, 0x04, 0x69, 0x6e, 0x66, 0x6f, 0x12, 0x3a, 0x0a, 0x08, 0x6e, 0x6f, 0x64, 0x65, 0x54, 0x79,
	0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1e, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x70,
	0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x2e, 0x6e, 0x6f, 0x64, 0x65, 0x2e, 0x76, 0x32, 0x2e,
	0x4e, 0x6f, 0x64, 0x65, 0x54, 0x79, 0x70, 0x65, 0x52, 0x08, 0x6e, 0x6f, 0x64, 0x65, 0x54, 0x79,
	0x70, 0x65, 0x12, 0x3d, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x29, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x6d, 0x6f,
	0x64, 0x65, 0x6c, 0x2e, 0x76, 0x32, 0x2e, 0x54, 0x65, 0x6e, 0x61, 0x6e, 0x74, 0x44, 0x69, 0x73,
	0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x04, 0x64, 0x61, 0x74,
	0x61, 0x22, 0x31, 0x0a, 0x17, 0x47, 0x65, 0x74, 0x4d, 0x61, 0x73, 0x74, 0x65, 0x72, 0x4e, 0x6f,
	0x64, 0x65, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x52, 0x65, 0x71, 0x12, 0x16, 0x0a, 0x06,
	0x6e, 0x6f, 0x64, 0x65, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x6e, 0x6f,
	0x64, 0x65, 0x49, 0x64, 0x22, 0x52, 0x0a, 0x19, 0x47, 0x65, 0x74, 0x4d, 0x61, 0x73, 0x74, 0x65,
	0x72, 0x4e, 0x6f, 0x64, 0x65, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x52, 0x65, 0x70, 0x6c,
	0x79, 0x12, 0x35, 0x0a, 0x04, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x21, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x2e, 0x6e,
	0x6f, 0x64, 0x65, 0x2e, 0x76, 0x32, 0x2e, 0x4e, 0x6f, 0x64, 0x65, 0x44, 0x65, 0x74, 0x61, 0x69,
	0x6c, 0x73, 0x52, 0x04, 0x69, 0x6e, 0x66, 0x6f, 0x22, 0x15, 0x0a, 0x13, 0x47, 0x65, 0x74, 0x41,
	0x6c, 0x6c, 0x4d, 0x61, 0x73, 0x74, 0x65, 0x72, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x22,
	0x4a, 0x0a, 0x15, 0x47, 0x65, 0x74, 0x41, 0x6c, 0x6c, 0x4d, 0x61, 0x73, 0x74, 0x65, 0x72, 0x4c,
	0x69, 0x73, 0x74, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x31, 0x0a, 0x04, 0x6c, 0x69, 0x73, 0x74,
	0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x63, 0x6f, 0x6d,
	0x6d, 0x6f, 0x6e, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x76, 0x32, 0x2e, 0x4e, 0x6f, 0x64,
	0x65, 0x42, 0x61, 0x73, 0x65, 0x52, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x22, 0x5f, 0x0a, 0x0d, 0x45,
	0x73, 0x63, 0x61, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x12, 0x1a, 0x0a, 0x08,
	0x74, 0x65, 0x6e, 0x61, 0x6e, 0x74, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08,
	0x74, 0x65, 0x6e, 0x61, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x32, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x63, 0x6f, 0x6d,
	0x6d, 0x6f, 0x6e, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x76, 0x32, 0x2e, 0x53, 0x69, 0x6e,
	0x67, 0x65, 0x64, 0x4d, 0x73, 0x67, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0x45, 0x0a, 0x0f,
	0x45, 0x73, 0x63, 0x61, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12,
	0x32, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1e, 0x2e,
	0x61, 0x70, 0x69, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c,
	0x2e, 0x76, 0x32, 0x2e, 0x53, 0x69, 0x6e, 0x67, 0x65, 0x64, 0x4d, 0x73, 0x67, 0x52, 0x04, 0x64,
	0x61, 0x74, 0x61, 0x22, 0x5f, 0x0a, 0x0e, 0x4e, 0x6f, 0x64, 0x65, 0x41, 0x6e, 0x64, 0x4d, 0x61,
	0x6e, 0x61, 0x67, 0x65, 0x72, 0x12, 0x1a, 0x0a, 0x08, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72,
	0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x08, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72,
	0x73, 0x12, 0x31, 0x0a, 0x04, 0x6e, 0x6f, 0x64, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x1d, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x6d, 0x6f, 0x64,
	0x65, 0x6c, 0x2e, 0x76, 0x32, 0x2e, 0x4e, 0x6f, 0x64, 0x65, 0x42, 0x61, 0x73, 0x65, 0x52, 0x04,
	0x6e, 0x6f, 0x64, 0x65, 0x22, 0x46, 0x0a, 0x16, 0x47, 0x65, 0x74, 0x4e, 0x6f, 0x64, 0x65, 0x73,
	0x41, 0x6e, 0x64, 0x4d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x73, 0x52, 0x65, 0x71, 0x12, 0x12,
	0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x63, 0x6f,
	0x64, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x22, 0x8d, 0x01, 0x0a,
	0x18, 0x47, 0x65, 0x74, 0x4e, 0x6f, 0x64, 0x65, 0x73, 0x41, 0x6e, 0x64, 0x4d, 0x61, 0x6e, 0x61,
	0x67, 0x65, 0x72, 0x73, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x66,
	0x4e, 0x6f, 0x64, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b,
	0x64, 0x65, 0x66, 0x4e, 0x6f, 0x64, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x6d,
	0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x09, 0x52, 0x08, 0x6d,
	0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x73, 0x12, 0x33, 0x0a, 0x05, 0x6e, 0x6f, 0x64, 0x65, 0x73,
	0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x63, 0x6f, 0x6d,
	0x6d, 0x6f, 0x6e, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x76, 0x32, 0x2e, 0x4e, 0x6f, 0x64,
	0x65, 0x42, 0x61, 0x73, 0x65, 0x52, 0x05, 0x6e, 0x6f, 0x64, 0x65, 0x73, 0x22, 0x28, 0x0a, 0x0e,
	0x47, 0x65, 0x74, 0x4e, 0x6f, 0x64, 0x65, 0x42, 0x79, 0x49, 0x44, 0x52, 0x65, 0x71, 0x12, 0x16,
	0x0a, 0x06, 0x4e, 0x6f, 0x64, 0x65, 0x49, 0x64, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x06,
	0x4e, 0x6f, 0x64, 0x65, 0x49, 0x64, 0x22, 0x45, 0x0a, 0x10, 0x47, 0x65, 0x74, 0x4e, 0x6f, 0x64,
	0x65, 0x42, 0x79, 0x49, 0x44, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x31, 0x0a, 0x04, 0x6c, 0x69,
	0x73, 0x74, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x63,
	0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x76, 0x32, 0x2e, 0x4e,
	0x6f, 0x64, 0x65, 0x42, 0x61, 0x73, 0x65, 0x52, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x2a, 0x2e, 0x0a,
	0x08, 0x4e, 0x6f, 0x64, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x13, 0x0a, 0x0f, 0x49, 0x6e, 0x64,
	0x65, 0x70, 0x65, 0x6e, 0x64, 0x65, 0x6e, 0x74, 0x4e, 0x6f, 0x64, 0x65, 0x10, 0x00, 0x12, 0x0d,
	0x0a, 0x09, 0x50, 0x72, 0x6f, 0x78, 0x79, 0x4e, 0x6f, 0x64, 0x65, 0x10, 0x01, 0x2a, 0x44, 0x0a,
	0x0a, 0x4e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x0b, 0x0a, 0x07, 0x55,
	0x6e, 0x6b, 0x6e, 0x6f, 0x77, 0x6e, 0x10, 0x00, 0x12, 0x0a, 0x0a, 0x06, 0x45, 0x6e, 0x61, 0x62,
	0x6c, 0x65, 0x10, 0x01, 0x12, 0x0e, 0x0a, 0x0a, 0x44, 0x65, 0x61, 0x63, 0x74, 0x69, 0x76, 0x61,
	0x74, 0x65, 0x10, 0x02, 0x12, 0x0d, 0x0a, 0x09, 0x54, 0x69, 0x6d, 0x65, 0x4c, 0x69, 0x6d, 0x69,
	0x74, 0x10, 0x03, 0x32, 0xea, 0x0e, 0x0a, 0x04, 0x4e, 0x6f, 0x64, 0x65, 0x12, 0x4b, 0x0a, 0x03,
	0x41, 0x64, 0x64, 0x12, 0x20, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f,
	0x72, 0x6d, 0x2e, 0x6e, 0x6f, 0x64, 0x65, 0x2e, 0x76, 0x32, 0x2e, 0x41, 0x64, 0x64, 0x4e, 0x6f,
	0x64, 0x65, 0x52, 0x65, 0x71, 0x1a, 0x22, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x70, 0x6c, 0x61, 0x74,
	0x66, 0x6f, 0x72, 0x6d, 0x2e, 0x6e, 0x6f, 0x64, 0x65, 0x2e, 0x76, 0x32, 0x2e, 0x41, 0x64, 0x64,
	0x4e, 0x6f, 0x64, 0x65, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x43, 0x0a, 0x03, 0x44, 0x65, 0x6c,
	0x12, 0x1c, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x2e,
	0x6e, 0x6f, 0x64, 0x65, 0x2e, 0x76, 0x32, 0x2e, 0x44, 0x65, 0x6c, 0x52, 0x65, 0x71, 0x1a, 0x1e,
	0x2e, 0x61, 0x70, 0x69, 0x2e, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x2e, 0x6e, 0x6f,
	0x64, 0x65, 0x2e, 0x76, 0x32, 0x2e, 0x44, 0x65, 0x6c, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x46,
	0x0a, 0x04, 0x45, 0x64, 0x69, 0x74, 0x12, 0x1d, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x70, 0x6c, 0x61,
	0x74, 0x66, 0x6f, 0x72, 0x6d, 0x2e, 0x6e, 0x6f, 0x64, 0x65, 0x2e, 0x76, 0x32, 0x2e, 0x45, 0x64,
	0x69, 0x74, 0x52, 0x65, 0x71, 0x1a, 0x1f, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x70, 0x6c, 0x61, 0x74,
	0x66, 0x6f, 0x72, 0x6d, 0x2e, 0x6e, 0x6f, 0x64, 0x65, 0x2e, 0x76, 0x32, 0x2e, 0x45, 0x64, 0x69,
	0x74, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x58, 0x0a, 0x0a, 0x45, 0x64, 0x69, 0x74, 0x53, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x12, 0x23, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x70, 0x6c, 0x61, 0x74, 0x66,
	0x6f, 0x72, 0x6d, 0x2e, 0x6e, 0x6f, 0x64, 0x65, 0x2e, 0x76, 0x32, 0x2e, 0x45, 0x64, 0x69, 0x74,
	0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x71, 0x1a, 0x25, 0x2e, 0x61, 0x70, 0x69, 0x2e,
	0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x2e, 0x6e, 0x6f, 0x64, 0x65, 0x2e, 0x76, 0x32,
	0x2e, 0x45, 0x64, 0x69, 0x74, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x70, 0x6c, 0x79,
	0x12, 0x52, 0x0a, 0x08, 0x52, 0x65, 0x73, 0x65, 0x74, 0x4b, 0x65, 0x79, 0x12, 0x21, 0x2e, 0x61,
	0x70, 0x69, 0x2e, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x2e, 0x6e, 0x6f, 0x64, 0x65,
	0x2e, 0x76, 0x32, 0x2e, 0x52, 0x65, 0x73, 0x65, 0x74, 0x4b, 0x65, 0x79, 0x52, 0x65, 0x71, 0x1a,
	0x23, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x2e, 0x6e,
	0x6f, 0x64, 0x65, 0x2e, 0x76, 0x32, 0x2e, 0x52, 0x65, 0x73, 0x65, 0x74, 0x4b, 0x65, 0x79, 0x52,
	0x65, 0x70, 0x6c, 0x79, 0x12, 0x4f, 0x0a, 0x07, 0x47, 0x65, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x12,
	0x20, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x2e, 0x6e,
	0x6f, 0x64, 0x65, 0x2e, 0x76, 0x32, 0x2e, 0x47, 0x65, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65,
	0x71, 0x1a, 0x22, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d,
	0x2e, 0x6e, 0x6f, 0x64, 0x65, 0x2e, 0x76, 0x32, 0x2e, 0x47, 0x65, 0x74, 0x49, 0x6e, 0x66, 0x6f,
	0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x61, 0x0a, 0x0d, 0x47, 0x65, 0x74, 0x4e, 0x6f, 0x64, 0x65,
	0x42, 0x79, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x26, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x70, 0x6c, 0x61,
	0x74, 0x66, 0x6f, 0x72, 0x6d, 0x2e, 0x6e, 0x6f, 0x64, 0x65, 0x2e, 0x76, 0x32, 0x2e, 0x47, 0x65,
	0x74, 0x4e, 0x6f, 0x64, 0x65, 0x42, 0x79, 0x43, 0x6f, 0x64, 0x65, 0x52, 0x65, 0x71, 0x1a, 0x28,
	0x2e, 0x61, 0x70, 0x69, 0x2e, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x2e, 0x6e, 0x6f,
	0x64, 0x65, 0x2e, 0x76, 0x32, 0x2e, 0x47, 0x65, 0x74, 0x4e, 0x6f, 0x64, 0x65, 0x42, 0x79, 0x43,
	0x6f, 0x64, 0x65, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x4f, 0x0a, 0x07, 0x47, 0x65, 0x74, 0x4c,
	0x69, 0x73, 0x74, 0x12, 0x20, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f,
	0x72, 0x6d, 0x2e, 0x6e, 0x6f, 0x64, 0x65, 0x2e, 0x76, 0x32, 0x2e, 0x47, 0x65, 0x74, 0x4c, 0x69,
	0x73, 0x74, 0x52, 0x65, 0x71, 0x1a, 0x22, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x70, 0x6c, 0x61, 0x74,
	0x66, 0x6f, 0x72, 0x6d, 0x2e, 0x6e, 0x6f, 0x64, 0x65, 0x2e, 0x76, 0x32, 0x2e, 0x47, 0x65, 0x74,
	0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x58, 0x0a, 0x0a, 0x47, 0x65, 0x74,
	0x41, 0x6c, 0x6c, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x23, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x70, 0x6c,
	0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x2e, 0x6e, 0x6f, 0x64, 0x65, 0x2e, 0x76, 0x32, 0x2e, 0x47,
	0x65, 0x74, 0x41, 0x6c, 0x6c, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x1a, 0x25, 0x2e, 0x61,
	0x70, 0x69, 0x2e, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x2e, 0x6e, 0x6f, 0x64, 0x65,
	0x2e, 0x76, 0x32, 0x2e, 0x47, 0x65, 0x74, 0x41, 0x6c, 0x6c, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65,
	0x70, 0x6c, 0x79, 0x12, 0x64, 0x0a, 0x0e, 0x47, 0x65, 0x74, 0x44, 0x65, 0x66, 0x4e, 0x6f, 0x64,
	0x65, 0x4e, 0x6f, 0x64, 0x65, 0x12, 0x27, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x70, 0x6c, 0x61, 0x74,
	0x66, 0x6f, 0x72, 0x6d, 0x2e, 0x6e, 0x6f, 0x64, 0x65, 0x2e, 0x76, 0x32, 0x2e, 0x47, 0x65, 0x74,
	0x44, 0x65, 0x66, 0x4e, 0x6f, 0x64, 0x65, 0x4e, 0x6f, 0x64, 0x65, 0x52, 0x65, 0x71, 0x1a, 0x29,
	0x2e, 0x61, 0x70, 0x69, 0x2e, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x2e, 0x6e, 0x6f,
	0x64, 0x65, 0x2e, 0x76, 0x32, 0x2e, 0x47, 0x65, 0x74, 0x44, 0x65, 0x66, 0x4e, 0x6f, 0x64, 0x65,
	0x4e, 0x6f, 0x64, 0x65, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x64, 0x0a, 0x0e, 0x53, 0x65, 0x74,
	0x44, 0x65, 0x66, 0x4e, 0x6f, 0x64, 0x65, 0x4e, 0x6f, 0x64, 0x65, 0x12, 0x27, 0x2e, 0x61, 0x70,
	0x69, 0x2e, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x2e, 0x6e, 0x6f, 0x64, 0x65, 0x2e,
	0x76, 0x32, 0x2e, 0x53, 0x65, 0x74, 0x44, 0x65, 0x66, 0x4e, 0x6f, 0x64, 0x65, 0x4e, 0x6f, 0x64,
	0x65, 0x52, 0x65, 0x71, 0x1a, 0x29, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x70, 0x6c, 0x61, 0x74, 0x66,
	0x6f, 0x72, 0x6d, 0x2e, 0x6e, 0x6f, 0x64, 0x65, 0x2e, 0x76, 0x32, 0x2e, 0x53, 0x65, 0x74, 0x44,
	0x65, 0x66, 0x4e, 0x6f, 0x64, 0x65, 0x4e, 0x6f, 0x64, 0x65, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12,
	0x6d, 0x0a, 0x11, 0x47, 0x65, 0x74, 0x4d, 0x61, 0x73, 0x74, 0x65, 0x72, 0x53, 0x79, 0x6e, 0x63,
	0x49, 0x6e, 0x66, 0x6f, 0x12, 0x2a, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x70, 0x6c, 0x61, 0x74, 0x66,
	0x6f, 0x72, 0x6d, 0x2e, 0x6e, 0x6f, 0x64, 0x65, 0x2e, 0x76, 0x32, 0x2e, 0x47, 0x65, 0x74, 0x4d,
	0x61, 0x73, 0x74, 0x65, 0x72, 0x53, 0x79, 0x6e, 0x63, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x71,
	0x1a, 0x2c, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x2e,
	0x6e, 0x6f, 0x64, 0x65, 0x2e, 0x76, 0x32, 0x2e, 0x47, 0x65, 0x74, 0x4d, 0x61, 0x73, 0x74, 0x65,
	0x72, 0x53, 0x79, 0x6e, 0x63, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x61,
	0x0a, 0x0d, 0x47, 0x65, 0x74, 0x4d, 0x61, 0x73, 0x74, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x12,
	0x26, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x2e, 0x6e,
	0x6f, 0x64, 0x65, 0x2e, 0x76, 0x32, 0x2e, 0x47, 0x65, 0x74, 0x4d, 0x61, 0x73, 0x74, 0x65, 0x72,
	0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x71, 0x1a, 0x28, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x70, 0x6c,
	0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x2e, 0x6e, 0x6f, 0x64, 0x65, 0x2e, 0x76, 0x32, 0x2e, 0x47,
	0x65, 0x74, 0x4d, 0x61, 0x73, 0x74, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x70, 0x6c,
	0x79, 0x12, 0x6a, 0x0a, 0x11, 0x47, 0x65, 0x74, 0x44, 0x69, 0x73, 0x74, 0x72, 0x69, 0x62, 0x75,
	0x74, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x2a, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x70, 0x6c, 0x61,
	0x74, 0x66, 0x6f, 0x72, 0x6d, 0x2e, 0x6e, 0x6f, 0x64, 0x65, 0x2e, 0x76, 0x32, 0x2e, 0x47, 0x65,
	0x74, 0x44, 0x69, 0x73, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x52,
	0x65, 0x71, 0x1a, 0x29, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72,
	0x6d, 0x2e, 0x6e, 0x6f, 0x64, 0x65, 0x2e, 0x76, 0x32, 0x2e, 0x44, 0x69, 0x73, 0x74, 0x72, 0x69,
	0x62, 0x75, 0x74, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x58, 0x0a,
	0x0a, 0x45, 0x73, 0x63, 0x61, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x23, 0x2e, 0x61, 0x70,
	0x69, 0x2e, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x2e, 0x6e, 0x6f, 0x64, 0x65, 0x2e,
	0x76, 0x32, 0x2e, 0x45, 0x73, 0x63, 0x61, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71,
	0x1a, 0x25, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x2e,
	0x6e, 0x6f, 0x64, 0x65, 0x2e, 0x76, 0x32, 0x2e, 0x45, 0x73, 0x63, 0x61, 0x6c, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x76, 0x0a, 0x14, 0x47, 0x65, 0x74, 0x4d, 0x61,
	0x73, 0x74, 0x65, 0x72, 0x4e, 0x6f, 0x64, 0x65, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x12,
	0x2d, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x2e, 0x6e,
	0x6f, 0x64, 0x65, 0x2e, 0x76, 0x32, 0x2e, 0x47, 0x65, 0x74, 0x4d, 0x61, 0x73, 0x74, 0x65, 0x72,
	0x4e, 0x6f, 0x64, 0x65, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x52, 0x65, 0x71, 0x1a, 0x2f,
	0x2e, 0x61, 0x70, 0x69, 0x2e, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x2e, 0x6e, 0x6f,
	0x64, 0x65, 0x2e, 0x76, 0x32, 0x2e, 0x47, 0x65, 0x74, 0x4d, 0x61, 0x73, 0x74, 0x65, 0x72, 0x4e,
	0x6f, 0x64, 0x65, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12,
	0x61, 0x0a, 0x11, 0x47, 0x65, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x41, 0x6e, 0x64, 0x4d, 0x61, 0x6e,
	0x61, 0x67, 0x65, 0x72, 0x12, 0x26, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x70, 0x6c, 0x61, 0x74, 0x66,
	0x6f, 0x72, 0x6d, 0x2e, 0x6e, 0x6f, 0x64, 0x65, 0x2e, 0x76, 0x32, 0x2e, 0x47, 0x65, 0x74, 0x4e,
	0x6f, 0x64, 0x65, 0x42, 0x79, 0x43, 0x6f, 0x64, 0x65, 0x52, 0x65, 0x71, 0x1a, 0x24, 0x2e, 0x61,
	0x70, 0x69, 0x2e, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x2e, 0x6e, 0x6f, 0x64, 0x65,
	0x2e, 0x76, 0x32, 0x2e, 0x4e, 0x6f, 0x64, 0x65, 0x41, 0x6e, 0x64, 0x4d, 0x61, 0x6e, 0x61, 0x67,
	0x65, 0x72, 0x12, 0x73, 0x0a, 0x13, 0x47, 0x65, 0x74, 0x4e, 0x6f, 0x64, 0x65, 0x73, 0x41, 0x6e,
	0x64, 0x4d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x73, 0x12, 0x2c, 0x2e, 0x61, 0x70, 0x69, 0x2e,
	0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x2e, 0x6e, 0x6f, 0x64, 0x65, 0x2e, 0x76, 0x32,
	0x2e, 0x47, 0x65, 0x74, 0x4e, 0x6f, 0x64, 0x65, 0x73, 0x41, 0x6e, 0x64, 0x4d, 0x61, 0x6e, 0x61,
	0x67, 0x65, 0x72, 0x73, 0x52, 0x65, 0x71, 0x1a, 0x2e, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x70, 0x6c,
	0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x2e, 0x6e, 0x6f, 0x64, 0x65, 0x2e, 0x76, 0x32, 0x2e, 0x47,
	0x65, 0x74, 0x4e, 0x6f, 0x64, 0x65, 0x73, 0x41, 0x6e, 0x64, 0x4d, 0x61, 0x6e, 0x61, 0x67, 0x65,
	0x72, 0x73, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x6a, 0x0a, 0x10, 0x47, 0x65, 0x74, 0x41, 0x6c,
	0x6c, 0x4d, 0x61, 0x73, 0x74, 0x65, 0x72, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x29, 0x2e, 0x61, 0x70,
	0x69, 0x2e, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x2e, 0x6e, 0x6f, 0x64, 0x65, 0x2e,
	0x76, 0x32, 0x2e, 0x47, 0x65, 0x74, 0x41, 0x6c, 0x6c, 0x4d, 0x61, 0x73, 0x74, 0x65, 0x72, 0x4c,
	0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x1a, 0x2b, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x70, 0x6c, 0x61,
	0x74, 0x66, 0x6f, 0x72, 0x6d, 0x2e, 0x6e, 0x6f, 0x64, 0x65, 0x2e, 0x76, 0x32, 0x2e, 0x47, 0x65,
	0x74, 0x41, 0x6c, 0x6c, 0x4d, 0x61, 0x73, 0x74, 0x65, 0x72, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65,
	0x70, 0x6c, 0x79, 0x12, 0x5b, 0x0a, 0x0b, 0x47, 0x65, 0x74, 0x4e, 0x6f, 0x64, 0x65, 0x42, 0x79,
	0x49, 0x44, 0x12, 0x24, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72,
	0x6d, 0x2e, 0x6e, 0x6f, 0x64, 0x65, 0x2e, 0x76, 0x32, 0x2e, 0x47, 0x65, 0x74, 0x4e, 0x6f, 0x64,
	0x65, 0x42, 0x79, 0x49, 0x44, 0x52, 0x65, 0x71, 0x1a, 0x26, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x70,
	0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x2e, 0x6e, 0x6f, 0x64, 0x65, 0x2e, 0x76, 0x32, 0x2e,
	0x47, 0x65, 0x74, 0x4e, 0x6f, 0x64, 0x65, 0x42, 0x79, 0x49, 0x44, 0x52, 0x65, 0x70, 0x6c, 0x79,
	0x42, 0x51, 0x0a, 0x14, 0x61, 0x70, 0x69, 0x2e, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d,
	0x2e, 0x6e, 0x6f, 0x64, 0x65, 0x2e, 0x76, 0x32, 0x50, 0x01, 0x5a, 0x37, 0x67, 0x69, 0x74, 0x68,
	0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x73, 0x70, 0x61, 0x72, 0x6b, 0x2d, 0x63, 0x6f, 0x6d,
	0x6d, 0x2f, 0x73, 0x70, 0x61, 0x72, 0x6b, 0x2d, 0x61, 0x70, 0x69, 0x2f, 0x61, 0x70, 0x69, 0x2f,
	0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x2f, 0x76, 0x32,
	0x3b, 0x76, 0x32, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_platform_node_v2_node_proto_rawDescOnce sync.Once
	file_platform_node_v2_node_proto_rawDescData = file_platform_node_v2_node_proto_rawDesc
)

func file_platform_node_v2_node_proto_rawDescGZIP() []byte {
	file_platform_node_v2_node_proto_rawDescOnce.Do(func() {
		file_platform_node_v2_node_proto_rawDescData = protoimpl.X.CompressGZIP(file_platform_node_v2_node_proto_rawDescData)
	})
	return file_platform_node_v2_node_proto_rawDescData
}

var file_platform_node_v2_node_proto_enumTypes = make([]protoimpl.EnumInfo, 2)
var file_platform_node_v2_node_proto_msgTypes = make([]protoimpl.MessageInfo, 40)
var file_platform_node_v2_node_proto_goTypes = []interface{}{
	(NodeType)(0),                     // 0: api.platform.node.v2.NodeType
	(NodeStatus)(0),                   // 1: api.platform.node.v2.NodeStatus
	(*NodeDetails)(nil),               // 2: api.platform.node.v2.NodeDetails
	(*AddNodeReq)(nil),                // 3: api.platform.node.v2.AddNodeReq
	(*AddNodeReply)(nil),              // 4: api.platform.node.v2.AddNodeReply
	(*DelReq)(nil),                    // 5: api.platform.node.v2.DelReq
	(*DelReply)(nil),                  // 6: api.platform.node.v2.DelReply
	(*EditReq)(nil),                   // 7: api.platform.node.v2.EditReq
	(*EditReply)(nil),                 // 8: api.platform.node.v2.EditReply
	(*EditStatusReq)(nil),             // 9: api.platform.node.v2.EditStatusReq
	(*EditStatusReply)(nil),           // 10: api.platform.node.v2.EditStatusReply
	(*ResetKeyReq)(nil),               // 11: api.platform.node.v2.ResetKeyReq
	(*ResetKeyReply)(nil),             // 12: api.platform.node.v2.ResetKeyReply
	(*GetInfoReq)(nil),                // 13: api.platform.node.v2.GetInfoReq
	(*GetInfoReply)(nil),              // 14: api.platform.node.v2.GetInfoReply
	(*GetNodeByCodeReq)(nil),          // 15: api.platform.node.v2.GetNodeByCodeReq
	(*GetNodeByCodeReply)(nil),        // 16: api.platform.node.v2.GetNodeByCodeReply
	(*GetListReq)(nil),                // 17: api.platform.node.v2.GetListReq
	(*GetListReply)(nil),              // 18: api.platform.node.v2.GetListReply
	(*GetAllListReq)(nil),             // 19: api.platform.node.v2.GetAllListReq
	(*GetAllListReply)(nil),           // 20: api.platform.node.v2.GetAllListReply
	(*GetDefNodeNodeReq)(nil),         // 21: api.platform.node.v2.GetDefNodeNodeReq
	(*GetDefNodeNodeReply)(nil),       // 22: api.platform.node.v2.GetDefNodeNodeReply
	(*SetDefNodeNodeReq)(nil),         // 23: api.platform.node.v2.SetDefNodeNodeReq
	(*SetDefNodeNodeReply)(nil),       // 24: api.platform.node.v2.SetDefNodeNodeReply
	(*GetMasterSyncInfoReq)(nil),      // 25: api.platform.node.v2.GetMasterSyncInfoReq
	(*GetMasterSyncInfoReply)(nil),    // 26: api.platform.node.v2.GetMasterSyncInfoReply
	(*GetMasterInfoReq)(nil),          // 27: api.platform.node.v2.GetMasterInfoReq
	(*GetMasterInfoReply)(nil),        // 28: api.platform.node.v2.GetMasterInfoReply
	(*GetDistributeInfoReq)(nil),      // 29: api.platform.node.v2.GetDistributeInfoReq
	(*DistributeInfoReply)(nil),       // 30: api.platform.node.v2.DistributeInfoReply
	(*GetMasterNodeDetailsReq)(nil),   // 31: api.platform.node.v2.GetMasterNodeDetailsReq
	(*GetMasterNodeDetailsReply)(nil), // 32: api.platform.node.v2.GetMasterNodeDetailsReply
	(*GetAllMasterListReq)(nil),       // 33: api.platform.node.v2.GetAllMasterListReq
	(*GetAllMasterListReply)(nil),     // 34: api.platform.node.v2.GetAllMasterListReply
	(*EscalationReq)(nil),             // 35: api.platform.node.v2.EscalationReq
	(*EscalationReply)(nil),           // 36: api.platform.node.v2.EscalationReply
	(*NodeAndManager)(nil),            // 37: api.platform.node.v2.NodeAndManager
	(*GetNodesAndManagersReq)(nil),    // 38: api.platform.node.v2.GetNodesAndManagersReq
	(*GetNodesAndManagersReply)(nil),  // 39: api.platform.node.v2.GetNodesAndManagersReply
	(*GetNodeByIDReq)(nil),            // 40: api.platform.node.v2.GetNodeByIDReq
	(*GetNodeByIDReply)(nil),          // 41: api.platform.node.v2.GetNodeByIDReply
	(*v2.NodeBase)(nil),               // 42: api.common.model.v2.NodeBase
	(*v2.Pagination)(nil),             // 43: api.common.model.v2.Pagination
	(*v2.SingedMsg)(nil),              // 44: api.common.model.v2.SingedMsg
	(*v2.NodeMasterSyncInfo)(nil),     // 45: api.common.model.v2.NodeMasterSyncInfo
	(*v2.TenantDistributeInfo)(nil),   // 46: api.common.model.v2.TenantDistributeInfo
}
var file_platform_node_v2_node_proto_depIdxs = []int32{
	42, // 0: api.platform.node.v2.NodeDetails.base:type_name -> api.common.model.v2.NodeBase
	0,  // 1: api.platform.node.v2.AddNodeReq.nodeType:type_name -> api.platform.node.v2.NodeType
	1,  // 2: api.platform.node.v2.EditStatusReq.status:type_name -> api.platform.node.v2.NodeStatus
	2,  // 3: api.platform.node.v2.GetInfoReply.data:type_name -> api.platform.node.v2.NodeDetails
	42, // 4: api.platform.node.v2.GetNodeByCodeReply.data:type_name -> api.common.model.v2.NodeBase
	43, // 5: api.platform.node.v2.GetListReq.page:type_name -> api.common.model.v2.Pagination
	1,  // 6: api.platform.node.v2.GetListReq.status:type_name -> api.platform.node.v2.NodeStatus
	2,  // 7: api.platform.node.v2.GetListReply.list:type_name -> api.platform.node.v2.NodeDetails
	1,  // 8: api.platform.node.v2.GetAllListReq.status:type_name -> api.platform.node.v2.NodeStatus
	42, // 9: api.platform.node.v2.GetAllListReply.list:type_name -> api.common.model.v2.NodeBase
	42, // 10: api.platform.node.v2.GetDefNodeNodeReply.data:type_name -> api.common.model.v2.NodeBase
	44, // 11: api.platform.node.v2.GetMasterSyncInfoReply.data:type_name -> api.common.model.v2.SingedMsg
	45, // 12: api.platform.node.v2.GetMasterInfoReply.data:type_name -> api.common.model.v2.NodeMasterSyncInfo
	2,  // 13: api.platform.node.v2.DistributeInfoReply.info:type_name -> api.platform.node.v2.NodeDetails
	0,  // 14: api.platform.node.v2.DistributeInfoReply.nodeType:type_name -> api.platform.node.v2.NodeType
	46, // 15: api.platform.node.v2.DistributeInfoReply.data:type_name -> api.common.model.v2.TenantDistributeInfo
	2,  // 16: api.platform.node.v2.GetMasterNodeDetailsReply.info:type_name -> api.platform.node.v2.NodeDetails
	42, // 17: api.platform.node.v2.GetAllMasterListReply.list:type_name -> api.common.model.v2.NodeBase
	44, // 18: api.platform.node.v2.EscalationReq.data:type_name -> api.common.model.v2.SingedMsg
	44, // 19: api.platform.node.v2.EscalationReply.data:type_name -> api.common.model.v2.SingedMsg
	42, // 20: api.platform.node.v2.NodeAndManager.node:type_name -> api.common.model.v2.NodeBase
	42, // 21: api.platform.node.v2.GetNodesAndManagersReply.nodes:type_name -> api.common.model.v2.NodeBase
	42, // 22: api.platform.node.v2.GetNodeByIDReply.list:type_name -> api.common.model.v2.NodeBase
	3,  // 23: api.platform.node.v2.Node.Add:input_type -> api.platform.node.v2.AddNodeReq
	5,  // 24: api.platform.node.v2.Node.Del:input_type -> api.platform.node.v2.DelReq
	7,  // 25: api.platform.node.v2.Node.Edit:input_type -> api.platform.node.v2.EditReq
	9,  // 26: api.platform.node.v2.Node.EditStatus:input_type -> api.platform.node.v2.EditStatusReq
	11, // 27: api.platform.node.v2.Node.ResetKey:input_type -> api.platform.node.v2.ResetKeyReq
	13, // 28: api.platform.node.v2.Node.GetInfo:input_type -> api.platform.node.v2.GetInfoReq
	15, // 29: api.platform.node.v2.Node.GetNodeByCode:input_type -> api.platform.node.v2.GetNodeByCodeReq
	17, // 30: api.platform.node.v2.Node.GetList:input_type -> api.platform.node.v2.GetListReq
	19, // 31: api.platform.node.v2.Node.GetAllList:input_type -> api.platform.node.v2.GetAllListReq
	21, // 32: api.platform.node.v2.Node.GetDefNodeNode:input_type -> api.platform.node.v2.GetDefNodeNodeReq
	23, // 33: api.platform.node.v2.Node.SetDefNodeNode:input_type -> api.platform.node.v2.SetDefNodeNodeReq
	25, // 34: api.platform.node.v2.Node.GetMasterSyncInfo:input_type -> api.platform.node.v2.GetMasterSyncInfoReq
	27, // 35: api.platform.node.v2.Node.GetMasterInfo:input_type -> api.platform.node.v2.GetMasterInfoReq
	29, // 36: api.platform.node.v2.Node.GetDistributeInfo:input_type -> api.platform.node.v2.GetDistributeInfoReq
	35, // 37: api.platform.node.v2.Node.Escalation:input_type -> api.platform.node.v2.EscalationReq
	31, // 38: api.platform.node.v2.Node.GetMasterNodeDetails:input_type -> api.platform.node.v2.GetMasterNodeDetailsReq
	15, // 39: api.platform.node.v2.Node.GetInfoAndManager:input_type -> api.platform.node.v2.GetNodeByCodeReq
	38, // 40: api.platform.node.v2.Node.GetNodesAndManagers:input_type -> api.platform.node.v2.GetNodesAndManagersReq
	33, // 41: api.platform.node.v2.Node.GetAllMasterList:input_type -> api.platform.node.v2.GetAllMasterListReq
	40, // 42: api.platform.node.v2.Node.GetNodeByID:input_type -> api.platform.node.v2.GetNodeByIDReq
	4,  // 43: api.platform.node.v2.Node.Add:output_type -> api.platform.node.v2.AddNodeReply
	6,  // 44: api.platform.node.v2.Node.Del:output_type -> api.platform.node.v2.DelReply
	8,  // 45: api.platform.node.v2.Node.Edit:output_type -> api.platform.node.v2.EditReply
	10, // 46: api.platform.node.v2.Node.EditStatus:output_type -> api.platform.node.v2.EditStatusReply
	12, // 47: api.platform.node.v2.Node.ResetKey:output_type -> api.platform.node.v2.ResetKeyReply
	14, // 48: api.platform.node.v2.Node.GetInfo:output_type -> api.platform.node.v2.GetInfoReply
	16, // 49: api.platform.node.v2.Node.GetNodeByCode:output_type -> api.platform.node.v2.GetNodeByCodeReply
	18, // 50: api.platform.node.v2.Node.GetList:output_type -> api.platform.node.v2.GetListReply
	20, // 51: api.platform.node.v2.Node.GetAllList:output_type -> api.platform.node.v2.GetAllListReply
	22, // 52: api.platform.node.v2.Node.GetDefNodeNode:output_type -> api.platform.node.v2.GetDefNodeNodeReply
	24, // 53: api.platform.node.v2.Node.SetDefNodeNode:output_type -> api.platform.node.v2.SetDefNodeNodeReply
	26, // 54: api.platform.node.v2.Node.GetMasterSyncInfo:output_type -> api.platform.node.v2.GetMasterSyncInfoReply
	28, // 55: api.platform.node.v2.Node.GetMasterInfo:output_type -> api.platform.node.v2.GetMasterInfoReply
	30, // 56: api.platform.node.v2.Node.GetDistributeInfo:output_type -> api.platform.node.v2.DistributeInfoReply
	36, // 57: api.platform.node.v2.Node.Escalation:output_type -> api.platform.node.v2.EscalationReply
	32, // 58: api.platform.node.v2.Node.GetMasterNodeDetails:output_type -> api.platform.node.v2.GetMasterNodeDetailsReply
	37, // 59: api.platform.node.v2.Node.GetInfoAndManager:output_type -> api.platform.node.v2.NodeAndManager
	39, // 60: api.platform.node.v2.Node.GetNodesAndManagers:output_type -> api.platform.node.v2.GetNodesAndManagersReply
	34, // 61: api.platform.node.v2.Node.GetAllMasterList:output_type -> api.platform.node.v2.GetAllMasterListReply
	41, // 62: api.platform.node.v2.Node.GetNodeByID:output_type -> api.platform.node.v2.GetNodeByIDReply
	43, // [43:63] is the sub-list for method output_type
	23, // [23:43] is the sub-list for method input_type
	23, // [23:23] is the sub-list for extension type_name
	23, // [23:23] is the sub-list for extension extendee
	0,  // [0:23] is the sub-list for field type_name
}

func init() { file_platform_node_v2_node_proto_init() }
func file_platform_node_v2_node_proto_init() {
	if File_platform_node_v2_node_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_platform_node_v2_node_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NodeDetails); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_platform_node_v2_node_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddNodeReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_platform_node_v2_node_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddNodeReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_platform_node_v2_node_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DelReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_platform_node_v2_node_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DelReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_platform_node_v2_node_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EditReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_platform_node_v2_node_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EditReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_platform_node_v2_node_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EditStatusReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_platform_node_v2_node_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EditStatusReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_platform_node_v2_node_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResetKeyReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_platform_node_v2_node_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResetKeyReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_platform_node_v2_node_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetInfoReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_platform_node_v2_node_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetInfoReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_platform_node_v2_node_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetNodeByCodeReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_platform_node_v2_node_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetNodeByCodeReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_platform_node_v2_node_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetListReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_platform_node_v2_node_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetListReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_platform_node_v2_node_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetAllListReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_platform_node_v2_node_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetAllListReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_platform_node_v2_node_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetDefNodeNodeReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_platform_node_v2_node_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetDefNodeNodeReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_platform_node_v2_node_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SetDefNodeNodeReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_platform_node_v2_node_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SetDefNodeNodeReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_platform_node_v2_node_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetMasterSyncInfoReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_platform_node_v2_node_proto_msgTypes[24].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetMasterSyncInfoReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_platform_node_v2_node_proto_msgTypes[25].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetMasterInfoReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_platform_node_v2_node_proto_msgTypes[26].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetMasterInfoReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_platform_node_v2_node_proto_msgTypes[27].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetDistributeInfoReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_platform_node_v2_node_proto_msgTypes[28].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DistributeInfoReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_platform_node_v2_node_proto_msgTypes[29].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetMasterNodeDetailsReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_platform_node_v2_node_proto_msgTypes[30].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetMasterNodeDetailsReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_platform_node_v2_node_proto_msgTypes[31].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetAllMasterListReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_platform_node_v2_node_proto_msgTypes[32].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetAllMasterListReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_platform_node_v2_node_proto_msgTypes[33].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EscalationReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_platform_node_v2_node_proto_msgTypes[34].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EscalationReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_platform_node_v2_node_proto_msgTypes[35].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NodeAndManager); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_platform_node_v2_node_proto_msgTypes[36].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetNodesAndManagersReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_platform_node_v2_node_proto_msgTypes[37].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetNodesAndManagersReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_platform_node_v2_node_proto_msgTypes[38].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetNodeByIDReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_platform_node_v2_node_proto_msgTypes[39].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetNodeByIDReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_platform_node_v2_node_proto_msgTypes[5].OneofWrappers = []interface{}{}
	file_platform_node_v2_node_proto_msgTypes[7].OneofWrappers = []interface{}{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_platform_node_v2_node_proto_rawDesc,
			NumEnums:      2,
			NumMessages:   40,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_platform_node_v2_node_proto_goTypes,
		DependencyIndexes: file_platform_node_v2_node_proto_depIdxs,
		EnumInfos:         file_platform_node_v2_node_proto_enumTypes,
		MessageInfos:      file_platform_node_v2_node_proto_msgTypes,
	}.Build()
	File_platform_node_v2_node_proto = out.File
	file_platform_node_v2_node_proto_rawDesc = nil
	file_platform_node_v2_node_proto_goTypes = nil
	file_platform_node_v2_node_proto_depIdxs = nil
}
