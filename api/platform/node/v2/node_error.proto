syntax = "proto3";

// 定义包名
package api.platform.node.v2;
import "errors/errors.proto";

option go_package = "github.com/spark-comm/spark-api/api/platform/node/v2;v2";
option java_multiple_files = true;
option java_package = "api.platform.node.v2";

enum ErrorNodeReason {
  // 设置缺省错误码
  option (errors.default_code) = 500;

  // 节点信息未找到
  NODE_NOT_FOUND = 0 [(errors.code) = 404];
  //主节点必须包含服务器信息
  MASTER_NODE_MUST_INCLUDE_SERVER_INFORMATION = 1 [(errors.code) = 400];
  //代理节点必须指定主节点
  PROXY_NODE_MUST_SPECIFY_THE_MASTER_NODE = 3 [(errors.code) = 400];
  //受时间控制的节点必须指定时间
  TIME_CONTROLLED_NODES_MUST_SPECIFY_TIME = 4 [(errors.code) = 400];
  //结束时间不能小于开始时间
  THE_END_TIME_CANNOT_BE_LESS_THAN_THE_START_TIME = 5 [(errors.code) = 400];
  //节点下包含可用的代理节点无法删除
  NODE_CONTAINS_CHILD_NODES_UNDER_IT = 6 [(errors.code) = 500];
  // 节点已存在
  NODE_IS_EXIST_ERROR=7 [(errors.code) = 400];
  //c重置密钥失败
  RESET_KEY_ERROR = 8[(errors.code) = 500];
  //设置默认节点失败
  SET_DEFAULT_NODE_ERROR = 9[(errors.code) = 500];
}