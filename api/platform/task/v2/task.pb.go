// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.31.0
// 	protoc        v4.25.0
// source: platform/task/v2/task.proto

package v2

import (
	_ "github.com/envoyproxy/protoc-gen-validate/validate"
	v2 "github.com/spark-comm/spark-api/api/common/model/v2"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// 任务类型
type TaskType int32

const (
	TaskType_EXECUTE_IMMEDIATELY TaskType = 0 //立即单次执行
	TaskType_DELAY_EXECUTION     TaskType = 1 //延迟执行
	TaskType_TIMED_EXECUTION     TaskType = 2 //定时执行
)

// Enum value maps for TaskType.
var (
	TaskType_name = map[int32]string{
		0: "EXECUTE_IMMEDIATELY",
		1: "DELAY_EXECUTION",
		2: "TIMED_EXECUTION",
	}
	TaskType_value = map[string]int32{
		"EXECUTE_IMMEDIATELY": 0,
		"DELAY_EXECUTION":     1,
		"TIMED_EXECUTION":     2,
	}
)

func (x TaskType) Enum() *TaskType {
	p := new(TaskType)
	*p = x
	return p
}

func (x TaskType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (TaskType) Descriptor() protoreflect.EnumDescriptor {
	return file_platform_task_v2_task_proto_enumTypes[0].Descriptor()
}

func (TaskType) Type() protoreflect.EnumType {
	return &file_platform_task_v2_task_proto_enumTypes[0]
}

func (x TaskType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use TaskType.Descriptor instead.
func (TaskType) EnumDescriptor() ([]byte, []int) {
	return file_platform_task_v2_task_proto_rawDescGZIP(), []int{0}
}

// 任务内容类型
type TaskCountType int32

const (
	TaskCountType_unknown              TaskCountType = 0
	TaskCountType_USER_INFO_DISTRIBUTE TaskCountType = 1 //用户信息下发
	TaskCountType_USER_INFO_ESCALATION TaskCountType = 2 //用户信息上报
	TaskCountType_NODE_INFO_DISTRIBUTE TaskCountType = 3 //节点信息下发
)

// Enum value maps for TaskCountType.
var (
	TaskCountType_name = map[int32]string{
		0: "unknown",
		1: "USER_INFO_DISTRIBUTE",
		2: "USER_INFO_ESCALATION",
		3: "NODE_INFO_DISTRIBUTE",
	}
	TaskCountType_value = map[string]int32{
		"unknown":              0,
		"USER_INFO_DISTRIBUTE": 1,
		"USER_INFO_ESCALATION": 2,
		"NODE_INFO_DISTRIBUTE": 3,
	}
)

func (x TaskCountType) Enum() *TaskCountType {
	p := new(TaskCountType)
	*p = x
	return p
}

func (x TaskCountType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (TaskCountType) Descriptor() protoreflect.EnumDescriptor {
	return file_platform_task_v2_task_proto_enumTypes[1].Descriptor()
}

func (TaskCountType) Type() protoreflect.EnumType {
	return &file_platform_task_v2_task_proto_enumTypes[1]
}

func (x TaskCountType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use TaskCountType.Descriptor instead.
func (TaskCountType) EnumDescriptor() ([]byte, []int) {
	return file_platform_task_v2_task_proto_rawDescGZIP(), []int{1}
}

// 任务所属模块
type TaskModel int32

const (
	TaskModel_UNKNOWN_MODEL TaskModel = 0 //未知
	TaskModel_USER          TaskModel = 1 //用户模块任务
	TaskModel_NODE          TaskModel = 2 //任务模块任务
)

// Enum value maps for TaskModel.
var (
	TaskModel_name = map[int32]string{
		0: "UNKNOWN_MODEL",
		1: "USER",
		2: "NODE",
	}
	TaskModel_value = map[string]int32{
		"UNKNOWN_MODEL": 0,
		"USER":          1,
		"NODE":          2,
	}
)

func (x TaskModel) Enum() *TaskModel {
	p := new(TaskModel)
	*p = x
	return p
}

func (x TaskModel) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (TaskModel) Descriptor() protoreflect.EnumDescriptor {
	return file_platform_task_v2_task_proto_enumTypes[2].Descriptor()
}

func (TaskModel) Type() protoreflect.EnumType {
	return &file_platform_task_v2_task_proto_enumTypes[2]
}

func (x TaskModel) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use TaskModel.Descriptor instead.
func (TaskModel) EnumDescriptor() ([]byte, []int) {
	return file_platform_task_v2_task_proto_rawDescGZIP(), []int{2}
}

// 任务状态
type TaskStatus int32

const (
	TaskStatus_UNKNOWN_STATUS      TaskStatus = 0 //未知
	TaskStatus_WAITING             TaskStatus = 1 //创建等待执行
	TaskStatus_IN_PROGRESS         TaskStatus = 2 //执行中
	TaskStatus_EXECUTION_FAILED    TaskStatus = 3 //执行失败
	TaskStatus_EXECUTION_SUCCEEDED TaskStatus = 4 //执行成功
)

// Enum value maps for TaskStatus.
var (
	TaskStatus_name = map[int32]string{
		0: "UNKNOWN_STATUS",
		1: "WAITING",
		2: "IN_PROGRESS",
		3: "EXECUTION_FAILED",
		4: "EXECUTION_SUCCEEDED",
	}
	TaskStatus_value = map[string]int32{
		"UNKNOWN_STATUS":      0,
		"WAITING":             1,
		"IN_PROGRESS":         2,
		"EXECUTION_FAILED":    3,
		"EXECUTION_SUCCEEDED": 4,
	}
)

func (x TaskStatus) Enum() *TaskStatus {
	p := new(TaskStatus)
	*p = x
	return p
}

func (x TaskStatus) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (TaskStatus) Descriptor() protoreflect.EnumDescriptor {
	return file_platform_task_v2_task_proto_enumTypes[3].Descriptor()
}

func (TaskStatus) Type() protoreflect.EnumType {
	return &file_platform_task_v2_task_proto_enumTypes[3]
}

func (x TaskStatus) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use TaskStatus.Descriptor instead.
func (TaskStatus) EnumDescriptor() ([]byte, []int) {
	return file_platform_task_v2_task_proto_rawDescGZIP(), []int{3}
}

// 新加任务
// -------------------------------------------
type AddReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	StartTime   int64         `protobuf:"varint,1,opt,name=startTime,proto3" json:"startTime,omitempty"`                                             //任务开始时间
	Cron        string        `protobuf:"bytes,2,opt,name=cron,proto3" json:"cron,omitempty"`                                                        //定时表达式
	TaskType    TaskType      `protobuf:"varint,3,opt,name=taskType,proto3,enum=api.platform.task.v2.TaskType" json:"taskType,omitempty"`            //任务类型
	TaskModel   TaskModel     `protobuf:"varint,4,opt,name=taskModel,proto3,enum=api.platform.task.v2.TaskModel" json:"taskModel,omitempty"`         //任务所属模块
	Data        []byte        `protobuf:"bytes,5,opt,name=data,proto3" json:"data,omitempty"`                                                        //任务所需数据
	Description string        `protobuf:"bytes,6,opt,name=description,proto3" json:"description,omitempty"`                                          //任务描述
	ContentType TaskCountType `protobuf:"varint,7,opt,name=contentType,proto3,enum=api.platform.task.v2.TaskCountType" json:"contentType,omitempty"` //任务内容类型
}

func (x *AddReq) Reset() {
	*x = AddReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_platform_task_v2_task_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddReq) ProtoMessage() {}

func (x *AddReq) ProtoReflect() protoreflect.Message {
	mi := &file_platform_task_v2_task_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddReq.ProtoReflect.Descriptor instead.
func (*AddReq) Descriptor() ([]byte, []int) {
	return file_platform_task_v2_task_proto_rawDescGZIP(), []int{0}
}

func (x *AddReq) GetStartTime() int64 {
	if x != nil {
		return x.StartTime
	}
	return 0
}

func (x *AddReq) GetCron() string {
	if x != nil {
		return x.Cron
	}
	return ""
}

func (x *AddReq) GetTaskType() TaskType {
	if x != nil {
		return x.TaskType
	}
	return TaskType_EXECUTE_IMMEDIATELY
}

func (x *AddReq) GetTaskModel() TaskModel {
	if x != nil {
		return x.TaskModel
	}
	return TaskModel_UNKNOWN_MODEL
}

func (x *AddReq) GetData() []byte {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *AddReq) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *AddReq) GetContentType() TaskCountType {
	if x != nil {
		return x.ContentType
	}
	return TaskCountType_unknown
}

type AddReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *AddReply) Reset() {
	*x = AddReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_platform_task_v2_task_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddReply) ProtoMessage() {}

func (x *AddReply) ProtoReflect() protoreflect.Message {
	mi := &file_platform_task_v2_task_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddReply.ProtoReflect.Descriptor instead.
func (*AddReply) Descriptor() ([]byte, []int) {
	return file_platform_task_v2_task_proto_rawDescGZIP(), []int{1}
}

// 获取任务列表
// -------------------------------------------
type GetListReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Page      *v2.Pagination `protobuf:"bytes,1,opt,name=page,proto3" json:"page,omitempty"`                                                //分页
	TaskType  TaskType       `protobuf:"varint,3,opt,name=taskType,proto3,enum=api.platform.task.v2.TaskType" json:"taskType,omitempty"`    //任务类型 0:立即执行 1:延迟执行 3:定时执行
	TaskModel TaskModel      `protobuf:"varint,4,opt,name=taskModel,proto3,enum=api.platform.task.v2.TaskModel" json:"taskModel,omitempty"` //任务所属模块 0:系统任务 1:用户模块 2:节点模块
	Status    TaskStatus     `protobuf:"varint,5,opt,name=status,proto3,enum=api.platform.task.v2.TaskStatus" json:"status,omitempty"`      // 状态  0:新建 1:等待执行 2:执行中 3:执行失败 4:执行成功
}

func (x *GetListReq) Reset() {
	*x = GetListReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_platform_task_v2_task_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetListReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetListReq) ProtoMessage() {}

func (x *GetListReq) ProtoReflect() protoreflect.Message {
	mi := &file_platform_task_v2_task_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetListReq.ProtoReflect.Descriptor instead.
func (*GetListReq) Descriptor() ([]byte, []int) {
	return file_platform_task_v2_task_proto_rawDescGZIP(), []int{2}
}

func (x *GetListReq) GetPage() *v2.Pagination {
	if x != nil {
		return x.Page
	}
	return nil
}

func (x *GetListReq) GetTaskType() TaskType {
	if x != nil {
		return x.TaskType
	}
	return TaskType_EXECUTE_IMMEDIATELY
}

func (x *GetListReq) GetTaskModel() TaskModel {
	if x != nil {
		return x.TaskModel
	}
	return TaskModel_UNKNOWN_MODEL
}

func (x *GetListReq) GetStatus() TaskStatus {
	if x != nil {
		return x.Status
	}
	return TaskStatus_UNKNOWN_STATUS
}

type GetListReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Total int64          `protobuf:"varint,1,opt,name=total,proto3" json:"total,omitempty"` //总数
	List  []*TaskDetails `protobuf:"bytes,2,rep,name=list,proto3" json:"list,omitempty"`    //任务详情
}

func (x *GetListReply) Reset() {
	*x = GetListReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_platform_task_v2_task_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetListReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetListReply) ProtoMessage() {}

func (x *GetListReply) ProtoReflect() protoreflect.Message {
	mi := &file_platform_task_v2_task_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetListReply.ProtoReflect.Descriptor instead.
func (*GetListReply) Descriptor() ([]byte, []int) {
	return file_platform_task_v2_task_proto_rawDescGZIP(), []int{3}
}

func (x *GetListReply) GetTotal() int64 {
	if x != nil {
		return x.Total
	}
	return 0
}

func (x *GetListReply) GetList() []*TaskDetails {
	if x != nil {
		return x.List
	}
	return nil
}

// 获取任务列表
// -------------------------------------------
type ExecutionReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"` //任务id
}

func (x *ExecutionReq) Reset() {
	*x = ExecutionReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_platform_task_v2_task_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ExecutionReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExecutionReq) ProtoMessage() {}

func (x *ExecutionReq) ProtoReflect() protoreflect.Message {
	mi := &file_platform_task_v2_task_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExecutionReq.ProtoReflect.Descriptor instead.
func (*ExecutionReq) Descriptor() ([]byte, []int) {
	return file_platform_task_v2_task_proto_rawDescGZIP(), []int{4}
}

func (x *ExecutionReq) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type ExecutionReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ExecutionReply) Reset() {
	*x = ExecutionReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_platform_task_v2_task_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ExecutionReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExecutionReply) ProtoMessage() {}

func (x *ExecutionReply) ProtoReflect() protoreflect.Message {
	mi := &file_platform_task_v2_task_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExecutionReply.ProtoReflect.Descriptor instead.
func (*ExecutionReply) Descriptor() ([]byte, []int) {
	return file_platform_task_v2_task_proto_rawDescGZIP(), []int{5}
}

// 增加上报任务
// -------------------------------------------
type AddEscalationReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	StartTime   int64              `protobuf:"varint,1,opt,name=startTime,proto3" json:"startTime,omitempty"`                                             //任务开始时间
	Cron        string             `protobuf:"bytes,2,opt,name=cron,proto3" json:"cron,omitempty"`                                                        //定时表达式
	TaskType    TaskType           `protobuf:"varint,3,opt,name=taskType,proto3,enum=api.platform.task.v2.TaskType" json:"taskType,omitempty"`            //任务类型 0:立即执行 1:延迟执行 3:定时执行
	TaskModel   TaskModel          `protobuf:"varint,4,opt,name=taskModel,proto3,enum=api.platform.task.v2.TaskModel" json:"taskModel,omitempty"`         //任务所属模块 0:系统任务 1:用户模块 2:节点模块
	Data        *v2.EscalationData `protobuf:"bytes,5,opt,name=data,proto3" json:"data,omitempty"`                                                        //加密
	Description string             `protobuf:"bytes,6,opt,name=description,proto3" json:"description,omitempty"`                                          //任务描述
	ContentType TaskCountType      `protobuf:"varint,7,opt,name=contentType,proto3,enum=api.platform.task.v2.TaskCountType" json:"contentType,omitempty"` //任务内容类型 0:未定义 1:用户信息下发 2:用户信息下发 3:节点信息下发
}

func (x *AddEscalationReq) Reset() {
	*x = AddEscalationReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_platform_task_v2_task_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddEscalationReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddEscalationReq) ProtoMessage() {}

func (x *AddEscalationReq) ProtoReflect() protoreflect.Message {
	mi := &file_platform_task_v2_task_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddEscalationReq.ProtoReflect.Descriptor instead.
func (*AddEscalationReq) Descriptor() ([]byte, []int) {
	return file_platform_task_v2_task_proto_rawDescGZIP(), []int{6}
}

func (x *AddEscalationReq) GetStartTime() int64 {
	if x != nil {
		return x.StartTime
	}
	return 0
}

func (x *AddEscalationReq) GetCron() string {
	if x != nil {
		return x.Cron
	}
	return ""
}

func (x *AddEscalationReq) GetTaskType() TaskType {
	if x != nil {
		return x.TaskType
	}
	return TaskType_EXECUTE_IMMEDIATELY
}

func (x *AddEscalationReq) GetTaskModel() TaskModel {
	if x != nil {
		return x.TaskModel
	}
	return TaskModel_UNKNOWN_MODEL
}

func (x *AddEscalationReq) GetData() *v2.EscalationData {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *AddEscalationReq) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *AddEscalationReq) GetContentType() TaskCountType {
	if x != nil {
		return x.ContentType
	}
	return TaskCountType_unknown
}

type AddEscalationReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data *v2.SingedMsg `protobuf:"bytes,1,opt,name=data,proto3" json:"data,omitempty"` //加密
}

func (x *AddEscalationReply) Reset() {
	*x = AddEscalationReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_platform_task_v2_task_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddEscalationReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddEscalationReply) ProtoMessage() {}

func (x *AddEscalationReply) ProtoReflect() protoreflect.Message {
	mi := &file_platform_task_v2_task_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddEscalationReply.ProtoReflect.Descriptor instead.
func (*AddEscalationReply) Descriptor() ([]byte, []int) {
	return file_platform_task_v2_task_proto_rawDescGZIP(), []int{7}
}

func (x *AddEscalationReply) GetData() *v2.SingedMsg {
	if x != nil {
		return x.Data
	}
	return nil
}

// 增加上报任务
// -------------------------------------------
type DistributeUserReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	User *v2.SyncUser `protobuf:"bytes,1,opt,name=user,proto3" json:"user,omitempty"` //用户信息
}

func (x *DistributeUserReq) Reset() {
	*x = DistributeUserReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_platform_task_v2_task_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DistributeUserReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DistributeUserReq) ProtoMessage() {}

func (x *DistributeUserReq) ProtoReflect() protoreflect.Message {
	mi := &file_platform_task_v2_task_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DistributeUserReq.ProtoReflect.Descriptor instead.
func (*DistributeUserReq) Descriptor() ([]byte, []int) {
	return file_platform_task_v2_task_proto_rawDescGZIP(), []int{8}
}

func (x *DistributeUserReq) GetUser() *v2.SyncUser {
	if x != nil {
		return x.User
	}
	return nil
}

type DistributeUserReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *DistributeUserReply) Reset() {
	*x = DistributeUserReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_platform_task_v2_task_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DistributeUserReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DistributeUserReply) ProtoMessage() {}

func (x *DistributeUserReply) ProtoReflect() protoreflect.Message {
	mi := &file_platform_task_v2_task_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DistributeUserReply.ProtoReflect.Descriptor instead.
func (*DistributeUserReply) Descriptor() ([]byte, []int) {
	return file_platform_task_v2_task_proto_rawDescGZIP(), []int{9}
}

type TaskDetails struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id          string        `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`                                                            //任务id
	StartTime   int64         `protobuf:"varint,2,opt,name=startTime,proto3" json:"startTime,omitempty"`                                             //任务开始时间
	Cron        string        `protobuf:"bytes,3,opt,name=cron,proto3" json:"cron,omitempty"`                                                        //定时表达式
	TaskType    TaskType      `protobuf:"varint,4,opt,name=taskType,proto3,enum=api.platform.task.v2.TaskType" json:"taskType,omitempty"`            //任务类型 0:立即执行 1:延迟执行 3:定时执行
	TaskModel   TaskModel     `protobuf:"varint,5,opt,name=taskModel,proto3,enum=api.platform.task.v2.TaskModel" json:"taskModel,omitempty"`         //任务所属模块 0:系统任务 1:用户模块 2:节点模块
	Data        []byte        `protobuf:"bytes,6,opt,name=data,proto3" json:"data,omitempty"`                                                        //任务所需数据
	Description string        `protobuf:"bytes,7,opt,name=description,proto3" json:"description,omitempty"`                                          //任务描述
	Status      TaskStatus    `protobuf:"varint,8,opt,name=status,proto3,enum=api.platform.task.v2.TaskStatus" json:"status,omitempty"`              // 状态  0:新建 1:等待执行 2:执行中 3:执行失败 4:执行成功
	ContentType TaskCountType `protobuf:"varint,9,opt,name=contentType,proto3,enum=api.platform.task.v2.TaskCountType" json:"contentType,omitempty"` //任务内容类型 0:未定义 1:用户信息下发 2:用户信息下发 3:节点信息下发
	Reason      string        `protobuf:"bytes,10,opt,name=reason,proto3" json:"reason,omitempty"`                                                   //失败原因
	RetryCount  int64         `protobuf:"varint,11,opt,name=retryCount,proto3" json:"retryCount,omitempty"`                                          //重试次数
	CreatedAt   int64         `protobuf:"varint,12,opt,name=createdAt,proto3" json:"createdAt,omitempty"`                                            //创建时间
	UpdatedAt   int64         `protobuf:"varint,13,opt,name=updatedAt,proto3" json:"updatedAt,omitempty"`                                            //更新时间
}

func (x *TaskDetails) Reset() {
	*x = TaskDetails{}
	if protoimpl.UnsafeEnabled {
		mi := &file_platform_task_v2_task_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TaskDetails) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TaskDetails) ProtoMessage() {}

func (x *TaskDetails) ProtoReflect() protoreflect.Message {
	mi := &file_platform_task_v2_task_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TaskDetails.ProtoReflect.Descriptor instead.
func (*TaskDetails) Descriptor() ([]byte, []int) {
	return file_platform_task_v2_task_proto_rawDescGZIP(), []int{10}
}

func (x *TaskDetails) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *TaskDetails) GetStartTime() int64 {
	if x != nil {
		return x.StartTime
	}
	return 0
}

func (x *TaskDetails) GetCron() string {
	if x != nil {
		return x.Cron
	}
	return ""
}

func (x *TaskDetails) GetTaskType() TaskType {
	if x != nil {
		return x.TaskType
	}
	return TaskType_EXECUTE_IMMEDIATELY
}

func (x *TaskDetails) GetTaskModel() TaskModel {
	if x != nil {
		return x.TaskModel
	}
	return TaskModel_UNKNOWN_MODEL
}

func (x *TaskDetails) GetData() []byte {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *TaskDetails) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *TaskDetails) GetStatus() TaskStatus {
	if x != nil {
		return x.Status
	}
	return TaskStatus_UNKNOWN_STATUS
}

func (x *TaskDetails) GetContentType() TaskCountType {
	if x != nil {
		return x.ContentType
	}
	return TaskCountType_unknown
}

func (x *TaskDetails) GetReason() string {
	if x != nil {
		return x.Reason
	}
	return ""
}

func (x *TaskDetails) GetRetryCount() int64 {
	if x != nil {
		return x.RetryCount
	}
	return 0
}

func (x *TaskDetails) GetCreatedAt() int64 {
	if x != nil {
		return x.CreatedAt
	}
	return 0
}

func (x *TaskDetails) GetUpdatedAt() int64 {
	if x != nil {
		return x.UpdatedAt
	}
	return 0
}

// 用户信息下发
type UserInfoDistribute struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId string `protobuf:"bytes,1,opt,name=userId,proto3" json:"userId,omitempty"` //用户id
	NodeId string `protobuf:"bytes,2,opt,name=nodeId,proto3" json:"nodeId,omitempty"` //节点id
}

func (x *UserInfoDistribute) Reset() {
	*x = UserInfoDistribute{}
	if protoimpl.UnsafeEnabled {
		mi := &file_platform_task_v2_task_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserInfoDistribute) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserInfoDistribute) ProtoMessage() {}

func (x *UserInfoDistribute) ProtoReflect() protoreflect.Message {
	mi := &file_platform_task_v2_task_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserInfoDistribute.ProtoReflect.Descriptor instead.
func (*UserInfoDistribute) Descriptor() ([]byte, []int) {
	return file_platform_task_v2_task_proto_rawDescGZIP(), []int{11}
}

func (x *UserInfoDistribute) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *UserInfoDistribute) GetNodeId() string {
	if x != nil {
		return x.NodeId
	}
	return ""
}

// 用户信息上报
type UserInfoEscalation struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data *v2.EscalationData `protobuf:"bytes,1,opt,name=data,proto3" json:"data,omitempty"` //用户信息
}

func (x *UserInfoEscalation) Reset() {
	*x = UserInfoEscalation{}
	if protoimpl.UnsafeEnabled {
		mi := &file_platform_task_v2_task_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserInfoEscalation) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserInfoEscalation) ProtoMessage() {}

func (x *UserInfoEscalation) ProtoReflect() protoreflect.Message {
	mi := &file_platform_task_v2_task_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserInfoEscalation.ProtoReflect.Descriptor instead.
func (*UserInfoEscalation) Descriptor() ([]byte, []int) {
	return file_platform_task_v2_task_proto_rawDescGZIP(), []int{12}
}

func (x *UserInfoEscalation) GetData() *v2.EscalationData {
	if x != nil {
		return x.Data
	}
	return nil
}

// 节点信息下发
type NodeDistribute struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	NodeId string `protobuf:"bytes,1,opt,name=nodeId,proto3" json:"nodeId,omitempty"` //节点id
}

func (x *NodeDistribute) Reset() {
	*x = NodeDistribute{}
	if protoimpl.UnsafeEnabled {
		mi := &file_platform_task_v2_task_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NodeDistribute) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NodeDistribute) ProtoMessage() {}

func (x *NodeDistribute) ProtoReflect() protoreflect.Message {
	mi := &file_platform_task_v2_task_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NodeDistribute.ProtoReflect.Descriptor instead.
func (*NodeDistribute) Descriptor() ([]byte, []int) {
	return file_platform_task_v2_task_proto_rawDescGZIP(), []int{13}
}

func (x *NodeDistribute) GetNodeId() string {
	if x != nil {
		return x.NodeId
	}
	return ""
}

var File_platform_task_v2_task_proto protoreflect.FileDescriptor

var file_platform_task_v2_task_proto_rawDesc = []byte{
	0x0a, 0x1b, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x2f, 0x74, 0x61, 0x73, 0x6b, 0x2f,
	0x76, 0x32, 0x2f, 0x74, 0x61, 0x73, 0x6b, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x14, 0x61,
	0x70, 0x69, 0x2e, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x2e, 0x74, 0x61, 0x73, 0x6b,
	0x2e, 0x76, 0x32, 0x1a, 0x17, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x2f, 0x76, 0x61,
	0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1a, 0x63, 0x6f,
	0x6d, 0x6d, 0x6f, 0x6e, 0x2f, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2f, 0x76, 0x32, 0x2f, 0x63, 0x6f,
	0x6e, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1a, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e,
	0x2f, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2f, 0x76, 0x32, 0x2f, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1a, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2f, 0x6d, 0x6f, 0x64,
	0x65, 0x6c, 0x2f, 0x76, 0x32, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x22, 0xb2, 0x02, 0x0a, 0x06, 0x41, 0x64, 0x64, 0x52, 0x65, 0x71, 0x12, 0x1c, 0x0a, 0x09, 0x73,
	0x74, 0x61, 0x72, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09,
	0x73, 0x74, 0x61, 0x72, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x72, 0x6f,
	0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x63, 0x72, 0x6f, 0x6e, 0x12, 0x3a, 0x0a,
	0x08, 0x74, 0x61, 0x73, 0x6b, 0x54, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0e, 0x32,
	0x1e, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x2e, 0x74,
	0x61, 0x73, 0x6b, 0x2e, 0x76, 0x32, 0x2e, 0x54, 0x61, 0x73, 0x6b, 0x54, 0x79, 0x70, 0x65, 0x52,
	0x08, 0x74, 0x61, 0x73, 0x6b, 0x54, 0x79, 0x70, 0x65, 0x12, 0x3d, 0x0a, 0x09, 0x74, 0x61, 0x73,
	0x6b, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1f, 0x2e, 0x61,
	0x70, 0x69, 0x2e, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x2e, 0x74, 0x61, 0x73, 0x6b,
	0x2e, 0x76, 0x32, 0x2e, 0x54, 0x61, 0x73, 0x6b, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x52, 0x09, 0x74,
	0x61, 0x73, 0x6b, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x12, 0x20, 0x0a, 0x0b,
	0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x06, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x45,
	0x0a, 0x0b, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x18, 0x07, 0x20,
	0x01, 0x28, 0x0e, 0x32, 0x23, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f,
	0x72, 0x6d, 0x2e, 0x74, 0x61, 0x73, 0x6b, 0x2e, 0x76, 0x32, 0x2e, 0x54, 0x61, 0x73, 0x6b, 0x43,
	0x6f, 0x75, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x52, 0x0b, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e,
	0x74, 0x54, 0x79, 0x70, 0x65, 0x22, 0x0a, 0x0a, 0x08, 0x41, 0x64, 0x64, 0x52, 0x65, 0x70, 0x6c,
	0x79, 0x22, 0xf6, 0x01, 0x0a, 0x0a, 0x47, 0x65, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71,
	0x12, 0x33, 0x0a, 0x04, 0x70, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1f,
	0x2e, 0x61, 0x70, 0x69, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x6d, 0x6f, 0x64, 0x65,
	0x6c, 0x2e, 0x76, 0x32, 0x2e, 0x50, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52,
	0x04, 0x70, 0x61, 0x67, 0x65, 0x12, 0x3a, 0x0a, 0x08, 0x74, 0x61, 0x73, 0x6b, 0x54, 0x79, 0x70,
	0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1e, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x70, 0x6c,
	0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x2e, 0x74, 0x61, 0x73, 0x6b, 0x2e, 0x76, 0x32, 0x2e, 0x54,
	0x61, 0x73, 0x6b, 0x54, 0x79, 0x70, 0x65, 0x52, 0x08, 0x74, 0x61, 0x73, 0x6b, 0x54, 0x79, 0x70,
	0x65, 0x12, 0x3d, 0x0a, 0x09, 0x74, 0x61, 0x73, 0x6b, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x0e, 0x32, 0x1f, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x70, 0x6c, 0x61, 0x74, 0x66,
	0x6f, 0x72, 0x6d, 0x2e, 0x74, 0x61, 0x73, 0x6b, 0x2e, 0x76, 0x32, 0x2e, 0x54, 0x61, 0x73, 0x6b,
	0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x52, 0x09, 0x74, 0x61, 0x73, 0x6b, 0x4d, 0x6f, 0x64, 0x65, 0x6c,
	0x12, 0x38, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0e,
	0x32, 0x20, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x2e,
	0x74, 0x61, 0x73, 0x6b, 0x2e, 0x76, 0x32, 0x2e, 0x54, 0x61, 0x73, 0x6b, 0x53, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0x5b, 0x0a, 0x0c, 0x47, 0x65,
	0x74, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f,
	0x74, 0x61, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c,
	0x12, 0x35, 0x0a, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x21,
	0x2e, 0x61, 0x70, 0x69, 0x2e, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x2e, 0x74, 0x61,
	0x73, 0x6b, 0x2e, 0x76, 0x32, 0x2e, 0x54, 0x61, 0x73, 0x6b, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c,
	0x73, 0x52, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x22, 0x1e, 0x0a, 0x0c, 0x45, 0x78, 0x65, 0x63, 0x75,
	0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x22, 0x10, 0x0a, 0x0e, 0x45, 0x78, 0x65, 0x63, 0x75,
	0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0xe1, 0x02, 0x0a, 0x10, 0x41, 0x64,
	0x64, 0x45, 0x73, 0x63, 0x61, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x12, 0x1c,
	0x0a, 0x09, 0x73, 0x74, 0x61, 0x72, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x09, 0x73, 0x74, 0x61, 0x72, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04,
	0x63, 0x72, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x63, 0x72, 0x6f, 0x6e,
	0x12, 0x3a, 0x0a, 0x08, 0x74, 0x61, 0x73, 0x6b, 0x54, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x0e, 0x32, 0x1e, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72,
	0x6d, 0x2e, 0x74, 0x61, 0x73, 0x6b, 0x2e, 0x76, 0x32, 0x2e, 0x54, 0x61, 0x73, 0x6b, 0x54, 0x79,
	0x70, 0x65, 0x52, 0x08, 0x74, 0x61, 0x73, 0x6b, 0x54, 0x79, 0x70, 0x65, 0x12, 0x3d, 0x0a, 0x09,
	0x74, 0x61, 0x73, 0x6b, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0e, 0x32,
	0x1f, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x2e, 0x74,
	0x61, 0x73, 0x6b, 0x2e, 0x76, 0x32, 0x2e, 0x54, 0x61, 0x73, 0x6b, 0x4d, 0x6f, 0x64, 0x65, 0x6c,
	0x52, 0x09, 0x74, 0x61, 0x73, 0x6b, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x12, 0x37, 0x0a, 0x04, 0x64,
	0x61, 0x74, 0x61, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x61, 0x70, 0x69, 0x2e,
	0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x76, 0x32, 0x2e,
	0x45, 0x73, 0x63, 0x61, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x44, 0x61, 0x74, 0x61, 0x52, 0x04,
	0x64, 0x61, 0x74, 0x61, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74,
	0x69, 0x6f, 0x6e, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72,
	0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x45, 0x0a, 0x0b, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e,
	0x74, 0x54, 0x79, 0x70, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x23, 0x2e, 0x61, 0x70,
	0x69, 0x2e, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x2e, 0x74, 0x61, 0x73, 0x6b, 0x2e,
	0x76, 0x32, 0x2e, 0x54, 0x61, 0x73, 0x6b, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65,
	0x52, 0x0b, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x22, 0x48, 0x0a,
	0x12, 0x41, 0x64, 0x64, 0x45, 0x73, 0x63, 0x61, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65,
	0x70, 0x6c, 0x79, 0x12, 0x32, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x1e, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x6d,
	0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x76, 0x32, 0x2e, 0x53, 0x69, 0x6e, 0x67, 0x65, 0x64, 0x4d, 0x73,
	0x67, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0x46, 0x0a, 0x11, 0x44, 0x69, 0x73, 0x74, 0x72,
	0x69, 0x62, 0x75, 0x74, 0x65, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x71, 0x12, 0x31, 0x0a, 0x04,
	0x75, 0x73, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x61, 0x70, 0x69,
	0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x76, 0x32,
	0x2e, 0x53, 0x79, 0x6e, 0x63, 0x55, 0x73, 0x65, 0x72, 0x52, 0x04, 0x75, 0x73, 0x65, 0x72, 0x22,
	0x15, 0x0a, 0x13, 0x44, 0x69, 0x73, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x55, 0x73, 0x65,
	0x72, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0xf5, 0x03, 0x0a, 0x0b, 0x54, 0x61, 0x73, 0x6b, 0x44,
	0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x73, 0x74, 0x61, 0x72, 0x74, 0x54,
	0x69, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x73, 0x74, 0x61, 0x72, 0x74,
	0x54, 0x69, 0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x72, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x63, 0x72, 0x6f, 0x6e, 0x12, 0x3a, 0x0a, 0x08, 0x74, 0x61, 0x73, 0x6b,
	0x54, 0x79, 0x70, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1e, 0x2e, 0x61, 0x70, 0x69,
	0x2e, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x2e, 0x74, 0x61, 0x73, 0x6b, 0x2e, 0x76,
	0x32, 0x2e, 0x54, 0x61, 0x73, 0x6b, 0x54, 0x79, 0x70, 0x65, 0x52, 0x08, 0x74, 0x61, 0x73, 0x6b,
	0x54, 0x79, 0x70, 0x65, 0x12, 0x3d, 0x0a, 0x09, 0x74, 0x61, 0x73, 0x6b, 0x4d, 0x6f, 0x64, 0x65,
	0x6c, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1f, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x70, 0x6c,
	0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x2e, 0x74, 0x61, 0x73, 0x6b, 0x2e, 0x76, 0x32, 0x2e, 0x54,
	0x61, 0x73, 0x6b, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x52, 0x09, 0x74, 0x61, 0x73, 0x6b, 0x4d, 0x6f,
	0x64, 0x65, 0x6c, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x06, 0x20, 0x01, 0x28,
	0x0c, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72,
	0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65,
	0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x38, 0x0a, 0x06, 0x73, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x20, 0x2e, 0x61, 0x70, 0x69, 0x2e,
	0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x2e, 0x74, 0x61, 0x73, 0x6b, 0x2e, 0x76, 0x32,
	0x2e, 0x54, 0x61, 0x73, 0x6b, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x06, 0x73, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x12, 0x45, 0x0a, 0x0b, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x54, 0x79,
	0x70, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x23, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x70,
	0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x2e, 0x74, 0x61, 0x73, 0x6b, 0x2e, 0x76, 0x32, 0x2e,
	0x54, 0x61, 0x73, 0x6b, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x52, 0x0b, 0x63,
	0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65,
	0x61, 0x73, 0x6f, 0x6e, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x65, 0x61, 0x73,
	0x6f, 0x6e, 0x12, 0x1e, 0x0a, 0x0a, 0x72, 0x65, 0x74, 0x72, 0x79, 0x43, 0x6f, 0x75, 0x6e, 0x74,
	0x18, 0x0b, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x72, 0x65, 0x74, 0x72, 0x79, 0x43, 0x6f, 0x75,
	0x6e, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x18,
	0x0c, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74,
	0x12, 0x1c, 0x0a, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x18, 0x0d, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x22, 0x44,
	0x0a, 0x12, 0x55, 0x73, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x44, 0x69, 0x73, 0x74, 0x72, 0x69,
	0x62, 0x75, 0x74, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06,
	0x6e, 0x6f, 0x64, 0x65, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x6e, 0x6f,
	0x64, 0x65, 0x49, 0x64, 0x22, 0x4d, 0x0a, 0x12, 0x55, 0x73, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f,
	0x45, 0x73, 0x63, 0x61, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x37, 0x0a, 0x04, 0x64, 0x61,
	0x74, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x63,
	0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x76, 0x32, 0x2e, 0x45,
	0x73, 0x63, 0x61, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x44, 0x61, 0x74, 0x61, 0x52, 0x04, 0x64,
	0x61, 0x74, 0x61, 0x22, 0x28, 0x0a, 0x0e, 0x4e, 0x6f, 0x64, 0x65, 0x44, 0x69, 0x73, 0x74, 0x72,
	0x69, 0x62, 0x75, 0x74, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x6e, 0x6f, 0x64, 0x65, 0x49, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x6e, 0x6f, 0x64, 0x65, 0x49, 0x64, 0x2a, 0x4d, 0x0a,
	0x08, 0x54, 0x61, 0x73, 0x6b, 0x54, 0x79, 0x70, 0x65, 0x12, 0x17, 0x0a, 0x13, 0x45, 0x58, 0x45,
	0x43, 0x55, 0x54, 0x45, 0x5f, 0x49, 0x4d, 0x4d, 0x45, 0x44, 0x49, 0x41, 0x54, 0x45, 0x4c, 0x59,
	0x10, 0x00, 0x12, 0x13, 0x0a, 0x0f, 0x44, 0x45, 0x4c, 0x41, 0x59, 0x5f, 0x45, 0x58, 0x45, 0x43,
	0x55, 0x54, 0x49, 0x4f, 0x4e, 0x10, 0x01, 0x12, 0x13, 0x0a, 0x0f, 0x54, 0x49, 0x4d, 0x45, 0x44,
	0x5f, 0x45, 0x58, 0x45, 0x43, 0x55, 0x54, 0x49, 0x4f, 0x4e, 0x10, 0x02, 0x2a, 0x6a, 0x0a, 0x0d,
	0x54, 0x61, 0x73, 0x6b, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x12, 0x0b, 0x0a,
	0x07, 0x75, 0x6e, 0x6b, 0x6e, 0x6f, 0x77, 0x6e, 0x10, 0x00, 0x12, 0x18, 0x0a, 0x14, 0x55, 0x53,
	0x45, 0x52, 0x5f, 0x49, 0x4e, 0x46, 0x4f, 0x5f, 0x44, 0x49, 0x53, 0x54, 0x52, 0x49, 0x42, 0x55,
	0x54, 0x45, 0x10, 0x01, 0x12, 0x18, 0x0a, 0x14, 0x55, 0x53, 0x45, 0x52, 0x5f, 0x49, 0x4e, 0x46,
	0x4f, 0x5f, 0x45, 0x53, 0x43, 0x41, 0x4c, 0x41, 0x54, 0x49, 0x4f, 0x4e, 0x10, 0x02, 0x12, 0x18,
	0x0a, 0x14, 0x4e, 0x4f, 0x44, 0x45, 0x5f, 0x49, 0x4e, 0x46, 0x4f, 0x5f, 0x44, 0x49, 0x53, 0x54,
	0x52, 0x49, 0x42, 0x55, 0x54, 0x45, 0x10, 0x03, 0x2a, 0x32, 0x0a, 0x09, 0x54, 0x61, 0x73, 0x6b,
	0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x12, 0x11, 0x0a, 0x0d, 0x55, 0x4e, 0x4b, 0x4e, 0x4f, 0x57, 0x4e,
	0x5f, 0x4d, 0x4f, 0x44, 0x45, 0x4c, 0x10, 0x00, 0x12, 0x08, 0x0a, 0x04, 0x55, 0x53, 0x45, 0x52,
	0x10, 0x01, 0x12, 0x08, 0x0a, 0x04, 0x4e, 0x4f, 0x44, 0x45, 0x10, 0x02, 0x2a, 0x6d, 0x0a, 0x0a,
	0x54, 0x61, 0x73, 0x6b, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x12, 0x0a, 0x0e, 0x55, 0x4e,
	0x4b, 0x4e, 0x4f, 0x57, 0x4e, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x10, 0x00, 0x12, 0x0b,
	0x0a, 0x07, 0x57, 0x41, 0x49, 0x54, 0x49, 0x4e, 0x47, 0x10, 0x01, 0x12, 0x0f, 0x0a, 0x0b, 0x49,
	0x4e, 0x5f, 0x50, 0x52, 0x4f, 0x47, 0x52, 0x45, 0x53, 0x53, 0x10, 0x02, 0x12, 0x14, 0x0a, 0x10,
	0x45, 0x58, 0x45, 0x43, 0x55, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x46, 0x41, 0x49, 0x4c, 0x45, 0x44,
	0x10, 0x03, 0x12, 0x17, 0x0a, 0x13, 0x45, 0x58, 0x45, 0x43, 0x55, 0x54, 0x49, 0x4f, 0x4e, 0x5f,
	0x53, 0x55, 0x43, 0x43, 0x45, 0x45, 0x44, 0x45, 0x44, 0x10, 0x04, 0x32, 0xbc, 0x03, 0x0a, 0x04,
	0x54, 0x61, 0x73, 0x6b, 0x12, 0x43, 0x0a, 0x03, 0x41, 0x64, 0x64, 0x12, 0x1c, 0x2e, 0x61, 0x70,
	0x69, 0x2e, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x2e, 0x74, 0x61, 0x73, 0x6b, 0x2e,
	0x76, 0x32, 0x2e, 0x41, 0x64, 0x64, 0x52, 0x65, 0x71, 0x1a, 0x1e, 0x2e, 0x61, 0x70, 0x69, 0x2e,
	0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x2e, 0x74, 0x61, 0x73, 0x6b, 0x2e, 0x76, 0x32,
	0x2e, 0x41, 0x64, 0x64, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x4f, 0x0a, 0x07, 0x47, 0x65, 0x74,
	0x4c, 0x69, 0x73, 0x74, 0x12, 0x20, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x70, 0x6c, 0x61, 0x74, 0x66,
	0x6f, 0x72, 0x6d, 0x2e, 0x74, 0x61, 0x73, 0x6b, 0x2e, 0x76, 0x32, 0x2e, 0x47, 0x65, 0x74, 0x4c,
	0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x1a, 0x22, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x70, 0x6c, 0x61,
	0x74, 0x66, 0x6f, 0x72, 0x6d, 0x2e, 0x74, 0x61, 0x73, 0x6b, 0x2e, 0x76, 0x32, 0x2e, 0x47, 0x65,
	0x74, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x55, 0x0a, 0x09, 0x45, 0x78,
	0x65, 0x63, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x22, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x70, 0x6c,
	0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x2e, 0x74, 0x61, 0x73, 0x6b, 0x2e, 0x76, 0x32, 0x2e, 0x45,
	0x78, 0x65, 0x63, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x1a, 0x24, 0x2e, 0x61, 0x70,
	0x69, 0x2e, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x2e, 0x74, 0x61, 0x73, 0x6b, 0x2e,
	0x76, 0x32, 0x2e, 0x45, 0x78, 0x65, 0x63, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x70, 0x6c,
	0x79, 0x12, 0x61, 0x0a, 0x0d, 0x41, 0x64, 0x64, 0x45, 0x73, 0x63, 0x61, 0x6c, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x12, 0x26, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72,
	0x6d, 0x2e, 0x74, 0x61, 0x73, 0x6b, 0x2e, 0x76, 0x32, 0x2e, 0x41, 0x64, 0x64, 0x45, 0x73, 0x63,
	0x61, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x1a, 0x28, 0x2e, 0x61, 0x70, 0x69,
	0x2e, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x2e, 0x74, 0x61, 0x73, 0x6b, 0x2e, 0x76,
	0x32, 0x2e, 0x41, 0x64, 0x64, 0x45, 0x73, 0x63, 0x61, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52,
	0x65, 0x70, 0x6c, 0x79, 0x12, 0x64, 0x0a, 0x0e, 0x44, 0x69, 0x73, 0x74, 0x72, 0x69, 0x62, 0x75,
	0x74, 0x65, 0x55, 0x73, 0x65, 0x72, 0x12, 0x27, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x70, 0x6c, 0x61,
	0x74, 0x66, 0x6f, 0x72, 0x6d, 0x2e, 0x74, 0x61, 0x73, 0x6b, 0x2e, 0x76, 0x32, 0x2e, 0x44, 0x69,
	0x73, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x71, 0x1a,
	0x29, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x2e, 0x74,
	0x61, 0x73, 0x6b, 0x2e, 0x76, 0x32, 0x2e, 0x44, 0x69, 0x73, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74,
	0x65, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x42, 0x51, 0x0a, 0x14, 0x61, 0x70,
	0x69, 0x2e, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x2e, 0x74, 0x61, 0x73, 0x6b, 0x2e,
	0x76, 0x32, 0x50, 0x01, 0x5a, 0x37, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d,
	0x2f, 0x73, 0x70, 0x61, 0x72, 0x6b, 0x2d, 0x63, 0x6f, 0x6d, 0x6d, 0x2f, 0x73, 0x70, 0x61, 0x72,
	0x6b, 0x2d, 0x61, 0x70, 0x69, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f,
	0x72, 0x6d, 0x2f, 0x74, 0x61, 0x73, 0x6b, 0x2f, 0x76, 0x32, 0x3b, 0x76, 0x32, 0x62, 0x06, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_platform_task_v2_task_proto_rawDescOnce sync.Once
	file_platform_task_v2_task_proto_rawDescData = file_platform_task_v2_task_proto_rawDesc
)

func file_platform_task_v2_task_proto_rawDescGZIP() []byte {
	file_platform_task_v2_task_proto_rawDescOnce.Do(func() {
		file_platform_task_v2_task_proto_rawDescData = protoimpl.X.CompressGZIP(file_platform_task_v2_task_proto_rawDescData)
	})
	return file_platform_task_v2_task_proto_rawDescData
}

var file_platform_task_v2_task_proto_enumTypes = make([]protoimpl.EnumInfo, 4)
var file_platform_task_v2_task_proto_msgTypes = make([]protoimpl.MessageInfo, 14)
var file_platform_task_v2_task_proto_goTypes = []interface{}{
	(TaskType)(0),               // 0: api.platform.task.v2.TaskType
	(TaskCountType)(0),          // 1: api.platform.task.v2.TaskCountType
	(TaskModel)(0),              // 2: api.platform.task.v2.TaskModel
	(TaskStatus)(0),             // 3: api.platform.task.v2.TaskStatus
	(*AddReq)(nil),              // 4: api.platform.task.v2.AddReq
	(*AddReply)(nil),            // 5: api.platform.task.v2.AddReply
	(*GetListReq)(nil),          // 6: api.platform.task.v2.GetListReq
	(*GetListReply)(nil),        // 7: api.platform.task.v2.GetListReply
	(*ExecutionReq)(nil),        // 8: api.platform.task.v2.ExecutionReq
	(*ExecutionReply)(nil),      // 9: api.platform.task.v2.ExecutionReply
	(*AddEscalationReq)(nil),    // 10: api.platform.task.v2.AddEscalationReq
	(*AddEscalationReply)(nil),  // 11: api.platform.task.v2.AddEscalationReply
	(*DistributeUserReq)(nil),   // 12: api.platform.task.v2.DistributeUserReq
	(*DistributeUserReply)(nil), // 13: api.platform.task.v2.DistributeUserReply
	(*TaskDetails)(nil),         // 14: api.platform.task.v2.TaskDetails
	(*UserInfoDistribute)(nil),  // 15: api.platform.task.v2.UserInfoDistribute
	(*UserInfoEscalation)(nil),  // 16: api.platform.task.v2.UserInfoEscalation
	(*NodeDistribute)(nil),      // 17: api.platform.task.v2.NodeDistribute
	(*v2.Pagination)(nil),       // 18: api.common.model.v2.Pagination
	(*v2.EscalationData)(nil),   // 19: api.common.model.v2.EscalationData
	(*v2.SingedMsg)(nil),        // 20: api.common.model.v2.SingedMsg
	(*v2.SyncUser)(nil),         // 21: api.common.model.v2.SyncUser
}
var file_platform_task_v2_task_proto_depIdxs = []int32{
	0,  // 0: api.platform.task.v2.AddReq.taskType:type_name -> api.platform.task.v2.TaskType
	2,  // 1: api.platform.task.v2.AddReq.taskModel:type_name -> api.platform.task.v2.TaskModel
	1,  // 2: api.platform.task.v2.AddReq.contentType:type_name -> api.platform.task.v2.TaskCountType
	18, // 3: api.platform.task.v2.GetListReq.page:type_name -> api.common.model.v2.Pagination
	0,  // 4: api.platform.task.v2.GetListReq.taskType:type_name -> api.platform.task.v2.TaskType
	2,  // 5: api.platform.task.v2.GetListReq.taskModel:type_name -> api.platform.task.v2.TaskModel
	3,  // 6: api.platform.task.v2.GetListReq.status:type_name -> api.platform.task.v2.TaskStatus
	14, // 7: api.platform.task.v2.GetListReply.list:type_name -> api.platform.task.v2.TaskDetails
	0,  // 8: api.platform.task.v2.AddEscalationReq.taskType:type_name -> api.platform.task.v2.TaskType
	2,  // 9: api.platform.task.v2.AddEscalationReq.taskModel:type_name -> api.platform.task.v2.TaskModel
	19, // 10: api.platform.task.v2.AddEscalationReq.data:type_name -> api.common.model.v2.EscalationData
	1,  // 11: api.platform.task.v2.AddEscalationReq.contentType:type_name -> api.platform.task.v2.TaskCountType
	20, // 12: api.platform.task.v2.AddEscalationReply.data:type_name -> api.common.model.v2.SingedMsg
	21, // 13: api.platform.task.v2.DistributeUserReq.user:type_name -> api.common.model.v2.SyncUser
	0,  // 14: api.platform.task.v2.TaskDetails.taskType:type_name -> api.platform.task.v2.TaskType
	2,  // 15: api.platform.task.v2.TaskDetails.taskModel:type_name -> api.platform.task.v2.TaskModel
	3,  // 16: api.platform.task.v2.TaskDetails.status:type_name -> api.platform.task.v2.TaskStatus
	1,  // 17: api.platform.task.v2.TaskDetails.contentType:type_name -> api.platform.task.v2.TaskCountType
	19, // 18: api.platform.task.v2.UserInfoEscalation.data:type_name -> api.common.model.v2.EscalationData
	4,  // 19: api.platform.task.v2.Task.Add:input_type -> api.platform.task.v2.AddReq
	6,  // 20: api.platform.task.v2.Task.GetList:input_type -> api.platform.task.v2.GetListReq
	8,  // 21: api.platform.task.v2.Task.Execution:input_type -> api.platform.task.v2.ExecutionReq
	10, // 22: api.platform.task.v2.Task.AddEscalation:input_type -> api.platform.task.v2.AddEscalationReq
	12, // 23: api.platform.task.v2.Task.DistributeUser:input_type -> api.platform.task.v2.DistributeUserReq
	5,  // 24: api.platform.task.v2.Task.Add:output_type -> api.platform.task.v2.AddReply
	7,  // 25: api.platform.task.v2.Task.GetList:output_type -> api.platform.task.v2.GetListReply
	9,  // 26: api.platform.task.v2.Task.Execution:output_type -> api.platform.task.v2.ExecutionReply
	11, // 27: api.platform.task.v2.Task.AddEscalation:output_type -> api.platform.task.v2.AddEscalationReply
	13, // 28: api.platform.task.v2.Task.DistributeUser:output_type -> api.platform.task.v2.DistributeUserReply
	24, // [24:29] is the sub-list for method output_type
	19, // [19:24] is the sub-list for method input_type
	19, // [19:19] is the sub-list for extension type_name
	19, // [19:19] is the sub-list for extension extendee
	0,  // [0:19] is the sub-list for field type_name
}

func init() { file_platform_task_v2_task_proto_init() }
func file_platform_task_v2_task_proto_init() {
	if File_platform_task_v2_task_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_platform_task_v2_task_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_platform_task_v2_task_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_platform_task_v2_task_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetListReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_platform_task_v2_task_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetListReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_platform_task_v2_task_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ExecutionReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_platform_task_v2_task_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ExecutionReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_platform_task_v2_task_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddEscalationReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_platform_task_v2_task_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddEscalationReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_platform_task_v2_task_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DistributeUserReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_platform_task_v2_task_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DistributeUserReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_platform_task_v2_task_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TaskDetails); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_platform_task_v2_task_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserInfoDistribute); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_platform_task_v2_task_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserInfoEscalation); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_platform_task_v2_task_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NodeDistribute); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_platform_task_v2_task_proto_rawDesc,
			NumEnums:      4,
			NumMessages:   14,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_platform_task_v2_task_proto_goTypes,
		DependencyIndexes: file_platform_task_v2_task_proto_depIdxs,
		EnumInfos:         file_platform_task_v2_task_proto_enumTypes,
		MessageInfos:      file_platform_task_v2_task_proto_msgTypes,
	}.Build()
	File_platform_task_v2_task_proto = out.File
	file_platform_task_v2_task_proto_rawDesc = nil
	file_platform_task_v2_task_proto_goTypes = nil
	file_platform_task_v2_task_proto_depIdxs = nil
}
