// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.31.0
// 	protoc        v4.25.0
// source: api/platform/tenant/v2/tenant_error.proto

// 定义包名

package v2

import (
	_ "github.com/go-kratos/kratos/v2/errors"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type TenantErrorReason int32

const (
	// 创建租户失败
	TenantErrorReason_CREATE_TENANT_ERROR TenantErrorReason = 0
	// 更新租户信息失败
	TenantErrorReason_UPDATE_TENANT_ERROR TenantErrorReason = 1
	// 绑定手机号失败
	TenantErrorReason_BINDING_PHONE_ERROR TenantErrorReason = 2
	// 删除租户
	TenantErrorReason_DELETE_TENANT_ERROR TenantErrorReason = 3
	// 查询租户失败
	TenantErrorReason_FIND_TENANT_BY_ID_ERROR TenantErrorReason = 4
	// 获取租户列表失败
	TenantErrorReason_GET_TENANT_LIST_ERROR TenantErrorReason = 5
	// 根据关联用户查询租户失败
	TenantErrorReason_FIND_TENANT_BY_ASSOCIATED_USERS_ID_ERROR TenantErrorReason = 6
	// 租户已存在
	TenantErrorReason_TENANT_ALREADY_EXISTS TenantErrorReason = 7
	// 不存在
	TenantErrorReason_TENANT_NOT_FOUND TenantErrorReason = 8
	// Verification code verification failed
	TenantErrorReason_VERIFICATION_CODE_VERIFICATION_FAILED TenantErrorReason = 9
	// 序列化数据结构失败
	TenantErrorReason_MARSHAL_TENANT_DATA_ENCODING_FAIL TenantErrorReason = 10
	// 加密请求信息失败encryption
	TenantErrorReason_ENCRYPTION_REQUEST_OPTION_FAIL TenantErrorReason = 11
	// 手机验证码错误
	TenantErrorReason_MOBILE_VERIFICATION_CODE_ERROR TenantErrorReason = 12
	// 申请参数错误
	TenantErrorReason_APPLICATION_PARAMETER_ERROR TenantErrorReason = 13
	// 申请失败
	TenantErrorReason_APPLICATION_ERROR TenantErrorReason = 14
	// 租户未开通
	TenantErrorReason_TENANT_NOT_OPENED TenantErrorReason = 15
	// 申请审批中
	TenantErrorReason_APPLICATION_UNDER_REVIEW TenantErrorReason = 16
	// 网站已开通
	TenantErrorReason_THE_WEBSITE_HAS_BEEN_OPENED TenantErrorReason = 17
	// 申请审核中，请勿重复提交
	TenantErrorReason_TENANT_MULTIPLE_APPLICATION TenantErrorReason = 18
)

// Enum value maps for TenantErrorReason.
var (
	TenantErrorReason_name = map[int32]string{
		0:  "CREATE_TENANT_ERROR",
		1:  "UPDATE_TENANT_ERROR",
		2:  "BINDING_PHONE_ERROR",
		3:  "DELETE_TENANT_ERROR",
		4:  "FIND_TENANT_BY_ID_ERROR",
		5:  "GET_TENANT_LIST_ERROR",
		6:  "FIND_TENANT_BY_ASSOCIATED_USERS_ID_ERROR",
		7:  "TENANT_ALREADY_EXISTS",
		8:  "TENANT_NOT_FOUND",
		9:  "VERIFICATION_CODE_VERIFICATION_FAILED",
		10: "MARSHAL_TENANT_DATA_ENCODING_FAIL",
		11: "ENCRYPTION_REQUEST_OPTION_FAIL",
		12: "MOBILE_VERIFICATION_CODE_ERROR",
		13: "APPLICATION_PARAMETER_ERROR",
		14: "APPLICATION_ERROR",
		15: "TENANT_NOT_OPENED",
		16: "APPLICATION_UNDER_REVIEW",
		17: "THE_WEBSITE_HAS_BEEN_OPENED",
		18: "TENANT_MULTIPLE_APPLICATION",
	}
	TenantErrorReason_value = map[string]int32{
		"CREATE_TENANT_ERROR":                      0,
		"UPDATE_TENANT_ERROR":                      1,
		"BINDING_PHONE_ERROR":                      2,
		"DELETE_TENANT_ERROR":                      3,
		"FIND_TENANT_BY_ID_ERROR":                  4,
		"GET_TENANT_LIST_ERROR":                    5,
		"FIND_TENANT_BY_ASSOCIATED_USERS_ID_ERROR": 6,
		"TENANT_ALREADY_EXISTS":                    7,
		"TENANT_NOT_FOUND":                         8,
		"VERIFICATION_CODE_VERIFICATION_FAILED":    9,
		"MARSHAL_TENANT_DATA_ENCODING_FAIL":        10,
		"ENCRYPTION_REQUEST_OPTION_FAIL":           11,
		"MOBILE_VERIFICATION_CODE_ERROR":           12,
		"APPLICATION_PARAMETER_ERROR":              13,
		"APPLICATION_ERROR":                        14,
		"TENANT_NOT_OPENED":                        15,
		"APPLICATION_UNDER_REVIEW":                 16,
		"THE_WEBSITE_HAS_BEEN_OPENED":              17,
		"TENANT_MULTIPLE_APPLICATION":              18,
	}
)

func (x TenantErrorReason) Enum() *TenantErrorReason {
	p := new(TenantErrorReason)
	*p = x
	return p
}

func (x TenantErrorReason) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (TenantErrorReason) Descriptor() protoreflect.EnumDescriptor {
	return file_api_platform_tenant_v2_tenant_error_proto_enumTypes[0].Descriptor()
}

func (TenantErrorReason) Type() protoreflect.EnumType {
	return &file_api_platform_tenant_v2_tenant_error_proto_enumTypes[0]
}

func (x TenantErrorReason) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use TenantErrorReason.Descriptor instead.
func (TenantErrorReason) EnumDescriptor() ([]byte, []int) {
	return file_api_platform_tenant_v2_tenant_error_proto_rawDescGZIP(), []int{0}
}

var File_api_platform_tenant_v2_tenant_error_proto protoreflect.FileDescriptor

var file_api_platform_tenant_v2_tenant_error_proto_rawDesc = []byte{
	0x0a, 0x29, 0x61, 0x70, 0x69, 0x2f, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x2f, 0x74,
	0x65, 0x6e, 0x61, 0x6e, 0x74, 0x2f, 0x76, 0x32, 0x2f, 0x74, 0x65, 0x6e, 0x61, 0x6e, 0x74, 0x5f,
	0x65, 0x72, 0x72, 0x6f, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x16, 0x61, 0x70, 0x69,
	0x2e, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x2e, 0x74, 0x65, 0x6e, 0x61, 0x6e, 0x74,
	0x2e, 0x76, 0x32, 0x1a, 0x13, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x73, 0x2f, 0x65, 0x72, 0x72, 0x6f,
	0x72, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2a, 0xcf, 0x05, 0x0a, 0x11, 0x54, 0x65, 0x6e,
	0x61, 0x6e, 0x74, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x52, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x12, 0x1d,
	0x0a, 0x13, 0x43, 0x52, 0x45, 0x41, 0x54, 0x45, 0x5f, 0x54, 0x45, 0x4e, 0x41, 0x4e, 0x54, 0x5f,
	0x45, 0x52, 0x52, 0x4f, 0x52, 0x10, 0x00, 0x1a, 0x04, 0xa8, 0x45, 0x91, 0x03, 0x12, 0x1d, 0x0a,
	0x13, 0x55, 0x50, 0x44, 0x41, 0x54, 0x45, 0x5f, 0x54, 0x45, 0x4e, 0x41, 0x4e, 0x54, 0x5f, 0x45,
	0x52, 0x52, 0x4f, 0x52, 0x10, 0x01, 0x1a, 0x04, 0xa8, 0x45, 0xf9, 0x03, 0x12, 0x1d, 0x0a, 0x13,
	0x42, 0x49, 0x4e, 0x44, 0x49, 0x4e, 0x47, 0x5f, 0x50, 0x48, 0x4f, 0x4e, 0x45, 0x5f, 0x45, 0x52,
	0x52, 0x4f, 0x52, 0x10, 0x02, 0x1a, 0x04, 0xa8, 0x45, 0xf9, 0x03, 0x12, 0x1d, 0x0a, 0x13, 0x44,
	0x45, 0x4c, 0x45, 0x54, 0x45, 0x5f, 0x54, 0x45, 0x4e, 0x41, 0x4e, 0x54, 0x5f, 0x45, 0x52, 0x52,
	0x4f, 0x52, 0x10, 0x03, 0x1a, 0x04, 0xa8, 0x45, 0xf9, 0x03, 0x12, 0x21, 0x0a, 0x17, 0x46, 0x49,
	0x4e, 0x44, 0x5f, 0x54, 0x45, 0x4e, 0x41, 0x4e, 0x54, 0x5f, 0x42, 0x59, 0x5f, 0x49, 0x44, 0x5f,
	0x45, 0x52, 0x52, 0x4f, 0x52, 0x10, 0x04, 0x1a, 0x04, 0xa8, 0x45, 0xf9, 0x03, 0x12, 0x1f, 0x0a,
	0x15, 0x47, 0x45, 0x54, 0x5f, 0x54, 0x45, 0x4e, 0x41, 0x4e, 0x54, 0x5f, 0x4c, 0x49, 0x53, 0x54,
	0x5f, 0x45, 0x52, 0x52, 0x4f, 0x52, 0x10, 0x05, 0x1a, 0x04, 0xa8, 0x45, 0xf9, 0x03, 0x12, 0x32,
	0x0a, 0x28, 0x46, 0x49, 0x4e, 0x44, 0x5f, 0x54, 0x45, 0x4e, 0x41, 0x4e, 0x54, 0x5f, 0x42, 0x59,
	0x5f, 0x41, 0x53, 0x53, 0x4f, 0x43, 0x49, 0x41, 0x54, 0x45, 0x44, 0x5f, 0x55, 0x53, 0x45, 0x52,
	0x53, 0x5f, 0x49, 0x44, 0x5f, 0x45, 0x52, 0x52, 0x4f, 0x52, 0x10, 0x06, 0x1a, 0x04, 0xa8, 0x45,
	0xf9, 0x03, 0x12, 0x1f, 0x0a, 0x15, 0x54, 0x45, 0x4e, 0x41, 0x4e, 0x54, 0x5f, 0x41, 0x4c, 0x52,
	0x45, 0x41, 0x44, 0x59, 0x5f, 0x45, 0x58, 0x49, 0x53, 0x54, 0x53, 0x10, 0x07, 0x1a, 0x04, 0xa8,
	0x45, 0x91, 0x03, 0x12, 0x1a, 0x0a, 0x10, 0x54, 0x45, 0x4e, 0x41, 0x4e, 0x54, 0x5f, 0x4e, 0x4f,
	0x54, 0x5f, 0x46, 0x4f, 0x55, 0x4e, 0x44, 0x10, 0x08, 0x1a, 0x04, 0xa8, 0x45, 0x94, 0x03, 0x12,
	0x2f, 0x0a, 0x25, 0x56, 0x45, 0x52, 0x49, 0x46, 0x49, 0x43, 0x41, 0x54, 0x49, 0x4f, 0x4e, 0x5f,
	0x43, 0x4f, 0x44, 0x45, 0x5f, 0x56, 0x45, 0x52, 0x49, 0x46, 0x49, 0x43, 0x41, 0x54, 0x49, 0x4f,
	0x4e, 0x5f, 0x46, 0x41, 0x49, 0x4c, 0x45, 0x44, 0x10, 0x09, 0x1a, 0x04, 0xa8, 0x45, 0x94, 0x03,
	0x12, 0x2b, 0x0a, 0x21, 0x4d, 0x41, 0x52, 0x53, 0x48, 0x41, 0x4c, 0x5f, 0x54, 0x45, 0x4e, 0x41,
	0x4e, 0x54, 0x5f, 0x44, 0x41, 0x54, 0x41, 0x5f, 0x45, 0x4e, 0x43, 0x4f, 0x44, 0x49, 0x4e, 0x47,
	0x5f, 0x46, 0x41, 0x49, 0x4c, 0x10, 0x0a, 0x1a, 0x04, 0xa8, 0x45, 0xf9, 0x03, 0x12, 0x28, 0x0a,
	0x1e, 0x45, 0x4e, 0x43, 0x52, 0x59, 0x50, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x52, 0x45, 0x51, 0x55,
	0x45, 0x53, 0x54, 0x5f, 0x4f, 0x50, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x46, 0x41, 0x49, 0x4c, 0x10,
	0x0b, 0x1a, 0x04, 0xa8, 0x45, 0x91, 0x03, 0x12, 0x28, 0x0a, 0x1e, 0x4d, 0x4f, 0x42, 0x49, 0x4c,
	0x45, 0x5f, 0x56, 0x45, 0x52, 0x49, 0x46, 0x49, 0x43, 0x41, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x43,
	0x4f, 0x44, 0x45, 0x5f, 0x45, 0x52, 0x52, 0x4f, 0x52, 0x10, 0x0c, 0x1a, 0x04, 0xa8, 0x45, 0xf9,
	0x03, 0x12, 0x25, 0x0a, 0x1b, 0x41, 0x50, 0x50, 0x4c, 0x49, 0x43, 0x41, 0x54, 0x49, 0x4f, 0x4e,
	0x5f, 0x50, 0x41, 0x52, 0x41, 0x4d, 0x45, 0x54, 0x45, 0x52, 0x5f, 0x45, 0x52, 0x52, 0x4f, 0x52,
	0x10, 0x0d, 0x1a, 0x04, 0xa8, 0x45, 0xf9, 0x03, 0x12, 0x1b, 0x0a, 0x11, 0x41, 0x50, 0x50, 0x4c,
	0x49, 0x43, 0x41, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x45, 0x52, 0x52, 0x4f, 0x52, 0x10, 0x0e, 0x1a,
	0x04, 0xa8, 0x45, 0xf9, 0x03, 0x12, 0x1b, 0x0a, 0x11, 0x54, 0x45, 0x4e, 0x41, 0x4e, 0x54, 0x5f,
	0x4e, 0x4f, 0x54, 0x5f, 0x4f, 0x50, 0x45, 0x4e, 0x45, 0x44, 0x10, 0x0f, 0x1a, 0x04, 0xa8, 0x45,
	0x94, 0x03, 0x12, 0x22, 0x0a, 0x18, 0x41, 0x50, 0x50, 0x4c, 0x49, 0x43, 0x41, 0x54, 0x49, 0x4f,
	0x4e, 0x5f, 0x55, 0x4e, 0x44, 0x45, 0x52, 0x5f, 0x52, 0x45, 0x56, 0x49, 0x45, 0x57, 0x10, 0x10,
	0x1a, 0x04, 0xa8, 0x45, 0xf9, 0x03, 0x12, 0x25, 0x0a, 0x1b, 0x54, 0x48, 0x45, 0x5f, 0x57, 0x45,
	0x42, 0x53, 0x49, 0x54, 0x45, 0x5f, 0x48, 0x41, 0x53, 0x5f, 0x42, 0x45, 0x45, 0x4e, 0x5f, 0x4f,
	0x50, 0x45, 0x4e, 0x45, 0x44, 0x10, 0x11, 0x1a, 0x04, 0xa8, 0x45, 0xf9, 0x03, 0x12, 0x25, 0x0a,
	0x1b, 0x54, 0x45, 0x4e, 0x41, 0x4e, 0x54, 0x5f, 0x4d, 0x55, 0x4c, 0x54, 0x49, 0x50, 0x4c, 0x45,
	0x5f, 0x41, 0x50, 0x50, 0x4c, 0x49, 0x43, 0x41, 0x54, 0x49, 0x4f, 0x4e, 0x10, 0x12, 0x1a, 0x04,
	0xa8, 0x45, 0xf9, 0x03, 0x1a, 0x04, 0xa0, 0x45, 0xf4, 0x03, 0x42, 0x55, 0x0a, 0x16, 0x61, 0x70,
	0x69, 0x2e, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x2e, 0x74, 0x65, 0x6e, 0x61, 0x6e,
	0x74, 0x2e, 0x76, 0x32, 0x50, 0x01, 0x5a, 0x39, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63,
	0x6f, 0x6d, 0x2f, 0x73, 0x70, 0x61, 0x72, 0x6b, 0x2d, 0x63, 0x6f, 0x6d, 0x6d, 0x2f, 0x73, 0x70,
	0x61, 0x72, 0x6b, 0x2d, 0x61, 0x70, 0x69, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x70, 0x6c, 0x61, 0x74,
	0x66, 0x6f, 0x72, 0x6d, 0x2f, 0x74, 0x65, 0x6e, 0x61, 0x6e, 0x74, 0x2f, 0x76, 0x32, 0x3b, 0x76,
	0x32, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_api_platform_tenant_v2_tenant_error_proto_rawDescOnce sync.Once
	file_api_platform_tenant_v2_tenant_error_proto_rawDescData = file_api_platform_tenant_v2_tenant_error_proto_rawDesc
)

func file_api_platform_tenant_v2_tenant_error_proto_rawDescGZIP() []byte {
	file_api_platform_tenant_v2_tenant_error_proto_rawDescOnce.Do(func() {
		file_api_platform_tenant_v2_tenant_error_proto_rawDescData = protoimpl.X.CompressGZIP(file_api_platform_tenant_v2_tenant_error_proto_rawDescData)
	})
	return file_api_platform_tenant_v2_tenant_error_proto_rawDescData
}

var file_api_platform_tenant_v2_tenant_error_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_api_platform_tenant_v2_tenant_error_proto_goTypes = []interface{}{
	(TenantErrorReason)(0), // 0: api.platform.tenant.v2.TenantErrorReason
}
var file_api_platform_tenant_v2_tenant_error_proto_depIdxs = []int32{
	0, // [0:0] is the sub-list for method output_type
	0, // [0:0] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_api_platform_tenant_v2_tenant_error_proto_init() }
func file_api_platform_tenant_v2_tenant_error_proto_init() {
	if File_api_platform_tenant_v2_tenant_error_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_api_platform_tenant_v2_tenant_error_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   0,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_api_platform_tenant_v2_tenant_error_proto_goTypes,
		DependencyIndexes: file_api_platform_tenant_v2_tenant_error_proto_depIdxs,
		EnumInfos:         file_api_platform_tenant_v2_tenant_error_proto_enumTypes,
	}.Build()
	File_api_platform_tenant_v2_tenant_error_proto = out.File
	file_api_platform_tenant_v2_tenant_error_proto_rawDesc = nil
	file_api_platform_tenant_v2_tenant_error_proto_goTypes = nil
	file_api_platform_tenant_v2_tenant_error_proto_depIdxs = nil
}
